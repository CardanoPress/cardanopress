"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});var K0=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function b7(V3){return V3&&V3.__esModule&&Object.prototype.hasOwnProperty.call(V3,"default")?V3.default:V3}var n8={exports:{}},W0={exports:{}},Q6;function g7(){return Q6||(Q6=1,function(V3){(function(q3){V3.exports&&(V3.exports=q3),q3["encoding-indexes"]={big5:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,17392,19506,17923,17830,17784,160359,19831,17843,162993,19682,163013,15253,18230,18244,19527,19520,148159,144919,160594,159371,159954,19543,172881,18255,17882,19589,162924,19719,19108,18081,158499,29221,154196,137827,146950,147297,26189,22267,null,32149,22813,166841,15860,38708,162799,23515,138590,23204,13861,171696,23249,23479,23804,26478,34195,170309,29793,29853,14453,138579,145054,155681,16108,153822,15093,31484,40855,147809,166157,143850,133770,143966,17162,33924,40854,37935,18736,34323,22678,38730,37400,31184,31282,26208,27177,34973,29772,31685,26498,31276,21071,36934,13542,29636,155065,29894,40903,22451,18735,21580,16689,145038,22552,31346,162661,35727,18094,159368,16769,155033,31662,140476,40904,140481,140489,140492,40905,34052,144827,16564,40906,17633,175615,25281,28782,40907,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,12736,12737,12738,12739,12740,131340,12741,131281,131277,12742,12743,131275,139240,12744,131274,12745,12746,12747,12748,131342,12749,12750,256,193,461,192,274,201,282,200,332,211,465,210,null,7870,null,7872,202,257,225,462,224,593,275,233,283,232,299,237,464,236,333,243,466,242,363,250,468,249,470,472,474,476,252,null,7871,null,7873,234,609,9178,9179,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,172969,135493,null,25866,null,null,20029,28381,40270,37343,null,null,161589,25745,20250,20264,20392,20822,20852,20892,20964,21153,21160,21307,21326,21457,21464,22242,22768,22788,22791,22834,22836,23398,23454,23455,23706,24198,24635,25993,26622,26628,26725,27982,28860,30005,32420,32428,32442,32455,32463,32479,32518,32567,33402,33487,33647,35270,35774,35810,36710,36711,36718,29713,31996,32205,26950,31433,21031,null,null,null,null,37260,30904,37214,32956,null,36107,33014,133607,null,null,32927,40647,19661,40393,40460,19518,171510,159758,40458,172339,13761,null,28314,33342,29977,null,18705,39532,39567,40857,31111,164972,138698,132560,142054,20004,20097,20096,20103,20159,20203,20279,13388,20413,15944,20483,20616,13437,13459,13477,20870,22789,20955,20988,20997,20105,21113,21136,21287,13767,21417,13649,21424,13651,21442,21539,13677,13682,13953,21651,21667,21684,21689,21712,21743,21784,21795,21800,13720,21823,13733,13759,21975,13765,163204,21797,null,134210,134421,151851,21904,142534,14828,131905,36422,150968,169189,16467,164030,30586,142392,14900,18389,164189,158194,151018,25821,134524,135092,134357,135412,25741,36478,134806,134155,135012,142505,164438,148691,null,134470,170573,164073,18420,151207,142530,39602,14951,169460,16365,13574,152263,169940,161992,142660,40302,38933,null,17369,155813,25780,21731,142668,142282,135287,14843,135279,157402,157462,162208,25834,151634,134211,36456,139681,166732,132913,null,18443,131497,16378,22643,142733,null,148936,132348,155799,134988,134550,21881,16571,17338,null,19124,141926,135325,33194,39157,134556,25465,14846,141173,36288,22177,25724,15939,null,173569,134665,142031,142537,null,135368,145858,14738,14854,164507,13688,155209,139463,22098,134961,142514,169760,13500,27709,151099,null,null,161140,142987,139784,173659,167117,134778,134196,157724,32659,135375,141315,141625,13819,152035,134796,135053,134826,16275,134960,134471,135503,134732,null,134827,134057,134472,135360,135485,16377,140950,25650,135085,144372,161337,142286,134526,134527,142417,142421,14872,134808,135367,134958,173618,158544,167122,167321,167114,38314,21708,33476,21945,null,171715,39974,39606,161630,142830,28992,33133,33004,23580,157042,33076,14231,21343,164029,37302,134906,134671,134775,134907,13789,151019,13833,134358,22191,141237,135369,134672,134776,135288,135496,164359,136277,134777,151120,142756,23124,135197,135198,135413,135414,22428,134673,161428,164557,135093,134779,151934,14083,135094,135552,152280,172733,149978,137274,147831,164476,22681,21096,13850,153405,31666,23400,18432,19244,40743,18919,39967,39821,154484,143677,22011,13810,22153,20008,22786,138177,194680,38737,131206,20059,20155,13630,23587,24401,24516,14586,25164,25909,27514,27701,27706,28780,29227,20012,29357,149737,32594,31035,31993,32595,156266,13505,null,156491,32770,32896,157202,158033,21341,34916,35265,161970,35744,36125,38021,38264,38271,38376,167439,38886,39029,39118,39134,39267,17e4,40060,40479,40644,27503,63751,20023,131207,38429,25143,38050,null,20539,28158,171123,40870,15817,34959,147790,28791,23797,19232,152013,13657,154928,24866,166450,36775,37366,29073,26393,29626,144001,172295,15499,137600,19216,30948,29698,20910,165647,16393,27235,172730,16931,34319,133743,31274,170311,166634,38741,28749,21284,139390,37876,30425,166371,40871,30685,20131,20464,20668,20015,20247,40872,21556,32139,22674,22736,138678,24210,24217,24514,141074,25995,144377,26905,27203,146531,27903,null,29184,148741,29580,16091,150035,23317,29881,35715,154788,153237,31379,31724,31939,32364,33528,34199,40873,34960,40874,36537,40875,36815,34143,39392,37409,40876,167353,136255,16497,17058,23066,null,null,null,39016,26475,17014,22333,null,34262,149883,33471,160013,19585,159092,23931,158485,159678,40877,40878,23446,40879,26343,32347,28247,31178,15752,17603,143958,141206,17306,17718,null,23765,146202,35577,23672,15634,144721,23928,40882,29015,17752,147692,138787,19575,14712,13386,131492,158785,35532,20404,131641,22975,33132,38998,170234,24379,134047,null,139713,166253,16642,18107,168057,16135,40883,172469,16632,14294,18167,158790,16764,165554,160767,17773,14548,152730,17761,17691,19849,19579,19830,17898,16328,150287,13921,17630,17597,16877,23870,23880,23894,15868,14351,23972,23993,14368,14392,24130,24253,24357,24451,14600,14612,14655,14669,24791,24893,23781,14729,25015,25017,25039,14776,25132,25232,25317,25368,14840,22193,14851,25570,25595,25607,25690,14923,25792,23829,22049,40863,14999,25990,15037,26111,26195,15090,26258,15138,26390,15170,26532,26624,15192,26698,26756,15218,15217,15227,26889,26947,29276,26980,27039,27013,15292,27094,15325,27237,27252,27249,27266,15340,27289,15346,27307,27317,27348,27382,27521,27585,27626,27765,27818,15563,27906,27910,27942,28033,15599,28068,28081,28181,28184,28201,28294,166336,28347,28386,28378,40831,28392,28393,28452,28468,15686,147265,28545,28606,15722,15733,29111,23705,15754,28716,15761,28752,28756,28783,28799,28809,131877,17345,13809,134872,147159,22462,159443,28990,153568,13902,27042,166889,23412,31305,153825,169177,31333,31357,154028,31419,31408,31426,31427,29137,156813,16842,31450,31453,31466,16879,21682,154625,31499,31573,31529,152334,154878,31650,31599,33692,154548,158847,31696,33825,31634,31672,154912,15789,154725,33938,31738,31750,31797,154817,31812,31875,149634,31910,26237,148856,31945,31943,31974,31860,31987,31989,31950,32359,17693,159300,32093,159446,29837,32137,32171,28981,32179,32210,147543,155689,32228,15635,32245,137209,32229,164717,32285,155937,155994,32366,32402,17195,37996,32295,32576,32577,32583,31030,156368,39393,32663,156497,32675,136801,131176,17756,145254,17667,164666,32762,156809,32773,32776,32797,32808,32815,172167,158915,32827,32828,32865,141076,18825,157222,146915,157416,26405,32935,166472,33031,33050,22704,141046,27775,156824,151480,25831,136330,33304,137310,27219,150117,150165,17530,33321,133901,158290,146814,20473,136445,34018,33634,158474,149927,144688,137075,146936,33450,26907,194964,16859,34123,33488,33562,134678,137140,14017,143741,144730,33403,33506,33560,147083,159139,158469,158615,144846,15807,33565,21996,33669,17675,159141,33708,33729,33747,13438,159444,27223,34138,13462,159298,143087,33880,154596,33905,15827,17636,27303,33866,146613,31064,33960,158614,159351,159299,34014,33807,33681,17568,33939,34020,154769,16960,154816,17731,34100,23282,159385,17703,34163,17686,26559,34326,165413,165435,34241,159880,34306,136578,159949,194994,17770,34344,13896,137378,21495,160666,34430,34673,172280,34798,142375,34737,34778,34831,22113,34412,26710,17935,34885,34886,161248,146873,161252,34910,34972,18011,34996,34997,25537,35013,30583,161551,35207,35210,35238,35241,35239,35260,166437,35303,162084,162493,35484,30611,37374,35472,162393,31465,162618,147343,18195,162616,29052,35596,35615,152624,152933,35647,35660,35661,35497,150138,35728,35739,35503,136927,17941,34895,35995,163156,163215,195028,14117,163155,36054,163224,163261,36114,36099,137488,36059,28764,36113,150729,16080,36215,36265,163842,135188,149898,15228,164284,160012,31463,36525,36534,36547,37588,36633,36653,164709,164882,36773,37635,172703,133712,36787,18730,166366,165181,146875,24312,143970,36857,172052,165564,165121,140069,14720,159447,36919,165180,162494,36961,165228,165387,37032,165651,37060,165606,37038,37117,37223,15088,37289,37316,31916,166195,138889,37390,27807,37441,37474,153017,37561,166598,146587,166668,153051,134449,37676,37739,166625,166891,28815,23235,166626,166629,18789,37444,166892,166969,166911,37747,37979,36540,38277,38310,37926,38304,28662,17081,140922,165592,135804,146990,18911,27676,38523,38550,16748,38563,159445,25050,38582,30965,166624,38589,21452,18849,158904,131700,156688,168111,168165,150225,137493,144138,38705,34370,38710,18959,17725,17797,150249,28789,23361,38683,38748,168405,38743,23370,168427,38751,37925,20688,143543,143548,38793,38815,38833,38846,38848,38866,38880,152684,38894,29724,169011,38911,38901,168989,162170,19153,38964,38963,38987,39014,15118,160117,15697,132656,147804,153350,39114,39095,39112,39111,19199,159015,136915,21936,39137,39142,39148,37752,39225,150057,19314,170071,170245,39413,39436,39483,39440,39512,153381,14020,168113,170965,39648,39650,170757,39668,19470,39700,39725,165376,20532,39732,158120,14531,143485,39760,39744,171326,23109,137315,39822,148043,39938,39935,39948,171624,40404,171959,172434,172459,172257,172323,172511,40318,40323,172340,40462,26760,40388,139611,172435,172576,137531,172595,40249,172217,172724,40592,40597,40606,40610,19764,40618,40623,148324,40641,15200,14821,15645,20274,14270,166955,40706,40712,19350,37924,159138,40727,40726,40761,22175,22154,40773,39352,168075,38898,33919,40802,40809,31452,40846,29206,19390,149877,149947,29047,150008,148296,150097,29598,166874,137466,31135,166270,167478,37737,37875,166468,37612,37761,37835,166252,148665,29207,16107,30578,31299,28880,148595,148472,29054,137199,28835,137406,144793,16071,137349,152623,137208,14114,136955,137273,14049,137076,137425,155467,14115,136896,22363,150053,136190,135848,136134,136374,34051,145062,34051,33877,149908,160101,146993,152924,147195,159826,17652,145134,170397,159526,26617,14131,15381,15847,22636,137506,26640,16471,145215,147681,147595,147727,158753,21707,22174,157361,22162,135135,134056,134669,37830,166675,37788,20216,20779,14361,148534,20156,132197,131967,20299,20362,153169,23144,131499,132043,14745,131850,132116,13365,20265,131776,167603,131701,35546,131596,20120,20685,20749,20386,20227,150030,147082,20290,20526,20588,20609,20428,20453,20568,20732,20825,20827,20829,20830,28278,144789,147001,147135,28018,137348,147081,20904,20931,132576,17629,132259,132242,132241,36218,166556,132878,21081,21156,133235,21217,37742,18042,29068,148364,134176,149932,135396,27089,134685,29817,16094,29849,29716,29782,29592,19342,150204,147597,21456,13700,29199,147657,21940,131909,21709,134086,22301,37469,38644,37734,22493,22413,22399,13886,22731,23193,166470,136954,137071,136976,23084,22968,37519,23166,23247,23058,153926,137715,137313,148117,14069,27909,29763,23073,155267,23169,166871,132115,37856,29836,135939,28933,18802,37896,166395,37821,14240,23582,23710,24158,24136,137622,137596,146158,24269,23375,137475,137476,14081,137376,14045,136958,14035,33066,166471,138682,144498,166312,24332,24334,137511,137131,23147,137019,23364,34324,161277,34912,24702,141408,140843,24539,16056,140719,140734,168072,159603,25024,131134,131142,140827,24985,24984,24693,142491,142599,149204,168269,25713,149093,142186,14889,142114,144464,170218,142968,25399,173147,25782,25393,25553,149987,142695,25252,142497,25659,25963,26994,15348,143502,144045,149897,144043,21773,144096,137433,169023,26318,144009,143795,15072,16784,152964,166690,152975,136956,152923,152613,30958,143619,137258,143924,13412,143887,143746,148169,26254,159012,26219,19347,26160,161904,138731,26211,144082,144097,26142,153714,14545,145466,145340,15257,145314,144382,29904,15254,26511,149034,26806,26654,15300,27326,14435,145365,148615,27187,27218,27337,27397,137490,25873,26776,27212,15319,27258,27479,147392,146586,37792,37618,166890,166603,37513,163870,166364,37991,28069,28427,149996,28007,147327,15759,28164,147516,23101,28170,22599,27940,30786,28987,148250,148086,28913,29264,29319,29332,149391,149285,20857,150180,132587,29818,147192,144991,150090,149783,155617,16134,16049,150239,166947,147253,24743,16115,29900,29756,37767,29751,17567,159210,17745,30083,16227,150745,150790,16216,30037,30323,173510,15129,29800,166604,149931,149902,15099,15821,150094,16127,149957,149747,37370,22322,37698,166627,137316,20703,152097,152039,30584,143922,30478,30479,30587,149143,145281,14942,149744,29752,29851,16063,150202,150215,16584,150166,156078,37639,152961,30750,30861,30856,30930,29648,31065,161601,153315,16654,31131,33942,31141,27181,147194,31290,31220,16750,136934,16690,37429,31217,134476,149900,131737,146874,137070,13719,21867,13680,13994,131540,134157,31458,23129,141045,154287,154268,23053,131675,30960,23082,154566,31486,16889,31837,31853,16913,154547,155324,155302,31949,150009,137136,31886,31868,31918,27314,32220,32263,32211,32590,156257,155996,162632,32151,155266,17002,158581,133398,26582,131150,144847,22468,156690,156664,149858,32733,31527,133164,154345,154947,31500,155150,39398,34373,39523,27164,144447,14818,150007,157101,39455,157088,33920,160039,158929,17642,33079,17410,32966,33033,33090,157620,39107,158274,33378,33381,158289,33875,159143,34320,160283,23174,16767,137280,23339,137377,23268,137432,34464,195004,146831,34861,160802,23042,34926,20293,34951,35007,35046,35173,35149,153219,35156,161669,161668,166901,166873,166812,166393,16045,33955,18165,18127,14322,35389,35356,169032,24397,37419,148100,26068,28969,28868,137285,40301,35999,36073,163292,22938,30659,23024,17262,14036,36394,36519,150537,36656,36682,17140,27736,28603,140065,18587,28537,28299,137178,39913,14005,149807,37051,37015,21873,18694,37307,37892,166475,16482,166652,37927,166941,166971,34021,35371,38297,38311,38295,38294,167220,29765,16066,149759,150082,148458,16103,143909,38543,167655,167526,167525,16076,149997,150136,147438,29714,29803,16124,38721,168112,26695,18973,168083,153567,38749,37736,166281,166950,166703,156606,37562,23313,35689,18748,29689,147995,38811,38769,39224,134950,24001,166853,150194,38943,169178,37622,169431,37349,17600,166736,150119,166756,39132,166469,16128,37418,18725,33812,39227,39245,162566,15869,39323,19311,39338,39516,166757,153800,27279,39457,23294,39471,170225,19344,170312,39356,19389,19351,37757,22642,135938,22562,149944,136424,30788,141087,146872,26821,15741,37976,14631,24912,141185,141675,24839,40015,40019,40059,39989,39952,39807,39887,171565,39839,172533,172286,40225,19630,147716,40472,19632,40204,172468,172269,172275,170287,40357,33981,159250,159711,158594,34300,17715,159140,159364,159216,33824,34286,159232,145367,155748,31202,144796,144960,18733,149982,15714,37851,37566,37704,131775,30905,37495,37965,20452,13376,36964,152925,30781,30804,30902,30795,137047,143817,149825,13978,20338,28634,28633,28702,28702,21524,147893,22459,22771,22410,40214,22487,28980,13487,147884,29163,158784,151447,23336,137141,166473,24844,23246,23051,17084,148616,14124,19323,166396,37819,37816,137430,134941,33906,158912,136211,148218,142374,148417,22932,146871,157505,32168,155995,155812,149945,149899,166394,37605,29666,16105,29876,166755,137375,16097,150195,27352,29683,29691,16086,150078,150164,137177,150118,132007,136228,149989,29768,149782,28837,149878,37508,29670,37727,132350,37681,166606,166422,37766,166887,153045,18741,166530,29035,149827,134399,22180,132634,134123,134328,21762,31172,137210,32254,136898,150096,137298,17710,37889,14090,166592,149933,22960,137407,137347,160900,23201,14050,146779,14e3,37471,23161,166529,137314,37748,15565,133812,19094,14730,20724,15721,15692,136092,29045,17147,164376,28175,168164,17643,27991,163407,28775,27823,15574,147437,146989,28162,28428,15727,132085,30033,14012,13512,18048,16090,18545,22980,37486,18750,36673,166940,158656,22546,22472,14038,136274,28926,148322,150129,143331,135856,140221,26809,26983,136088,144613,162804,145119,166531,145366,144378,150687,27162,145069,158903,33854,17631,17614,159014,159057,158850,159710,28439,160009,33597,137018,33773,158848,159827,137179,22921,23170,137139,23137,23153,137477,147964,14125,23023,137020,14023,29070,37776,26266,148133,23150,23083,148115,27179,147193,161590,148571,148170,28957,148057,166369,20400,159016,23746,148686,163405,148413,27148,148054,135940,28838,28979,148457,15781,27871,194597,150095,32357,23019,23855,15859,24412,150109,137183,32164,33830,21637,146170,144128,131604,22398,133333,132633,16357,139166,172726,28675,168283,23920,29583,31955,166489,168992,20424,32743,29389,29456,162548,29496,29497,153334,29505,29512,16041,162584,36972,29173,149746,29665,33270,16074,30476,16081,27810,22269,29721,29726,29727,16098,16112,16116,16122,29907,16142,16211,30018,30061,30066,30093,16252,30152,30172,16320,30285,16343,30324,16348,30330,151388,29064,22051,35200,22633,16413,30531,16441,26465,16453,13787,30616,16490,16495,23646,30654,30667,22770,30744,28857,30748,16552,30777,30791,30801,30822,33864,152885,31027,26627,31026,16643,16649,31121,31129,36795,31238,36796,16743,31377,16818,31420,33401,16836,31439,31451,16847,20001,31586,31596,31611,31762,31771,16992,17018,31867,31900,17036,31928,17044,31981,36755,28864,134351,32207,32212,32208,32253,32686,32692,29343,17303,32800,32805,31545,32814,32817,32852,15820,22452,28832,32951,33001,17389,33036,29482,33038,33042,30048,33044,17409,15161,33110,33113,33114,17427,22586,33148,33156,17445,33171,17453,33189,22511,33217,33252,33364,17551,33446,33398,33482,33496,33535,17584,33623,38505,27018,33797,28917,33892,24803,33928,17668,33982,34017,34040,34064,34104,34130,17723,34159,34160,34272,17783,34418,34450,34482,34543,38469,34699,17926,17943,34990,35071,35108,35143,35217,162151,35369,35384,35476,35508,35921,36052,36082,36124,18328,22623,36291,18413,20206,36410,21976,22356,36465,22005,36528,18487,36558,36578,36580,36589,36594,36791,36801,36810,36812,36915,39364,18605,39136,37395,18718,37416,37464,37483,37553,37550,37567,37603,37611,37619,37620,37629,37699,37764,37805,18757,18769,40639,37911,21249,37917,37933,37950,18794,37972,38009,38189,38306,18855,38388,38451,18917,26528,18980,38720,18997,38834,38850,22100,19172,24808,39097,19225,39153,22596,39182,39193,20916,39196,39223,39234,39261,39266,19312,39365,19357,39484,39695,31363,39785,39809,39901,39921,39924,19565,39968,14191,138178,40265,39994,40702,22096,40339,40381,40384,40444,38134,36790,40571,40620,40625,40637,40646,38108,40674,40689,40696,31432,40772,131220,131767,132e3,26906,38083,22956,132311,22592,38081,14265,132565,132629,132726,136890,22359,29043,133826,133837,134079,21610,194619,134091,21662,134139,134203,134227,134245,134268,24807,134285,22138,134325,134365,134381,134511,134578,134600,26965,39983,34725,134660,134670,134871,135056,134957,134771,23584,135100,24075,135260,135247,135286,26398,135291,135304,135318,13895,135359,135379,135471,135483,21348,33965,135907,136053,135990,35713,136567,136729,137155,137159,20088,28859,137261,137578,137773,137797,138282,138352,138412,138952,25283,138965,139029,29080,26709,139333,27113,14024,139900,140247,140282,141098,141425,141647,33533,141671,141715,142037,35237,142056,36768,142094,38840,142143,38983,39613,142412,null,142472,142519,154600,142600,142610,142775,142741,142914,143220,143308,143411,143462,144159,144350,24497,26184,26303,162425,144743,144883,29185,149946,30679,144922,145174,32391,131910,22709,26382,26904,146087,161367,155618,146961,147129,161278,139418,18640,19128,147737,166554,148206,148237,147515,148276,148374,150085,132554,20946,132625,22943,138920,15294,146687,148484,148694,22408,149108,14747,149295,165352,170441,14178,139715,35678,166734,39382,149522,149755,150037,29193,150208,134264,22885,151205,151430,132985,36570,151596,21135,22335,29041,152217,152601,147274,150183,21948,152646,152686,158546,37332,13427,152895,161330,152926,18200,152930,152934,153543,149823,153693,20582,13563,144332,24798,153859,18300,166216,154286,154505,154630,138640,22433,29009,28598,155906,162834,36950,156082,151450,35682,156674,156746,23899,158711,36662,156804,137500,35562,150006,156808,147439,156946,19392,157119,157365,141083,37989,153569,24981,23079,194765,20411,22201,148769,157436,20074,149812,38486,28047,158909,13848,35191,157593,157806,156689,157790,29151,157895,31554,168128,133649,157990,37124,158009,31301,40432,158202,39462,158253,13919,156777,131105,31107,158260,158555,23852,144665,33743,158621,18128,158884,30011,34917,159150,22710,14108,140685,159819,160205,15444,160384,160389,37505,139642,160395,37680,160486,149968,27705,38047,160848,134904,34855,35061,141606,164979,137137,28344,150058,137248,14756,14009,23568,31203,17727,26294,171181,170148,35139,161740,161880,22230,16607,136714,14753,145199,164072,136133,29101,33638,162269,168360,23143,19639,159919,166315,162301,162314,162571,163174,147834,31555,31102,163849,28597,172767,27139,164632,21410,159239,37823,26678,38749,164207,163875,158133,136173,143919,163912,23941,166960,163971,22293,38947,166217,23979,149896,26046,27093,21458,150181,147329,15377,26422,163984,164084,164142,139169,164175,164233,164271,164378,164614,164655,164746,13770,164968,165546,18682,25574,166230,30728,37461,166328,17394,166375,17375,166376,166726,166868,23032,166921,36619,167877,168172,31569,168208,168252,15863,168286,150218,36816,29327,22155,169191,169449,169392,169400,169778,170193,170313,170346,170435,170536,170766,171354,171419,32415,171768,171811,19620,38215,172691,29090,172799,19857,36882,173515,19868,134300,36798,21953,36794,140464,36793,150163,17673,32383,28502,27313,20202,13540,166700,161949,14138,36480,137205,163876,166764,166809,162366,157359,15851,161365,146615,153141,153942,20122,155265,156248,22207,134765,36366,23405,147080,150686,25566,25296,137206,137339,25904,22061,154698,21530,152337,15814,171416,19581,22050,22046,32585,155352,22901,146752,34672,19996,135146,134473,145082,33047,40286,36120,30267,40005,30286,30649,37701,21554,33096,33527,22053,33074,33816,32957,21994,31074,22083,21526,134813,13774,22021,22001,26353,164578,13869,30004,22e3,21946,21655,21874,134209,134294,24272,151880,134774,142434,134818,40619,32090,21982,135285,25245,38765,21652,36045,29174,37238,25596,25529,25598,21865,142147,40050,143027,20890,13535,134567,20903,21581,21790,21779,30310,36397,157834,30129,32950,34820,34694,35015,33206,33820,135361,17644,29444,149254,23440,33547,157843,22139,141044,163119,147875,163187,159440,160438,37232,135641,37384,146684,173737,134828,134905,29286,138402,18254,151490,163833,135147,16634,40029,25887,142752,18675,149472,171388,135148,134666,24674,161187,135149,null,155720,135559,29091,32398,40272,19994,19972,13687,23309,27826,21351,13996,14812,21373,13989,149016,22682,150382,33325,21579,22442,154261,133497,null,14930,140389,29556,171692,19721,39917,146686,171824,19547,151465,169374,171998,33884,146870,160434,157619,145184,25390,32037,147191,146988,14890,36872,21196,15988,13946,17897,132238,30272,23280,134838,30842,163630,22695,16575,22140,39819,23924,30292,173108,40581,19681,30201,14331,24857,143578,148466,null,22109,135849,22439,149859,171526,21044,159918,13741,27722,40316,31830,39737,22494,137068,23635,25811,169168,156469,160100,34477,134440,159010,150242,134513,null,20990,139023,23950,38659,138705,40577,36940,31519,39682,23761,31651,25192,25397,39679,31695,39722,31870,39726,31810,31878,39957,31740,39689,40727,39963,149822,40794,21875,23491,20477,40600,20466,21088,15878,21201,22375,20566,22967,24082,38856,40363,36700,21609,38836,39232,38842,21292,24880,26924,21466,39946,40194,19515,38465,27008,20646,30022,137069,39386,21107,null,37209,38529,37212,null,37201,167575,25471,159011,27338,22033,37262,30074,25221,132092,29519,31856,154657,146685,null,149785,30422,39837,20010,134356,33726,34882,null,23626,27072,20717,22394,21023,24053,20174,27697,131570,20281,21660,21722,21146,36226,13822,24332,13811,null,27474,37244,40869,39831,38958,39092,39610,40616,40580,29050,31508,null,27642,34840,32632,null,22048,173642,36471,40787,null,36308,36431,40476,36353,25218,164733,36392,36469,31443,150135,31294,30936,27882,35431,30215,166490,40742,27854,34774,30147,172722,30803,194624,36108,29410,29553,35629,29442,29937,36075,150203,34351,24506,34976,17591,null,137275,159237,null,35454,140571,null,24829,30311,39639,40260,37742,39823,34805,null,34831,36087,29484,38689,39856,13782,29362,19463,31825,39242,155993,24921,19460,40598,24957,null,22367,24943,25254,25145,25294,14940,25058,21418,144373,25444,26626,13778,23895,166850,36826,167481,null,20697,138566,30982,21298,38456,134971,16485,null,30718,null,31938,155418,31962,31277,32870,32867,32077,29957,29938,35220,33306,26380,32866,160902,32859,29936,33027,30500,35209,157644,30035,159441,34729,34766,33224,34700,35401,36013,35651,30507,29944,34010,13877,27058,36262,null,35241,29800,28089,34753,147473,29927,15835,29046,24740,24988,15569,29026,24695,null,32625,166701,29264,24809,19326,21024,15384,146631,155351,161366,152881,137540,135934,170243,159196,159917,23745,156077,166415,145015,131310,157766,151310,17762,23327,156492,40784,40614,156267,12288,65292,12289,12290,65294,8231,65307,65306,65311,65281,65072,8230,8229,65104,65105,65106,183,65108,65109,65110,65111,65372,8211,65073,8212,65075,9588,65076,65103,65288,65289,65077,65078,65371,65373,65079,65080,12308,12309,65081,65082,12304,12305,65083,65084,12298,12299,65085,65086,12296,12297,65087,65088,12300,12301,65089,65090,12302,12303,65091,65092,65113,65114,65115,65116,65117,65118,8216,8217,8220,8221,12317,12318,8245,8242,65283,65286,65290,8251,167,12291,9675,9679,9651,9650,9678,9734,9733,9671,9670,9633,9632,9661,9660,12963,8453,175,65507,65343,717,65097,65098,65101,65102,65099,65100,65119,65120,65121,65291,65293,215,247,177,8730,65308,65310,65309,8806,8807,8800,8734,8786,8801,65122,65123,65124,65125,65126,65374,8745,8746,8869,8736,8735,8895,13266,13265,8747,8750,8757,8756,9792,9794,8853,8857,8593,8595,8592,8594,8598,8599,8601,8600,8741,8739,65295,65340,8725,65128,65284,65509,12306,65504,65505,65285,65312,8451,8457,65129,65130,65131,13269,13212,13213,13214,13262,13217,13198,13199,13252,176,20825,20827,20830,20829,20833,20835,21991,29929,31950,9601,9602,9603,9604,9605,9606,9607,9608,9615,9614,9613,9612,9611,9610,9609,9532,9524,9516,9508,9500,9620,9472,9474,9621,9484,9488,9492,9496,9581,9582,9584,9583,9552,9566,9578,9569,9698,9699,9701,9700,9585,9586,9587,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,12321,12322,12323,12324,12325,12326,12327,12328,12329,21313,21316,21317,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,12549,12550,12551,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582,12583,12584,12585,729,713,714,711,715,9216,9217,9218,9219,9220,9221,9222,9223,9224,9225,9226,9227,9228,9229,9230,9231,9232,9233,9234,9235,9236,9237,9238,9239,9240,9241,9242,9243,9244,9245,9246,9247,9249,8364,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,19968,20057,19969,19971,20035,20061,20102,20108,20154,20799,20837,20843,20960,20992,20993,21147,21269,21313,21340,21448,19977,19979,19976,19978,20011,20024,20961,20037,20040,20063,20062,20110,20129,20800,20995,21242,21315,21449,21475,22303,22763,22805,22823,22899,23376,23377,23379,23544,23567,23586,23608,23665,24029,24037,24049,24050,24051,24062,24178,24318,24331,24339,25165,19985,19984,19981,20013,20016,20025,20043,23609,20104,20113,20117,20114,20116,20130,20161,20160,20163,20166,20167,20173,20170,20171,20164,20803,20801,20839,20845,20846,20844,20887,20982,20998,20999,21e3,21243,21246,21247,21270,21305,21320,21319,21317,21342,21380,21451,21450,21453,22764,22825,22827,22826,22829,23380,23569,23588,23610,23663,24052,24187,24319,24340,24341,24515,25096,25142,25163,25166,25903,25991,26007,26020,26041,26085,26352,26376,26408,27424,27490,27513,27595,27604,27611,27663,27700,28779,29226,29238,29243,29255,29273,29275,29356,29579,19993,19990,19989,19988,19992,20027,20045,20047,20046,20197,20184,20180,20181,20182,20183,20195,20196,20185,20190,20805,20804,20873,20874,20908,20985,20986,20984,21002,21152,21151,21253,21254,21271,21277,20191,21322,21321,21345,21344,21359,21358,21435,21487,21476,21491,21484,21486,21481,21480,21500,21496,21493,21483,21478,21482,21490,21489,21488,21477,21485,21499,22235,22234,22806,22830,22833,22900,22902,23381,23427,23612,24040,24039,24038,24066,24067,24179,24188,24321,24344,24343,24517,25098,25171,25172,25170,25169,26021,26086,26414,26412,26410,26411,26413,27491,27597,27665,27664,27704,27713,27712,27710,29359,29572,29577,29916,29926,29976,29983,29992,29993,3e4,30001,30002,30003,30091,30333,30382,30399,30446,30683,30690,30707,31034,31166,31348,31435,19998,19999,20050,20051,20073,20121,20132,20134,20133,20223,20233,20249,20234,20245,20237,20240,20241,20239,20210,20214,20219,20208,20211,20221,20225,20235,20809,20807,20806,20808,20840,20849,20877,20912,21015,21009,21010,21006,21014,21155,21256,21281,21280,21360,21361,21513,21519,21516,21514,21520,21505,21515,21508,21521,21517,21512,21507,21518,21510,21522,22240,22238,22237,22323,22320,22312,22317,22316,22319,22313,22809,22810,22839,22840,22916,22904,22915,22909,22905,22914,22913,23383,23384,23431,23432,23429,23433,23546,23574,23673,24030,24070,24182,24180,24335,24347,24537,24534,25102,25100,25101,25104,25187,25179,25176,25910,26089,26088,26092,26093,26354,26355,26377,26429,26420,26417,26421,27425,27492,27515,27670,27741,27735,27737,27743,27744,27728,27733,27745,27739,27725,27726,28784,29279,29277,30334,31481,31859,31992,32566,32650,32701,32769,32771,32780,32786,32819,32895,32905,32907,32908,33251,33258,33267,33276,33292,33307,33311,33390,33394,33406,34411,34880,34892,34915,35199,38433,20018,20136,20301,20303,20295,20311,20318,20276,20315,20309,20272,20304,20305,20285,20282,20280,20291,20308,20284,20294,20323,20316,20320,20271,20302,20278,20313,20317,20296,20314,20812,20811,20813,20853,20918,20919,21029,21028,21033,21034,21032,21163,21161,21162,21164,21283,21363,21365,21533,21549,21534,21566,21542,21582,21543,21574,21571,21555,21576,21570,21531,21545,21578,21561,21563,21560,21550,21557,21558,21536,21564,21568,21553,21547,21535,21548,22250,22256,22244,22251,22346,22353,22336,22349,22343,22350,22334,22352,22351,22331,22767,22846,22941,22930,22952,22942,22947,22937,22934,22925,22948,22931,22922,22949,23389,23388,23386,23387,23436,23435,23439,23596,23616,23617,23615,23614,23696,23697,23700,23692,24043,24076,24207,24199,24202,24311,24324,24351,24420,24418,24439,24441,24536,24524,24535,24525,24561,24555,24568,24554,25106,25105,25220,25239,25238,25216,25206,25225,25197,25226,25212,25214,25209,25203,25234,25199,25240,25198,25237,25235,25233,25222,25913,25915,25912,26097,26356,26463,26446,26447,26448,26449,26460,26454,26462,26441,26438,26464,26451,26455,27493,27599,27714,27742,27801,27777,27784,27785,27781,27803,27754,27770,27792,27760,27788,27752,27798,27794,27773,27779,27762,27774,27764,27782,27766,27789,27796,27800,27778,28790,28796,28797,28792,29282,29281,29280,29380,29378,29590,29996,29995,30007,30008,30338,30447,30691,31169,31168,31167,31350,31995,32597,32918,32915,32925,32920,32923,32922,32946,33391,33426,33419,33421,35211,35282,35328,35895,35910,35925,35997,36196,36208,36275,36523,36554,36763,36784,36802,36806,36805,36804,24033,37009,37026,37034,37030,37027,37193,37318,37324,38450,38446,38449,38442,38444,20006,20054,20083,20107,20123,20126,20139,20140,20335,20381,20365,20339,20351,20332,20379,20363,20358,20355,20336,20341,20360,20329,20347,20374,20350,20367,20369,20346,20820,20818,20821,20841,20855,20854,20856,20925,20989,21051,21048,21047,21050,21040,21038,21046,21057,21182,21179,21330,21332,21331,21329,21350,21367,21368,21369,21462,21460,21463,21619,21621,21654,21624,21653,21632,21627,21623,21636,21650,21638,21628,21648,21617,21622,21644,21658,21602,21608,21643,21629,21646,22266,22403,22391,22378,22377,22369,22374,22372,22396,22812,22857,22855,22856,22852,22868,22974,22971,22996,22969,22958,22993,22982,22992,22989,22987,22995,22986,22959,22963,22994,22981,23391,23396,23395,23447,23450,23448,23452,23449,23451,23578,23624,23621,23622,23735,23713,23736,23721,23723,23729,23731,24088,24090,24086,24085,24091,24081,24184,24218,24215,24220,24213,24214,24310,24358,24359,24361,24448,24449,24447,24444,24541,24544,24573,24565,24575,24591,24596,24623,24629,24598,24618,24597,24609,24615,24617,24619,24603,25110,25109,25151,25150,25152,25215,25289,25292,25284,25279,25282,25273,25298,25307,25259,25299,25300,25291,25288,25256,25277,25276,25296,25305,25287,25293,25269,25306,25265,25304,25302,25303,25286,25260,25294,25918,26023,26044,26106,26132,26131,26124,26118,26114,26126,26112,26127,26133,26122,26119,26381,26379,26477,26507,26517,26481,26524,26483,26487,26503,26525,26519,26479,26480,26495,26505,26494,26512,26485,26522,26515,26492,26474,26482,27427,27494,27495,27519,27667,27675,27875,27880,27891,27825,27852,27877,27827,27837,27838,27836,27874,27819,27861,27859,27832,27844,27833,27841,27822,27863,27845,27889,27839,27835,27873,27867,27850,27820,27887,27868,27862,27872,28821,28814,28818,28810,28825,29228,29229,29240,29256,29287,29289,29376,29390,29401,29399,29392,29609,29608,29599,29611,29605,30013,30109,30105,30106,30340,30402,30450,30452,30693,30717,31038,31040,31041,31177,31176,31354,31353,31482,31998,32596,32652,32651,32773,32954,32933,32930,32945,32929,32939,32937,32948,32938,32943,33253,33278,33293,33459,33437,33433,33453,33469,33439,33465,33457,33452,33445,33455,33464,33443,33456,33470,33463,34382,34417,21021,34920,36555,36814,36820,36817,37045,37048,37041,37046,37319,37329,38263,38272,38428,38464,38463,38459,38468,38466,38585,38632,38738,38750,20127,20141,20142,20449,20405,20399,20415,20448,20433,20431,20445,20419,20406,20440,20447,20426,20439,20398,20432,20420,20418,20442,20430,20446,20407,20823,20882,20881,20896,21070,21059,21066,21069,21068,21067,21063,21191,21193,21187,21185,21261,21335,21371,21402,21467,21676,21696,21672,21710,21705,21688,21670,21683,21703,21698,21693,21674,21697,21700,21704,21679,21675,21681,21691,21673,21671,21695,22271,22402,22411,22432,22435,22434,22478,22446,22419,22869,22865,22863,22862,22864,23004,23e3,23039,23011,23016,23043,23013,23018,23002,23014,23041,23035,23401,23459,23462,23460,23458,23461,23553,23630,23631,23629,23627,23769,23762,24055,24093,24101,24095,24189,24224,24230,24314,24328,24365,24421,24456,24453,24458,24459,24455,24460,24457,24594,24605,24608,24613,24590,24616,24653,24688,24680,24674,24646,24643,24684,24683,24682,24676,25153,25308,25366,25353,25340,25325,25345,25326,25341,25351,25329,25335,25327,25324,25342,25332,25361,25346,25919,25925,26027,26045,26082,26149,26157,26144,26151,26159,26143,26152,26161,26148,26359,26623,26579,26609,26580,26576,26604,26550,26543,26613,26601,26607,26564,26577,26548,26586,26597,26552,26575,26590,26611,26544,26585,26594,26589,26578,27498,27523,27526,27573,27602,27607,27679,27849,27915,27954,27946,27969,27941,27916,27953,27934,27927,27963,27965,27966,27958,27931,27893,27961,27943,27960,27945,27950,27957,27918,27947,28843,28858,28851,28844,28847,28845,28856,28846,28836,29232,29298,29295,29300,29417,29408,29409,29623,29642,29627,29618,29645,29632,29619,29978,29997,30031,30028,30030,30027,30123,30116,30117,30114,30115,30328,30342,30343,30344,30408,30406,30403,30405,30465,30457,30456,30473,30475,30462,30460,30471,30684,30722,30740,30732,30733,31046,31049,31048,31047,31161,31162,31185,31186,31179,31359,31361,31487,31485,31869,32002,32005,32e3,32009,32007,32004,32006,32568,32654,32703,32772,32784,32781,32785,32822,32982,32997,32986,32963,32964,32972,32993,32987,32974,32990,32996,32989,33268,33314,33511,33539,33541,33507,33499,33510,33540,33509,33538,33545,33490,33495,33521,33537,33500,33492,33489,33502,33491,33503,33519,33542,34384,34425,34427,34426,34893,34923,35201,35284,35336,35330,35331,35998,36e3,36212,36211,36276,36557,36556,36848,36838,36834,36842,36837,36845,36843,36836,36840,37066,37070,37057,37059,37195,37194,37325,38274,38480,38475,38476,38477,38754,38761,38859,38893,38899,38913,39080,39131,39135,39318,39321,20056,20147,20492,20493,20515,20463,20518,20517,20472,20521,20502,20486,20540,20511,20506,20498,20497,20474,20480,20500,20520,20465,20513,20491,20505,20504,20467,20462,20525,20522,20478,20523,20489,20860,20900,20901,20898,20941,20940,20934,20939,21078,21084,21076,21083,21085,21290,21375,21407,21405,21471,21736,21776,21761,21815,21756,21733,21746,21766,21754,21780,21737,21741,21729,21769,21742,21738,21734,21799,21767,21757,21775,22275,22276,22466,22484,22475,22467,22537,22799,22871,22872,22874,23057,23064,23068,23071,23067,23059,23020,23072,23075,23081,23077,23052,23049,23403,23640,23472,23475,23478,23476,23470,23477,23481,23480,23556,23633,23637,23632,23789,23805,23803,23786,23784,23792,23798,23809,23796,24046,24109,24107,24235,24237,24231,24369,24466,24465,24464,24665,24675,24677,24656,24661,24685,24681,24687,24708,24735,24730,24717,24724,24716,24709,24726,25159,25331,25352,25343,25422,25406,25391,25429,25410,25414,25423,25417,25402,25424,25405,25386,25387,25384,25421,25420,25928,25929,26009,26049,26053,26178,26185,26191,26179,26194,26188,26181,26177,26360,26388,26389,26391,26657,26680,26696,26694,26707,26681,26690,26708,26665,26803,26647,26700,26705,26685,26612,26704,26688,26684,26691,26666,26693,26643,26648,26689,27530,27529,27575,27683,27687,27688,27686,27684,27888,28010,28053,28040,28039,28006,28024,28023,27993,28051,28012,28041,28014,27994,28020,28009,28044,28042,28025,28037,28005,28052,28874,28888,28900,28889,28872,28879,29241,29305,29436,29433,29437,29432,29431,29574,29677,29705,29678,29664,29674,29662,30036,30045,30044,30042,30041,30142,30149,30151,30130,30131,30141,30140,30137,30146,30136,30347,30384,30410,30413,30414,30505,30495,30496,30504,30697,30768,30759,30776,30749,30772,30775,30757,30765,30752,30751,30770,31061,31056,31072,31071,31062,31070,31069,31063,31066,31204,31203,31207,31199,31206,31209,31192,31364,31368,31449,31494,31505,31881,32033,32023,32011,32010,32032,32034,32020,32016,32021,32026,32028,32013,32025,32027,32570,32607,32660,32709,32705,32774,32792,32789,32793,32791,32829,32831,33009,33026,33008,33029,33005,33012,33030,33016,33011,33032,33021,33034,33020,33007,33261,33260,33280,33296,33322,33323,33320,33324,33467,33579,33618,33620,33610,33592,33616,33609,33589,33588,33615,33586,33593,33590,33559,33600,33585,33576,33603,34388,34442,34474,34451,34468,34473,34444,34467,34460,34928,34935,34945,34946,34941,34937,35352,35344,35342,35340,35349,35338,35351,35347,35350,35343,35345,35912,35962,35961,36001,36002,36215,36524,36562,36564,36559,36785,36865,36870,36855,36864,36858,36852,36867,36861,36869,36856,37013,37089,37085,37090,37202,37197,37196,37336,37341,37335,37340,37337,38275,38498,38499,38497,38491,38493,38500,38488,38494,38587,39138,39340,39592,39640,39717,39730,39740,20094,20602,20605,20572,20551,20547,20556,20570,20553,20581,20598,20558,20565,20597,20596,20599,20559,20495,20591,20589,20828,20885,20976,21098,21103,21202,21209,21208,21205,21264,21263,21273,21311,21312,21310,21443,26364,21830,21866,21862,21828,21854,21857,21827,21834,21809,21846,21839,21845,21807,21860,21816,21806,21852,21804,21859,21811,21825,21847,22280,22283,22281,22495,22533,22538,22534,22496,22500,22522,22530,22581,22519,22521,22816,22882,23094,23105,23113,23142,23146,23104,23100,23138,23130,23110,23114,23408,23495,23493,23492,23490,23487,23494,23561,23560,23559,23648,23644,23645,23815,23814,23822,23835,23830,23842,23825,23849,23828,23833,23844,23847,23831,24034,24120,24118,24115,24119,24247,24248,24246,24245,24254,24373,24375,24407,24428,24425,24427,24471,24473,24478,24472,24481,24480,24476,24703,24739,24713,24736,24744,24779,24756,24806,24765,24773,24763,24757,24796,24764,24792,24789,24774,24799,24760,24794,24775,25114,25115,25160,25504,25511,25458,25494,25506,25509,25463,25447,25496,25514,25457,25513,25481,25475,25499,25451,25512,25476,25480,25497,25505,25516,25490,25487,25472,25467,25449,25448,25466,25949,25942,25937,25945,25943,21855,25935,25944,25941,25940,26012,26011,26028,26063,26059,26060,26062,26205,26202,26212,26216,26214,26206,26361,21207,26395,26753,26799,26786,26771,26805,26751,26742,26801,26791,26775,26800,26755,26820,26797,26758,26757,26772,26781,26792,26783,26785,26754,27442,27578,27627,27628,27691,28046,28092,28147,28121,28082,28129,28108,28132,28155,28154,28165,28103,28107,28079,28113,28078,28126,28153,28088,28151,28149,28101,28114,28186,28085,28122,28139,28120,28138,28145,28142,28136,28102,28100,28074,28140,28095,28134,28921,28937,28938,28925,28911,29245,29309,29313,29468,29467,29462,29459,29465,29575,29701,29706,29699,29702,29694,29709,29920,29942,29943,29980,29986,30053,30054,30050,30064,30095,30164,30165,30133,30154,30157,30350,30420,30418,30427,30519,30526,30524,30518,30520,30522,30827,30787,30798,31077,31080,31085,31227,31378,31381,31520,31528,31515,31532,31526,31513,31518,31534,31890,31895,31893,32070,32067,32113,32046,32057,32060,32064,32048,32051,32068,32047,32066,32050,32049,32573,32670,32666,32716,32718,32722,32796,32842,32838,33071,33046,33059,33067,33065,33072,33060,33282,33333,33335,33334,33337,33678,33694,33688,33656,33698,33686,33725,33707,33682,33674,33683,33673,33696,33655,33659,33660,33670,33703,34389,24426,34503,34496,34486,34500,34485,34502,34507,34481,34479,34505,34899,34974,34952,34987,34962,34966,34957,34955,35219,35215,35370,35357,35363,35365,35377,35373,35359,35355,35362,35913,35930,36009,36012,36011,36008,36010,36007,36199,36198,36286,36282,36571,36575,36889,36877,36890,36887,36899,36895,36893,36880,36885,36894,36896,36879,36898,36886,36891,36884,37096,37101,37117,37207,37326,37365,37350,37347,37351,37357,37353,38281,38506,38517,38515,38520,38512,38516,38518,38519,38508,38592,38634,38633,31456,31455,38914,38915,39770,40165,40565,40575,40613,40635,20642,20621,20613,20633,20625,20608,20630,20632,20634,26368,20977,21106,21108,21109,21097,21214,21213,21211,21338,21413,21883,21888,21927,21884,21898,21917,21912,21890,21916,21930,21908,21895,21899,21891,21939,21934,21919,21822,21938,21914,21947,21932,21937,21886,21897,21931,21913,22285,22575,22570,22580,22564,22576,22577,22561,22557,22560,22777,22778,22880,23159,23194,23167,23186,23195,23207,23411,23409,23506,23500,23507,23504,23562,23563,23601,23884,23888,23860,23879,24061,24133,24125,24128,24131,24190,24266,24257,24258,24260,24380,24429,24489,24490,24488,24785,24801,24754,24758,24800,24860,24867,24826,24853,24816,24827,24820,24936,24817,24846,24822,24841,24832,24850,25119,25161,25507,25484,25551,25536,25577,25545,25542,25549,25554,25571,25552,25569,25558,25581,25582,25462,25588,25578,25563,25682,25562,25593,25950,25958,25954,25955,26001,26e3,26031,26222,26224,26228,26230,26223,26257,26234,26238,26231,26366,26367,26399,26397,26874,26837,26848,26840,26839,26885,26847,26869,26862,26855,26873,26834,26866,26851,26827,26829,26893,26898,26894,26825,26842,26990,26875,27454,27450,27453,27544,27542,27580,27631,27694,27695,27692,28207,28216,28244,28193,28210,28263,28234,28192,28197,28195,28187,28251,28248,28196,28246,28270,28205,28198,28271,28212,28237,28218,28204,28227,28189,28222,28363,28297,28185,28238,28259,28228,28274,28265,28255,28953,28954,28966,28976,28961,28982,29038,28956,29260,29316,29312,29494,29477,29492,29481,29754,29738,29747,29730,29733,29749,29750,29748,29743,29723,29734,29736,29989,29990,30059,30058,30178,30171,30179,30169,30168,30174,30176,30331,30332,30358,30355,30388,30428,30543,30701,30813,30828,30831,31245,31240,31243,31237,31232,31384,31383,31382,31461,31459,31561,31574,31558,31568,31570,31572,31565,31563,31567,31569,31903,31909,32094,32080,32104,32085,32043,32110,32114,32097,32102,32098,32112,32115,21892,32724,32725,32779,32850,32901,33109,33108,33099,33105,33102,33081,33094,33086,33100,33107,33140,33298,33308,33769,33795,33784,33805,33760,33733,33803,33729,33775,33777,33780,33879,33802,33776,33804,33740,33789,33778,33738,33848,33806,33796,33756,33799,33748,33759,34395,34527,34521,34541,34516,34523,34532,34512,34526,34903,35009,35010,34993,35203,35222,35387,35424,35413,35422,35388,35393,35412,35419,35408,35398,35380,35386,35382,35414,35937,35970,36015,36028,36019,36029,36033,36027,36032,36020,36023,36022,36031,36024,36234,36229,36225,36302,36317,36299,36314,36305,36300,36315,36294,36603,36600,36604,36764,36910,36917,36913,36920,36914,36918,37122,37109,37129,37118,37219,37221,37327,37396,37397,37411,37385,37406,37389,37392,37383,37393,38292,38287,38283,38289,38291,38290,38286,38538,38542,38539,38525,38533,38534,38541,38514,38532,38593,38597,38596,38598,38599,38639,38642,38860,38917,38918,38920,39143,39146,39151,39145,39154,39149,39342,39341,40643,40653,40657,20098,20653,20661,20658,20659,20677,20670,20652,20663,20667,20655,20679,21119,21111,21117,21215,21222,21220,21218,21219,21295,21983,21992,21971,21990,21966,21980,21959,21969,21987,21988,21999,21978,21985,21957,21958,21989,21961,22290,22291,22622,22609,22616,22615,22618,22612,22635,22604,22637,22602,22626,22610,22603,22887,23233,23241,23244,23230,23229,23228,23219,23234,23218,23913,23919,24140,24185,24265,24264,24338,24409,24492,24494,24858,24847,24904,24863,24819,24859,24825,24833,24840,24910,24908,24900,24909,24894,24884,24871,24845,24838,24887,25121,25122,25619,25662,25630,25642,25645,25661,25644,25615,25628,25620,25613,25654,25622,25623,25606,25964,26015,26032,26263,26249,26247,26248,26262,26244,26264,26253,26371,27028,26989,26970,26999,26976,26964,26997,26928,27010,26954,26984,26987,26974,26963,27001,27014,26973,26979,26971,27463,27506,27584,27583,27603,27645,28322,28335,28371,28342,28354,28304,28317,28359,28357,28325,28312,28348,28346,28331,28369,28310,28316,28356,28372,28330,28327,28340,29006,29017,29033,29028,29001,29031,29020,29036,29030,29004,29029,29022,28998,29032,29014,29242,29266,29495,29509,29503,29502,29807,29786,29781,29791,29790,29761,29759,29785,29787,29788,30070,30072,30208,30192,30209,30194,30193,30202,30207,30196,30195,30430,30431,30555,30571,30566,30558,30563,30585,30570,30572,30556,30565,30568,30562,30702,30862,30896,30871,30872,30860,30857,30844,30865,30867,30847,31098,31103,31105,33836,31165,31260,31258,31264,31252,31263,31262,31391,31392,31607,31680,31584,31598,31591,31921,31923,31925,32147,32121,32145,32129,32143,32091,32622,32617,32618,32626,32681,32680,32676,32854,32856,32902,32900,33137,33136,33144,33125,33134,33139,33131,33145,33146,33126,33285,33351,33922,33911,33853,33841,33909,33894,33899,33865,33900,33883,33852,33845,33889,33891,33897,33901,33862,34398,34396,34399,34553,34579,34568,34567,34560,34558,34555,34562,34563,34566,34570,34905,35039,35028,35033,35036,35032,35037,35041,35018,35029,35026,35228,35299,35435,35442,35443,35430,35433,35440,35463,35452,35427,35488,35441,35461,35437,35426,35438,35436,35449,35451,35390,35432,35938,35978,35977,36042,36039,36040,36036,36018,36035,36034,36037,36321,36319,36328,36335,36339,36346,36330,36324,36326,36530,36611,36617,36606,36618,36767,36786,36939,36938,36947,36930,36948,36924,36949,36944,36935,36943,36942,36941,36945,36926,36929,37138,37143,37228,37226,37225,37321,37431,37463,37432,37437,37440,37438,37467,37451,37476,37457,37428,37449,37453,37445,37433,37439,37466,38296,38552,38548,38549,38605,38603,38601,38602,38647,38651,38649,38646,38742,38772,38774,38928,38929,38931,38922,38930,38924,39164,39156,39165,39166,39347,39345,39348,39649,40169,40578,40718,40723,40736,20711,20718,20709,20694,20717,20698,20693,20687,20689,20721,20686,20713,20834,20979,21123,21122,21297,21421,22014,22016,22043,22039,22013,22036,22022,22025,22029,22030,22007,22038,22047,22024,22032,22006,22296,22294,22645,22654,22659,22675,22666,22649,22661,22653,22781,22821,22818,22820,22890,22889,23265,23270,23273,23255,23254,23256,23267,23413,23518,23527,23521,23525,23526,23528,23522,23524,23519,23565,23650,23940,23943,24155,24163,24149,24151,24148,24275,24278,24330,24390,24432,24505,24903,24895,24907,24951,24930,24931,24927,24922,24920,24949,25130,25735,25688,25684,25764,25720,25695,25722,25681,25703,25652,25709,25723,25970,26017,26071,26070,26274,26280,26269,27036,27048,27029,27073,27054,27091,27083,27035,27063,27067,27051,27060,27088,27085,27053,27084,27046,27075,27043,27465,27468,27699,28467,28436,28414,28435,28404,28457,28478,28448,28460,28431,28418,28450,28415,28399,28422,28465,28472,28466,28451,28437,28459,28463,28552,28458,28396,28417,28402,28364,28407,29076,29081,29053,29066,29060,29074,29246,29330,29334,29508,29520,29796,29795,29802,29808,29805,29956,30097,30247,30221,30219,30217,30227,30433,30435,30596,30589,30591,30561,30913,30879,30887,30899,30889,30883,31118,31119,31117,31278,31281,31402,31401,31469,31471,31649,31637,31627,31605,31639,31645,31636,31631,31672,31623,31620,31929,31933,31934,32187,32176,32156,32189,32190,32160,32202,32180,32178,32177,32186,32162,32191,32181,32184,32173,32210,32199,32172,32624,32736,32737,32735,32862,32858,32903,33104,33152,33167,33160,33162,33151,33154,33255,33274,33287,33300,33310,33355,33993,33983,33990,33988,33945,33950,33970,33948,33995,33976,33984,34003,33936,33980,34001,33994,34623,34588,34619,34594,34597,34612,34584,34645,34615,34601,35059,35074,35060,35065,35064,35069,35048,35098,35055,35494,35468,35486,35491,35469,35489,35475,35492,35498,35493,35496,35480,35473,35482,35495,35946,35981,35980,36051,36049,36050,36203,36249,36245,36348,36628,36626,36629,36627,36771,36960,36952,36956,36963,36953,36958,36962,36957,36955,37145,37144,37150,37237,37240,37239,37236,37496,37504,37509,37528,37526,37499,37523,37532,37544,37500,37521,38305,38312,38313,38307,38309,38308,38553,38556,38555,38604,38610,38656,38780,38789,38902,38935,38936,39087,39089,39171,39173,39180,39177,39361,39599,39600,39654,39745,39746,40180,40182,40179,40636,40763,40778,20740,20736,20731,20725,20729,20738,20744,20745,20741,20956,21127,21128,21129,21133,21130,21232,21426,22062,22075,22073,22066,22079,22068,22057,22099,22094,22103,22132,22070,22063,22064,22656,22687,22686,22707,22684,22702,22697,22694,22893,23305,23291,23307,23285,23308,23304,23534,23532,23529,23531,23652,23653,23965,23956,24162,24159,24161,24290,24282,24287,24285,24291,24288,24392,24433,24503,24501,24950,24935,24942,24925,24917,24962,24956,24944,24939,24958,24999,24976,25003,24974,25004,24986,24996,24980,25006,25134,25705,25711,25721,25758,25778,25736,25744,25776,25765,25747,25749,25769,25746,25774,25773,25771,25754,25772,25753,25762,25779,25973,25975,25976,26286,26283,26292,26289,27171,27167,27112,27137,27166,27161,27133,27169,27155,27146,27123,27138,27141,27117,27153,27472,27470,27556,27589,27590,28479,28540,28548,28497,28518,28500,28550,28525,28507,28536,28526,28558,28538,28528,28516,28567,28504,28373,28527,28512,28511,29087,29100,29105,29096,29270,29339,29518,29527,29801,29835,29827,29822,29824,30079,30240,30249,30239,30244,30246,30241,30242,30362,30394,30436,30606,30599,30604,30609,30603,30923,30917,30906,30922,30910,30933,30908,30928,31295,31292,31296,31293,31287,31291,31407,31406,31661,31665,31684,31668,31686,31687,31681,31648,31692,31946,32224,32244,32239,32251,32216,32236,32221,32232,32227,32218,32222,32233,32158,32217,32242,32249,32629,32631,32687,32745,32806,33179,33180,33181,33184,33178,33176,34071,34109,34074,34030,34092,34093,34067,34065,34083,34081,34068,34028,34085,34047,34054,34690,34676,34678,34656,34662,34680,34664,34649,34647,34636,34643,34907,34909,35088,35079,35090,35091,35093,35082,35516,35538,35527,35524,35477,35531,35576,35506,35529,35522,35519,35504,35542,35533,35510,35513,35547,35916,35918,35948,36064,36062,36070,36068,36076,36077,36066,36067,36060,36074,36065,36205,36255,36259,36395,36368,36381,36386,36367,36393,36383,36385,36382,36538,36637,36635,36639,36649,36646,36650,36636,36638,36645,36969,36974,36968,36973,36983,37168,37165,37159,37169,37255,37257,37259,37251,37573,37563,37559,37610,37548,37604,37569,37555,37564,37586,37575,37616,37554,38317,38321,38660,38662,38663,38665,38752,38797,38795,38799,38945,38955,38940,39091,39178,39187,39186,39192,39389,39376,39391,39387,39377,39381,39378,39385,39607,39662,39663,39719,39749,39748,39799,39791,40198,40201,40195,40617,40638,40654,22696,40786,20754,20760,20756,20752,20757,20864,20906,20957,21137,21139,21235,22105,22123,22137,22121,22116,22136,22122,22120,22117,22129,22127,22124,22114,22134,22721,22718,22727,22725,22894,23325,23348,23416,23536,23566,24394,25010,24977,25001,24970,25037,25014,25022,25034,25032,25136,25797,25793,25803,25787,25788,25818,25796,25799,25794,25805,25791,25810,25812,25790,25972,26310,26313,26297,26308,26311,26296,27197,27192,27194,27225,27243,27224,27193,27204,27234,27233,27211,27207,27189,27231,27208,27481,27511,27653,28610,28593,28577,28611,28580,28609,28583,28595,28608,28601,28598,28582,28576,28596,29118,29129,29136,29138,29128,29141,29113,29134,29145,29148,29123,29124,29544,29852,29859,29848,29855,29854,29922,29964,29965,30260,30264,30266,30439,30437,30624,30622,30623,30629,30952,30938,30956,30951,31142,31309,31310,31302,31308,31307,31418,31705,31761,31689,31716,31707,31713,31721,31718,31957,31958,32266,32273,32264,32283,32291,32286,32285,32265,32272,32633,32690,32752,32753,32750,32808,33203,33193,33192,33275,33288,33368,33369,34122,34137,34120,34152,34153,34115,34121,34157,34154,34142,34691,34719,34718,34722,34701,34913,35114,35122,35109,35115,35105,35242,35238,35558,35578,35563,35569,35584,35548,35559,35566,35582,35585,35586,35575,35565,35571,35574,35580,35947,35949,35987,36084,36420,36401,36404,36418,36409,36405,36667,36655,36664,36659,36776,36774,36981,36980,36984,36978,36988,36986,37172,37266,37664,37686,37624,37683,37679,37666,37628,37675,37636,37658,37648,37670,37665,37653,37678,37657,38331,38567,38568,38570,38613,38670,38673,38678,38669,38675,38671,38747,38748,38758,38808,38960,38968,38971,38967,38957,38969,38948,39184,39208,39198,39195,39201,39194,39405,39394,39409,39608,39612,39675,39661,39720,39825,40213,40227,40230,40232,40210,40219,40664,40660,40845,40860,20778,20767,20769,20786,21237,22158,22144,22160,22149,22151,22159,22741,22739,22737,22734,23344,23338,23332,23418,23607,23656,23996,23994,23997,23992,24171,24396,24509,25033,25026,25031,25062,25035,25138,25140,25806,25802,25816,25824,25840,25830,25836,25841,25826,25837,25986,25987,26329,26326,27264,27284,27268,27298,27292,27355,27299,27262,27287,27280,27296,27484,27566,27610,27656,28632,28657,28639,28640,28635,28644,28651,28655,28544,28652,28641,28649,28629,28654,28656,29159,29151,29166,29158,29157,29165,29164,29172,29152,29237,29254,29552,29554,29865,29872,29862,29864,30278,30274,30284,30442,30643,30634,30640,30636,30631,30637,30703,30967,30970,30964,30959,30977,31143,31146,31319,31423,31751,31757,31742,31735,31756,31712,31968,31964,31966,31970,31967,31961,31965,32302,32318,32326,32311,32306,32323,32299,32317,32305,32325,32321,32308,32313,32328,32309,32319,32303,32580,32755,32764,32881,32882,32880,32879,32883,33222,33219,33210,33218,33216,33215,33213,33225,33214,33256,33289,33393,34218,34180,34174,34204,34193,34196,34223,34203,34183,34216,34186,34407,34752,34769,34739,34770,34758,34731,34747,34746,34760,34763,35131,35126,35140,35128,35133,35244,35598,35607,35609,35611,35594,35616,35613,35588,35600,35905,35903,35955,36090,36093,36092,36088,36091,36264,36425,36427,36424,36426,36676,36670,36674,36677,36671,36991,36989,36996,36993,36994,36992,37177,37283,37278,37276,37709,37762,37672,37749,37706,37733,37707,37656,37758,37740,37723,37744,37722,37716,38346,38347,38348,38344,38342,38577,38584,38614,38684,38686,38816,38867,38982,39094,39221,39425,39423,39854,39851,39850,39853,40251,40255,40587,40655,40670,40668,40669,40667,40766,40779,21474,22165,22190,22745,22744,23352,24413,25059,25139,25844,25842,25854,25862,25850,25851,25847,26039,26332,26406,27315,27308,27331,27323,27320,27330,27310,27311,27487,27512,27567,28681,28683,28670,28678,28666,28689,28687,29179,29180,29182,29176,29559,29557,29863,29887,29973,30294,30296,30290,30653,30655,30651,30652,30990,31150,31329,31330,31328,31428,31429,31787,31783,31786,31774,31779,31777,31975,32340,32341,32350,32346,32353,32338,32345,32584,32761,32763,32887,32886,33229,33231,33290,34255,34217,34253,34256,34249,34224,34234,34233,34214,34799,34796,34802,34784,35206,35250,35316,35624,35641,35628,35627,35920,36101,36441,36451,36454,36452,36447,36437,36544,36681,36685,36999,36995,37e3,37291,37292,37328,37780,37770,37782,37794,37811,37806,37804,37808,37784,37786,37783,38356,38358,38352,38357,38626,38620,38617,38619,38622,38692,38819,38822,38829,38905,38989,38991,38988,38990,38995,39098,39230,39231,39229,39214,39333,39438,39617,39683,39686,39759,39758,39757,39882,39881,39933,39880,39872,40273,40285,40288,40672,40725,40748,20787,22181,22750,22751,22754,23541,40848,24300,25074,25079,25078,25077,25856,25871,26336,26333,27365,27357,27354,27347,28699,28703,28712,28698,28701,28693,28696,29190,29197,29272,29346,29560,29562,29885,29898,29923,30087,30086,30303,30305,30663,31001,31153,31339,31337,31806,31807,31800,31805,31799,31808,32363,32365,32377,32361,32362,32645,32371,32694,32697,32696,33240,34281,34269,34282,34261,34276,34277,34295,34811,34821,34829,34809,34814,35168,35167,35158,35166,35649,35676,35672,35657,35674,35662,35663,35654,35673,36104,36106,36476,36466,36487,36470,36460,36474,36468,36692,36686,36781,37002,37003,37297,37294,37857,37841,37855,37827,37832,37852,37853,37846,37858,37837,37848,37860,37847,37864,38364,38580,38627,38698,38695,38753,38876,38907,39006,39e3,39003,39100,39237,39241,39446,39449,39693,39912,39911,39894,39899,40329,40289,40306,40298,40300,40594,40599,40595,40628,21240,22184,22199,22198,22196,22204,22756,23360,23363,23421,23542,24009,25080,25082,25880,25876,25881,26342,26407,27372,28734,28720,28722,29200,29563,29903,30306,30309,31014,31018,31020,31019,31431,31478,31820,31811,31821,31983,31984,36782,32381,32380,32386,32588,32768,33242,33382,34299,34297,34321,34298,34310,34315,34311,34314,34836,34837,35172,35258,35320,35696,35692,35686,35695,35679,35691,36111,36109,36489,36481,36485,36482,37300,37323,37912,37891,37885,38369,38704,39108,39250,39249,39336,39467,39472,39479,39477,39955,39949,40569,40629,40680,40751,40799,40803,40801,20791,20792,22209,22208,22210,22804,23660,24013,25084,25086,25885,25884,26005,26345,27387,27396,27386,27570,28748,29211,29351,29910,29908,30313,30675,31824,32399,32396,32700,34327,34349,34330,34851,34850,34849,34847,35178,35180,35261,35700,35703,35709,36115,36490,36493,36491,36703,36783,37306,37934,37939,37941,37946,37944,37938,37931,38370,38712,38713,38706,38911,39015,39013,39255,39493,39491,39488,39486,39631,39764,39761,39981,39973,40367,40372,40386,40376,40605,40687,40729,40796,40806,40807,20796,20795,22216,22218,22217,23423,24020,24018,24398,25087,25892,27402,27489,28753,28760,29568,29924,30090,30318,30316,31155,31840,31839,32894,32893,33247,35186,35183,35324,35712,36118,36119,36497,36499,36705,37192,37956,37969,37970,38717,38718,38851,38849,39019,39253,39509,39501,39634,39706,40009,39985,39998,39995,40403,40407,40756,40812,40810,40852,22220,24022,25088,25891,25899,25898,26348,27408,29914,31434,31844,31843,31845,32403,32406,32404,33250,34360,34367,34865,35722,37008,37007,37987,37984,37988,38760,39023,39260,39514,39515,39511,39635,39636,39633,40020,40023,40022,40421,40607,40692,22225,22761,25900,28766,30321,30322,30679,32592,32648,34870,34873,34914,35731,35730,35734,33399,36123,37312,37994,38722,38728,38724,38854,39024,39519,39714,39768,40031,40441,40442,40572,40573,40711,40823,40818,24307,27414,28771,31852,31854,34875,35264,36513,37313,38002,38e3,39025,39262,39638,39715,40652,28772,30682,35738,38007,38857,39522,39525,32412,35740,36522,37317,38013,38014,38012,40055,40056,40695,35924,38015,40474,29224,39530,39729,40475,40478,31858,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,20022,20031,20101,20128,20866,20886,20907,21241,21304,21353,21430,22794,23424,24027,12083,24191,24308,24400,24417,25908,26080,30098,30326,36789,38582,168,710,12541,12542,12445,12446,12291,20189,12293,12294,12295,12540,65339,65341,10045,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,8679,8632,8633,12751,131276,20058,131210,20994,17553,40880,20872,40881,161287,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,65506,65508,65287,65282,12849,8470,8481,12443,12444,11904,11908,11910,11911,11912,11914,11916,11917,11925,11932,11933,11941,11943,11946,11948,11950,11958,11964,11966,11974,11978,11980,11981,11983,11990,11991,11998,12003,null,null,null,643,592,603,596,629,339,248,331,650,618,20034,20060,20981,21274,21378,19975,19980,20039,20109,22231,64012,23662,24435,19983,20871,19982,20014,20115,20162,20169,20168,20888,21244,21356,21433,22304,22787,22828,23568,24063,26081,27571,27596,27668,29247,20017,20028,20200,20188,20201,20193,20189,20186,21004,21276,21324,22306,22307,22807,22831,23425,23428,23570,23611,23668,23667,24068,24192,24194,24521,25097,25168,27669,27702,27715,27711,27707,29358,29360,29578,31160,32906,38430,20238,20248,20268,20213,20244,20209,20224,20215,20232,20253,20226,20229,20258,20243,20228,20212,20242,20913,21011,21001,21008,21158,21282,21279,21325,21386,21511,22241,22239,22318,22314,22324,22844,22912,22908,22917,22907,22910,22903,22911,23382,23573,23589,23676,23674,23675,23678,24031,24181,24196,24322,24346,24436,24533,24532,24527,25180,25182,25188,25185,25190,25186,25177,25184,25178,25189,26095,26094,26430,26425,26424,26427,26426,26431,26428,26419,27672,27718,27730,27740,27727,27722,27732,27723,27724,28785,29278,29364,29365,29582,29994,30335,31349,32593,33400,33404,33408,33405,33407,34381,35198,37017,37015,37016,37019,37012,38434,38436,38432,38435,20310,20283,20322,20297,20307,20324,20286,20327,20306,20319,20289,20312,20269,20275,20287,20321,20879,20921,21020,21022,21025,21165,21166,21257,21347,21362,21390,21391,21552,21559,21546,21588,21573,21529,21532,21541,21528,21565,21583,21569,21544,21540,21575,22254,22247,22245,22337,22341,22348,22345,22347,22354,22790,22848,22950,22936,22944,22935,22926,22946,22928,22927,22951,22945,23438,23442,23592,23594,23693,23695,23688,23691,23689,23698,23690,23686,23699,23701,24032,24074,24078,24203,24201,24204,24200,24205,24325,24349,24440,24438,24530,24529,24528,24557,24552,24558,24563,24545,24548,24547,24570,24559,24567,24571,24576,24564,25146,25219,25228,25230,25231,25236,25223,25201,25211,25210,25200,25217,25224,25207,25213,25202,25204,25911,26096,26100,26099,26098,26101,26437,26439,26457,26453,26444,26440,26461,26445,26458,26443,27600,27673,27674,27768,27751,27755,27780,27787,27791,27761,27759,27753,27802,27757,27783,27797,27804,27750,27763,27749,27771,27790,28788,28794,29283,29375,29373,29379,29382,29377,29370,29381,29589,29591,29587,29588,29586,30010,30009,30100,30101,30337,31037,32820,32917,32921,32912,32914,32924,33424,33423,33413,33422,33425,33427,33418,33411,33412,35960,36809,36799,37023,37025,37029,37022,37031,37024,38448,38440,38447,38445,20019,20376,20348,20357,20349,20352,20359,20342,20340,20361,20356,20343,20300,20375,20330,20378,20345,20353,20344,20368,20380,20372,20382,20370,20354,20373,20331,20334,20894,20924,20926,21045,21042,21043,21062,21041,21180,21258,21259,21308,21394,21396,21639,21631,21633,21649,21634,21640,21611,21626,21630,21605,21612,21620,21606,21645,21615,21601,21600,21656,21603,21607,21604,22263,22265,22383,22386,22381,22379,22385,22384,22390,22400,22389,22395,22387,22388,22370,22376,22397,22796,22853,22965,22970,22991,22990,22962,22988,22977,22966,22972,22979,22998,22961,22973,22976,22984,22964,22983,23394,23397,23443,23445,23620,23623,23726,23716,23712,23733,23727,23720,23724,23711,23715,23725,23714,23722,23719,23709,23717,23734,23728,23718,24087,24084,24089,24360,24354,24355,24356,24404,24450,24446,24445,24542,24549,24621,24614,24601,24626,24587,24628,24586,24599,24627,24602,24606,24620,24610,24589,24592,24622,24595,24593,24588,24585,24604,25108,25149,25261,25268,25297,25278,25258,25270,25290,25262,25267,25263,25275,25257,25264,25272,25917,26024,26043,26121,26108,26116,26130,26120,26107,26115,26123,26125,26117,26109,26129,26128,26358,26378,26501,26476,26510,26514,26486,26491,26520,26502,26500,26484,26509,26508,26490,26527,26513,26521,26499,26493,26497,26488,26489,26516,27429,27520,27518,27614,27677,27795,27884,27883,27886,27865,27830,27860,27821,27879,27831,27856,27842,27834,27843,27846,27885,27890,27858,27869,27828,27786,27805,27776,27870,27840,27952,27853,27847,27824,27897,27855,27881,27857,28820,28824,28805,28819,28806,28804,28817,28822,28802,28826,28803,29290,29398,29387,29400,29385,29404,29394,29396,29402,29388,29393,29604,29601,29613,29606,29602,29600,29612,29597,29917,29928,30015,30016,30014,30092,30104,30383,30451,30449,30448,30453,30712,30716,30713,30715,30714,30711,31042,31039,31173,31352,31355,31483,31861,31997,32821,32911,32942,32931,32952,32949,32941,33312,33440,33472,33451,33434,33432,33435,33461,33447,33454,33468,33438,33466,33460,33448,33441,33449,33474,33444,33475,33462,33442,34416,34415,34413,34414,35926,36818,36811,36819,36813,36822,36821,36823,37042,37044,37039,37043,37040,38457,38461,38460,38458,38467,20429,20421,20435,20402,20425,20427,20417,20436,20444,20441,20411,20403,20443,20423,20438,20410,20416,20409,20460,21060,21065,21184,21186,21309,21372,21399,21398,21401,21400,21690,21665,21677,21669,21711,21699,33549,21687,21678,21718,21686,21701,21702,21664,21616,21692,21666,21694,21618,21726,21680,22453,22430,22431,22436,22412,22423,22429,22427,22420,22424,22415,22425,22437,22426,22421,22772,22797,22867,23009,23006,23022,23040,23025,23005,23034,23037,23036,23030,23012,23026,23031,23003,23017,23027,23029,23008,23038,23028,23021,23464,23628,23760,23768,23756,23767,23755,23771,23774,23770,23753,23751,23754,23766,23763,23764,23759,23752,23750,23758,23775,23800,24057,24097,24098,24099,24096,24100,24240,24228,24226,24219,24227,24229,24327,24366,24406,24454,24631,24633,24660,24690,24670,24645,24659,24647,24649,24667,24652,24640,24642,24671,24612,24644,24664,24678,24686,25154,25155,25295,25357,25355,25333,25358,25347,25323,25337,25359,25356,25336,25334,25344,25363,25364,25338,25365,25339,25328,25921,25923,26026,26047,26166,26145,26162,26165,26140,26150,26146,26163,26155,26170,26141,26164,26169,26158,26383,26384,26561,26610,26568,26554,26588,26555,26616,26584,26560,26551,26565,26603,26596,26591,26549,26573,26547,26615,26614,26606,26595,26562,26553,26574,26599,26608,26546,26620,26566,26605,26572,26542,26598,26587,26618,26569,26570,26563,26602,26571,27432,27522,27524,27574,27606,27608,27616,27680,27681,27944,27956,27949,27935,27964,27967,27922,27914,27866,27955,27908,27929,27962,27930,27921,27904,27933,27970,27905,27928,27959,27907,27919,27968,27911,27936,27948,27912,27938,27913,27920,28855,28831,28862,28849,28848,28833,28852,28853,28841,29249,29257,29258,29292,29296,29299,29294,29386,29412,29416,29419,29407,29418,29414,29411,29573,29644,29634,29640,29637,29625,29622,29621,29620,29675,29631,29639,29630,29635,29638,29624,29643,29932,29934,29998,30023,30024,30119,30122,30329,30404,30472,30467,30468,30469,30474,30455,30459,30458,30695,30696,30726,30737,30738,30725,30736,30735,30734,30729,30723,30739,31050,31052,31051,31045,31044,31189,31181,31183,31190,31182,31360,31358,31441,31488,31489,31866,31864,31865,31871,31872,31873,32003,32008,32001,32600,32657,32653,32702,32775,32782,32783,32788,32823,32984,32967,32992,32977,32968,32962,32976,32965,32995,32985,32988,32970,32981,32969,32975,32983,32998,32973,33279,33313,33428,33497,33534,33529,33543,33512,33536,33493,33594,33515,33494,33524,33516,33505,33522,33525,33548,33531,33526,33520,33514,33508,33504,33530,33523,33517,34423,34420,34428,34419,34881,34894,34919,34922,34921,35283,35332,35335,36210,36835,36833,36846,36832,37105,37053,37055,37077,37061,37054,37063,37067,37064,37332,37331,38484,38479,38481,38483,38474,38478,20510,20485,20487,20499,20514,20528,20507,20469,20468,20531,20535,20524,20470,20471,20503,20508,20512,20519,20533,20527,20529,20494,20826,20884,20883,20938,20932,20933,20936,20942,21089,21082,21074,21086,21087,21077,21090,21197,21262,21406,21798,21730,21783,21778,21735,21747,21732,21786,21759,21764,21768,21739,21777,21765,21745,21770,21755,21751,21752,21728,21774,21763,21771,22273,22274,22476,22578,22485,22482,22458,22470,22461,22460,22456,22454,22463,22471,22480,22457,22465,22798,22858,23065,23062,23085,23086,23061,23055,23063,23050,23070,23091,23404,23463,23469,23468,23555,23638,23636,23788,23807,23790,23793,23799,23808,23801,24105,24104,24232,24238,24234,24236,24371,24368,24423,24669,24666,24679,24641,24738,24712,24704,24722,24705,24733,24707,24725,24731,24727,24711,24732,24718,25113,25158,25330,25360,25430,25388,25412,25413,25398,25411,25572,25401,25419,25418,25404,25385,25409,25396,25432,25428,25433,25389,25415,25395,25434,25425,25400,25431,25408,25416,25930,25926,26054,26051,26052,26050,26186,26207,26183,26193,26386,26387,26655,26650,26697,26674,26675,26683,26699,26703,26646,26673,26652,26677,26667,26669,26671,26702,26692,26676,26653,26642,26644,26662,26664,26670,26701,26682,26661,26656,27436,27439,27437,27441,27444,27501,32898,27528,27622,27620,27624,27619,27618,27623,27685,28026,28003,28004,28022,27917,28001,28050,27992,28002,28013,28015,28049,28045,28143,28031,28038,27998,28007,28e3,28055,28016,28028,27999,28034,28056,27951,28008,28043,28030,28032,28036,27926,28035,28027,28029,28021,28048,28892,28883,28881,28893,28875,32569,28898,28887,28882,28894,28896,28884,28877,28869,28870,28871,28890,28878,28897,29250,29304,29303,29302,29440,29434,29428,29438,29430,29427,29435,29441,29651,29657,29669,29654,29628,29671,29667,29673,29660,29650,29659,29652,29661,29658,29655,29656,29672,29918,29919,29940,29941,29985,30043,30047,30128,30145,30139,30148,30144,30143,30134,30138,30346,30409,30493,30491,30480,30483,30482,30499,30481,30485,30489,30490,30498,30503,30755,30764,30754,30773,30767,30760,30766,30763,30753,30761,30771,30762,30769,31060,31067,31055,31068,31059,31058,31057,31211,31212,31200,31214,31213,31210,31196,31198,31197,31366,31369,31365,31371,31372,31370,31367,31448,31504,31492,31507,31493,31503,31496,31498,31502,31497,31506,31876,31889,31882,31884,31880,31885,31877,32030,32029,32017,32014,32024,32022,32019,32031,32018,32015,32012,32604,32609,32606,32608,32605,32603,32662,32658,32707,32706,32704,32790,32830,32825,33018,33010,33017,33013,33025,33019,33024,33281,33327,33317,33587,33581,33604,33561,33617,33573,33622,33599,33601,33574,33564,33570,33602,33614,33563,33578,33544,33596,33613,33558,33572,33568,33591,33583,33577,33607,33605,33612,33619,33566,33580,33611,33575,33608,34387,34386,34466,34472,34454,34445,34449,34462,34439,34455,34438,34443,34458,34437,34469,34457,34465,34471,34453,34456,34446,34461,34448,34452,34883,34884,34925,34933,34934,34930,34944,34929,34943,34927,34947,34942,34932,34940,35346,35911,35927,35963,36004,36003,36214,36216,36277,36279,36278,36561,36563,36862,36853,36866,36863,36859,36868,36860,36854,37078,37088,37081,37082,37091,37087,37093,37080,37083,37079,37084,37092,37200,37198,37199,37333,37346,37338,38492,38495,38588,39139,39647,39727,20095,20592,20586,20577,20574,20576,20563,20555,20573,20594,20552,20557,20545,20571,20554,20578,20501,20549,20575,20585,20587,20579,20580,20550,20544,20590,20595,20567,20561,20944,21099,21101,21100,21102,21206,21203,21293,21404,21877,21878,21820,21837,21840,21812,21802,21841,21858,21814,21813,21808,21842,21829,21772,21810,21861,21838,21817,21832,21805,21819,21824,21835,22282,22279,22523,22548,22498,22518,22492,22516,22528,22509,22525,22536,22520,22539,22515,22479,22535,22510,22499,22514,22501,22508,22497,22542,22524,22544,22503,22529,22540,22513,22505,22512,22541,22532,22876,23136,23128,23125,23143,23134,23096,23093,23149,23120,23135,23141,23148,23123,23140,23127,23107,23133,23122,23108,23131,23112,23182,23102,23117,23097,23116,23152,23145,23111,23121,23126,23106,23132,23410,23406,23489,23488,23641,23838,23819,23837,23834,23840,23820,23848,23821,23846,23845,23823,23856,23826,23843,23839,23854,24126,24116,24241,24244,24249,24242,24243,24374,24376,24475,24470,24479,24714,24720,24710,24766,24752,24762,24787,24788,24783,24804,24793,24797,24776,24753,24795,24759,24778,24767,24771,24781,24768,25394,25445,25482,25474,25469,25533,25502,25517,25501,25495,25515,25486,25455,25479,25488,25454,25519,25461,25500,25453,25518,25468,25508,25403,25503,25464,25477,25473,25489,25485,25456,25939,26061,26213,26209,26203,26201,26204,26210,26392,26745,26759,26768,26780,26733,26734,26798,26795,26966,26735,26787,26796,26793,26741,26740,26802,26767,26743,26770,26748,26731,26738,26794,26752,26737,26750,26779,26774,26763,26784,26761,26788,26744,26747,26769,26764,26762,26749,27446,27443,27447,27448,27537,27535,27533,27534,27532,27690,28096,28075,28084,28083,28276,28076,28137,28130,28087,28150,28116,28160,28104,28128,28127,28118,28094,28133,28124,28125,28123,28148,28106,28093,28141,28144,28090,28117,28098,28111,28105,28112,28146,28115,28157,28119,28109,28131,28091,28922,28941,28919,28951,28916,28940,28912,28932,28915,28944,28924,28927,28934,28947,28928,28920,28918,28939,28930,28942,29310,29307,29308,29311,29469,29463,29447,29457,29464,29450,29448,29439,29455,29470,29576,29686,29688,29685,29700,29697,29693,29703,29696,29690,29692,29695,29708,29707,29684,29704,30052,30051,30158,30162,30159,30155,30156,30161,30160,30351,30345,30419,30521,30511,30509,30513,30514,30516,30515,30525,30501,30523,30517,30792,30802,30793,30797,30794,30796,30758,30789,30800,31076,31079,31081,31082,31075,31083,31073,31163,31226,31224,31222,31223,31375,31380,31376,31541,31559,31540,31525,31536,31522,31524,31539,31512,31530,31517,31537,31531,31533,31535,31538,31544,31514,31523,31892,31896,31894,31907,32053,32061,32056,32054,32058,32069,32044,32041,32065,32071,32062,32063,32074,32059,32040,32611,32661,32668,32669,32667,32714,32715,32717,32720,32721,32711,32719,32713,32799,32798,32795,32839,32835,32840,33048,33061,33049,33051,33069,33055,33068,33054,33057,33045,33063,33053,33058,33297,33336,33331,33338,33332,33330,33396,33680,33699,33704,33677,33658,33651,33700,33652,33679,33665,33685,33689,33653,33684,33705,33661,33667,33676,33693,33691,33706,33675,33662,33701,33711,33672,33687,33712,33663,33702,33671,33710,33654,33690,34393,34390,34495,34487,34498,34497,34501,34490,34480,34504,34489,34483,34488,34508,34484,34491,34492,34499,34493,34494,34898,34953,34965,34984,34978,34986,34970,34961,34977,34975,34968,34983,34969,34971,34967,34980,34988,34956,34963,34958,35202,35286,35289,35285,35376,35367,35372,35358,35897,35899,35932,35933,35965,36005,36221,36219,36217,36284,36290,36281,36287,36289,36568,36574,36573,36572,36567,36576,36577,36900,36875,36881,36892,36876,36897,37103,37098,37104,37108,37106,37107,37076,37099,37100,37097,37206,37208,37210,37203,37205,37356,37364,37361,37363,37368,37348,37369,37354,37355,37367,37352,37358,38266,38278,38280,38524,38509,38507,38513,38511,38591,38762,38916,39141,39319,20635,20629,20628,20638,20619,20643,20611,20620,20622,20637,20584,20636,20626,20610,20615,20831,20948,21266,21265,21412,21415,21905,21928,21925,21933,21879,22085,21922,21907,21896,21903,21941,21889,21923,21906,21924,21885,21900,21926,21887,21909,21921,21902,22284,22569,22583,22553,22558,22567,22563,22568,22517,22600,22565,22556,22555,22579,22591,22582,22574,22585,22584,22573,22572,22587,22881,23215,23188,23199,23162,23202,23198,23160,23206,23164,23205,23212,23189,23214,23095,23172,23178,23191,23171,23179,23209,23163,23165,23180,23196,23183,23187,23197,23530,23501,23499,23508,23505,23498,23502,23564,23600,23863,23875,23915,23873,23883,23871,23861,23889,23886,23893,23859,23866,23890,23869,23857,23897,23874,23865,23881,23864,23868,23858,23862,23872,23877,24132,24129,24408,24486,24485,24491,24777,24761,24780,24802,24782,24772,24852,24818,24842,24854,24837,24821,24851,24824,24828,24830,24769,24835,24856,24861,24848,24831,24836,24843,25162,25492,25521,25520,25550,25573,25576,25583,25539,25757,25587,25546,25568,25590,25557,25586,25589,25697,25567,25534,25565,25564,25540,25560,25555,25538,25543,25548,25547,25544,25584,25559,25561,25906,25959,25962,25956,25948,25960,25957,25996,26013,26014,26030,26064,26066,26236,26220,26235,26240,26225,26233,26218,26226,26369,26892,26835,26884,26844,26922,26860,26858,26865,26895,26838,26871,26859,26852,26870,26899,26896,26867,26849,26887,26828,26888,26992,26804,26897,26863,26822,26900,26872,26832,26877,26876,26856,26891,26890,26903,26830,26824,26845,26846,26854,26868,26833,26886,26836,26857,26901,26917,26823,27449,27451,27455,27452,27540,27543,27545,27541,27581,27632,27634,27635,27696,28156,28230,28231,28191,28233,28296,28220,28221,28229,28258,28203,28223,28225,28253,28275,28188,28211,28235,28224,28241,28219,28163,28206,28254,28264,28252,28257,28209,28200,28256,28273,28267,28217,28194,28208,28243,28261,28199,28280,28260,28279,28245,28281,28242,28262,28213,28214,28250,28960,28958,28975,28923,28974,28977,28963,28965,28962,28978,28959,28968,28986,28955,29259,29274,29320,29321,29318,29317,29323,29458,29451,29488,29474,29489,29491,29479,29490,29485,29478,29475,29493,29452,29742,29740,29744,29739,29718,29722,29729,29741,29745,29732,29731,29725,29737,29728,29746,29947,29999,30063,30060,30183,30170,30177,30182,30173,30175,30180,30167,30357,30354,30426,30534,30535,30532,30541,30533,30538,30542,30539,30540,30686,30700,30816,30820,30821,30812,30829,30833,30826,30830,30832,30825,30824,30814,30818,31092,31091,31090,31088,31234,31242,31235,31244,31236,31385,31462,31460,31562,31547,31556,31560,31564,31566,31552,31576,31557,31906,31902,31912,31905,32088,32111,32099,32083,32086,32103,32106,32079,32109,32092,32107,32082,32084,32105,32081,32095,32078,32574,32575,32613,32614,32674,32672,32673,32727,32849,32847,32848,33022,32980,33091,33098,33106,33103,33095,33085,33101,33082,33254,33262,33271,33272,33273,33284,33340,33341,33343,33397,33595,33743,33785,33827,33728,33768,33810,33767,33764,33788,33782,33808,33734,33736,33771,33763,33727,33793,33757,33765,33752,33791,33761,33739,33742,33750,33781,33737,33801,33807,33758,33809,33798,33730,33779,33749,33786,33735,33745,33770,33811,33731,33772,33774,33732,33787,33751,33762,33819,33755,33790,34520,34530,34534,34515,34531,34522,34538,34525,34539,34524,34540,34537,34519,34536,34513,34888,34902,34901,35002,35031,35001,35e3,35008,35006,34998,35004,34999,35005,34994,35073,35017,35221,35224,35223,35293,35290,35291,35406,35405,35385,35417,35392,35415,35416,35396,35397,35410,35400,35409,35402,35404,35407,35935,35969,35968,36026,36030,36016,36025,36021,36228,36224,36233,36312,36307,36301,36295,36310,36316,36303,36309,36313,36296,36311,36293,36591,36599,36602,36601,36582,36590,36581,36597,36583,36584,36598,36587,36593,36588,36596,36585,36909,36916,36911,37126,37164,37124,37119,37116,37128,37113,37115,37121,37120,37127,37125,37123,37217,37220,37215,37218,37216,37377,37386,37413,37379,37402,37414,37391,37388,37376,37394,37375,37373,37382,37380,37415,37378,37404,37412,37401,37399,37381,37398,38267,38285,38284,38288,38535,38526,38536,38537,38531,38528,38594,38600,38595,38641,38640,38764,38768,38766,38919,39081,39147,40166,40697,20099,20100,20150,20669,20671,20678,20654,20676,20682,20660,20680,20674,20656,20673,20666,20657,20683,20681,20662,20664,20951,21114,21112,21115,21116,21955,21979,21964,21968,21963,21962,21981,21952,21972,21956,21993,21951,21970,21901,21967,21973,21986,21974,21960,22002,21965,21977,21954,22292,22611,22632,22628,22607,22605,22601,22639,22613,22606,22621,22617,22629,22619,22589,22627,22641,22780,23239,23236,23243,23226,23224,23217,23221,23216,23231,23240,23227,23238,23223,23232,23242,23220,23222,23245,23225,23184,23510,23512,23513,23583,23603,23921,23907,23882,23909,23922,23916,23902,23912,23911,23906,24048,24143,24142,24138,24141,24139,24261,24268,24262,24267,24263,24384,24495,24493,24823,24905,24906,24875,24901,24886,24882,24878,24902,24879,24911,24873,24896,25120,37224,25123,25125,25124,25541,25585,25579,25616,25618,25609,25632,25636,25651,25667,25631,25621,25624,25657,25655,25634,25635,25612,25638,25648,25640,25665,25653,25647,25610,25626,25664,25637,25639,25611,25575,25627,25646,25633,25614,25967,26002,26067,26246,26252,26261,26256,26251,26250,26265,26260,26232,26400,26982,26975,26936,26958,26978,26993,26943,26949,26986,26937,26946,26967,26969,27002,26952,26953,26933,26988,26931,26941,26981,26864,27e3,26932,26985,26944,26991,26948,26998,26968,26945,26996,26956,26939,26955,26935,26972,26959,26961,26930,26962,26927,27003,26940,27462,27461,27459,27458,27464,27457,27547,64013,27643,27644,27641,27639,27640,28315,28374,28360,28303,28352,28319,28307,28308,28320,28337,28345,28358,28370,28349,28353,28318,28361,28343,28336,28365,28326,28367,28338,28350,28355,28380,28376,28313,28306,28302,28301,28324,28321,28351,28339,28368,28362,28311,28334,28323,28999,29012,29010,29027,29024,28993,29021,29026,29042,29048,29034,29025,28994,29016,28995,29003,29040,29023,29008,29011,28996,29005,29018,29263,29325,29324,29329,29328,29326,29500,29506,29499,29498,29504,29514,29513,29764,29770,29771,29778,29777,29783,29760,29775,29776,29774,29762,29766,29773,29780,29921,29951,29950,29949,29981,30073,30071,27011,30191,30223,30211,30199,30206,30204,30201,30200,30224,30203,30198,30189,30197,30205,30361,30389,30429,30549,30559,30560,30546,30550,30554,30569,30567,30548,30553,30573,30688,30855,30874,30868,30863,30852,30869,30853,30854,30881,30851,30841,30873,30848,30870,30843,31100,31106,31101,31097,31249,31256,31257,31250,31255,31253,31266,31251,31259,31248,31395,31394,31390,31467,31590,31588,31597,31604,31593,31602,31589,31603,31601,31600,31585,31608,31606,31587,31922,31924,31919,32136,32134,32128,32141,32127,32133,32122,32142,32123,32131,32124,32140,32148,32132,32125,32146,32621,32619,32615,32616,32620,32678,32677,32679,32731,32732,32801,33124,33120,33143,33116,33129,33115,33122,33138,26401,33118,33142,33127,33135,33092,33121,33309,33353,33348,33344,33346,33349,34033,33855,33878,33910,33913,33935,33933,33893,33873,33856,33926,33895,33840,33869,33917,33882,33881,33908,33907,33885,34055,33886,33847,33850,33844,33914,33859,33912,33842,33861,33833,33753,33867,33839,33858,33837,33887,33904,33849,33870,33868,33874,33903,33989,33934,33851,33863,33846,33843,33896,33918,33860,33835,33888,33876,33902,33872,34571,34564,34551,34572,34554,34518,34549,34637,34552,34574,34569,34561,34550,34573,34565,35030,35019,35021,35022,35038,35035,35034,35020,35024,35205,35227,35295,35301,35300,35297,35296,35298,35292,35302,35446,35462,35455,35425,35391,35447,35458,35460,35445,35459,35457,35444,35450,35900,35915,35914,35941,35940,35942,35974,35972,35973,36044,36200,36201,36241,36236,36238,36239,36237,36243,36244,36240,36242,36336,36320,36332,36337,36334,36304,36329,36323,36322,36327,36338,36331,36340,36614,36607,36609,36608,36613,36615,36616,36610,36619,36946,36927,36932,36937,36925,37136,37133,37135,37137,37142,37140,37131,37134,37230,37231,37448,37458,37424,37434,37478,37427,37477,37470,37507,37422,37450,37446,37485,37484,37455,37472,37479,37487,37430,37473,37488,37425,37460,37475,37456,37490,37454,37459,37452,37462,37426,38303,38300,38302,38299,38546,38547,38545,38551,38606,38650,38653,38648,38645,38771,38775,38776,38770,38927,38925,38926,39084,39158,39161,39343,39346,39344,39349,39597,39595,39771,40170,40173,40167,40576,40701,20710,20692,20695,20712,20723,20699,20714,20701,20708,20691,20716,20720,20719,20707,20704,20952,21120,21121,21225,21227,21296,21420,22055,22037,22028,22034,22012,22031,22044,22017,22035,22018,22010,22045,22020,22015,22009,22665,22652,22672,22680,22662,22657,22655,22644,22667,22650,22663,22673,22670,22646,22658,22664,22651,22676,22671,22782,22891,23260,23278,23269,23253,23274,23258,23277,23275,23283,23266,23264,23259,23276,23262,23261,23257,23272,23263,23415,23520,23523,23651,23938,23936,23933,23942,23930,23937,23927,23946,23945,23944,23934,23932,23949,23929,23935,24152,24153,24147,24280,24273,24279,24270,24284,24277,24281,24274,24276,24388,24387,24431,24502,24876,24872,24897,24926,24945,24947,24914,24915,24946,24940,24960,24948,24916,24954,24923,24933,24891,24938,24929,24918,25129,25127,25131,25643,25677,25691,25693,25716,25718,25714,25715,25725,25717,25702,25766,25678,25730,25694,25692,25675,25683,25696,25680,25727,25663,25708,25707,25689,25701,25719,25971,26016,26273,26272,26271,26373,26372,26402,27057,27062,27081,27040,27086,27030,27056,27052,27068,27025,27033,27022,27047,27021,27049,27070,27055,27071,27076,27069,27044,27092,27065,27082,27034,27087,27059,27027,27050,27041,27038,27097,27031,27024,27074,27061,27045,27078,27466,27469,27467,27550,27551,27552,27587,27588,27646,28366,28405,28401,28419,28453,28408,28471,28411,28462,28425,28494,28441,28442,28455,28440,28475,28434,28397,28426,28470,28531,28409,28398,28461,28480,28464,28476,28469,28395,28423,28430,28483,28421,28413,28406,28473,28444,28412,28474,28447,28429,28446,28424,28449,29063,29072,29065,29056,29061,29058,29071,29051,29062,29057,29079,29252,29267,29335,29333,29331,29507,29517,29521,29516,29794,29811,29809,29813,29810,29799,29806,29952,29954,29955,30077,30096,30230,30216,30220,30229,30225,30218,30228,30392,30593,30588,30597,30594,30574,30592,30575,30590,30595,30898,30890,30900,30893,30888,30846,30891,30878,30885,30880,30892,30882,30884,31128,31114,31115,31126,31125,31124,31123,31127,31112,31122,31120,31275,31306,31280,31279,31272,31270,31400,31403,31404,31470,31624,31644,31626,31633,31632,31638,31629,31628,31643,31630,31621,31640,21124,31641,31652,31618,31931,31935,31932,31930,32167,32183,32194,32163,32170,32193,32192,32197,32157,32206,32196,32198,32203,32204,32175,32185,32150,32188,32159,32166,32174,32169,32161,32201,32627,32738,32739,32741,32734,32804,32861,32860,33161,33158,33155,33159,33165,33164,33163,33301,33943,33956,33953,33951,33978,33998,33986,33964,33966,33963,33977,33972,33985,33997,33962,33946,33969,34e3,33949,33959,33979,33954,33940,33991,33996,33947,33961,33967,33960,34006,33944,33974,33999,33952,34007,34004,34002,34011,33968,33937,34401,34611,34595,34600,34667,34624,34606,34590,34593,34585,34587,34627,34604,34625,34622,34630,34592,34610,34602,34605,34620,34578,34618,34609,34613,34626,34598,34599,34616,34596,34586,34608,34577,35063,35047,35057,35058,35066,35070,35054,35068,35062,35067,35056,35052,35051,35229,35233,35231,35230,35305,35307,35304,35499,35481,35467,35474,35471,35478,35901,35944,35945,36053,36047,36055,36246,36361,36354,36351,36365,36349,36362,36355,36359,36358,36357,36350,36352,36356,36624,36625,36622,36621,37155,37148,37152,37154,37151,37149,37146,37156,37153,37147,37242,37234,37241,37235,37541,37540,37494,37531,37498,37536,37524,37546,37517,37542,37530,37547,37497,37527,37503,37539,37614,37518,37506,37525,37538,37501,37512,37537,37514,37510,37516,37529,37543,37502,37511,37545,37533,37515,37421,38558,38561,38655,38744,38781,38778,38782,38787,38784,38786,38779,38788,38785,38783,38862,38861,38934,39085,39086,39170,39168,39175,39325,39324,39363,39353,39355,39354,39362,39357,39367,39601,39651,39655,39742,39743,39776,39777,39775,40177,40178,40181,40615,20735,20739,20784,20728,20742,20743,20726,20734,20747,20748,20733,20746,21131,21132,21233,21231,22088,22082,22092,22069,22081,22090,22089,22086,22104,22106,22080,22067,22077,22060,22078,22072,22058,22074,22298,22699,22685,22705,22688,22691,22703,22700,22693,22689,22783,23295,23284,23293,23287,23286,23299,23288,23298,23289,23297,23303,23301,23311,23655,23961,23959,23967,23954,23970,23955,23957,23968,23964,23969,23962,23966,24169,24157,24160,24156,32243,24283,24286,24289,24393,24498,24971,24963,24953,25009,25008,24994,24969,24987,24979,25007,25005,24991,24978,25002,24993,24973,24934,25011,25133,25710,25712,25750,25760,25733,25751,25756,25743,25739,25738,25740,25763,25759,25704,25777,25752,25974,25978,25977,25979,26034,26035,26293,26288,26281,26290,26295,26282,26287,27136,27142,27159,27109,27128,27157,27121,27108,27168,27135,27116,27106,27163,27165,27134,27175,27122,27118,27156,27127,27111,27200,27144,27110,27131,27149,27132,27115,27145,27140,27160,27173,27151,27126,27174,27143,27124,27158,27473,27557,27555,27554,27558,27649,27648,27647,27650,28481,28454,28542,28551,28614,28562,28557,28553,28556,28514,28495,28549,28506,28566,28534,28524,28546,28501,28530,28498,28496,28503,28564,28563,28509,28416,28513,28523,28541,28519,28560,28499,28555,28521,28543,28565,28515,28535,28522,28539,29106,29103,29083,29104,29088,29082,29097,29109,29085,29093,29086,29092,29089,29098,29084,29095,29107,29336,29338,29528,29522,29534,29535,29536,29533,29531,29537,29530,29529,29538,29831,29833,29834,29830,29825,29821,29829,29832,29820,29817,29960,29959,30078,30245,30238,30233,30237,30236,30243,30234,30248,30235,30364,30365,30366,30363,30605,30607,30601,30600,30925,30907,30927,30924,30929,30926,30932,30920,30915,30916,30921,31130,31137,31136,31132,31138,31131,27510,31289,31410,31412,31411,31671,31691,31678,31660,31694,31663,31673,31690,31669,31941,31944,31948,31947,32247,32219,32234,32231,32215,32225,32259,32250,32230,32246,32241,32240,32238,32223,32630,32684,32688,32685,32749,32747,32746,32748,32742,32744,32868,32871,33187,33183,33182,33173,33186,33177,33175,33302,33359,33363,33362,33360,33358,33361,34084,34107,34063,34048,34089,34062,34057,34061,34079,34058,34087,34076,34043,34091,34042,34056,34060,34036,34090,34034,34069,34039,34027,34035,34044,34066,34026,34025,34070,34046,34088,34077,34094,34050,34045,34078,34038,34097,34086,34023,34024,34032,34031,34041,34072,34080,34096,34059,34073,34095,34402,34646,34659,34660,34679,34785,34675,34648,34644,34651,34642,34657,34650,34641,34654,34669,34666,34640,34638,34655,34653,34671,34668,34682,34670,34652,34661,34639,34683,34677,34658,34663,34665,34906,35077,35084,35092,35083,35095,35096,35097,35078,35094,35089,35086,35081,35234,35236,35235,35309,35312,35308,35535,35526,35512,35539,35537,35540,35541,35515,35543,35518,35520,35525,35544,35523,35514,35517,35545,35902,35917,35983,36069,36063,36057,36072,36058,36061,36071,36256,36252,36257,36251,36384,36387,36389,36388,36398,36373,36379,36374,36369,36377,36390,36391,36372,36370,36376,36371,36380,36375,36378,36652,36644,36632,36634,36640,36643,36630,36631,36979,36976,36975,36967,36971,37167,37163,37161,37162,37170,37158,37166,37253,37254,37258,37249,37250,37252,37248,37584,37571,37572,37568,37593,37558,37583,37617,37599,37592,37609,37591,37597,37580,37615,37570,37608,37578,37576,37582,37606,37581,37589,37577,37600,37598,37607,37585,37587,37557,37601,37574,37556,38268,38316,38315,38318,38320,38564,38562,38611,38661,38664,38658,38746,38794,38798,38792,38864,38863,38942,38941,38950,38953,38952,38944,38939,38951,39090,39176,39162,39185,39188,39190,39191,39189,39388,39373,39375,39379,39380,39374,39369,39382,39384,39371,39383,39372,39603,39660,39659,39667,39666,39665,39750,39747,39783,39796,39793,39782,39798,39797,39792,39784,39780,39788,40188,40186,40189,40191,40183,40199,40192,40185,40187,40200,40197,40196,40579,40659,40719,40720,20764,20755,20759,20762,20753,20958,21300,21473,22128,22112,22126,22131,22118,22115,22125,22130,22110,22135,22300,22299,22728,22717,22729,22719,22714,22722,22716,22726,23319,23321,23323,23329,23316,23315,23312,23318,23336,23322,23328,23326,23535,23980,23985,23977,23975,23989,23984,23982,23978,23976,23986,23981,23983,23988,24167,24168,24166,24175,24297,24295,24294,24296,24293,24395,24508,24989,25e3,24982,25029,25012,25030,25025,25036,25018,25023,25016,24972,25815,25814,25808,25807,25801,25789,25737,25795,25819,25843,25817,25907,25983,25980,26018,26312,26302,26304,26314,26315,26319,26301,26299,26298,26316,26403,27188,27238,27209,27239,27186,27240,27198,27229,27245,27254,27227,27217,27176,27226,27195,27199,27201,27242,27236,27216,27215,27220,27247,27241,27232,27196,27230,27222,27221,27213,27214,27206,27477,27476,27478,27559,27562,27563,27592,27591,27652,27651,27654,28589,28619,28579,28615,28604,28622,28616,28510,28612,28605,28574,28618,28584,28676,28581,28590,28602,28588,28586,28623,28607,28600,28578,28617,28587,28621,28591,28594,28592,29125,29122,29119,29112,29142,29120,29121,29131,29140,29130,29127,29135,29117,29144,29116,29126,29146,29147,29341,29342,29545,29542,29543,29548,29541,29547,29546,29823,29850,29856,29844,29842,29845,29857,29963,30080,30255,30253,30257,30269,30259,30268,30261,30258,30256,30395,30438,30618,30621,30625,30620,30619,30626,30627,30613,30617,30615,30941,30953,30949,30954,30942,30947,30939,30945,30946,30957,30943,30944,31140,31300,31304,31303,31414,31416,31413,31409,31415,31710,31715,31719,31709,31701,31717,31706,31720,31737,31700,31722,31714,31708,31723,31704,31711,31954,31956,31959,31952,31953,32274,32289,32279,32268,32287,32288,32275,32270,32284,32277,32282,32290,32267,32271,32278,32269,32276,32293,32292,32579,32635,32636,32634,32689,32751,32810,32809,32876,33201,33190,33198,33209,33205,33195,33200,33196,33204,33202,33207,33191,33266,33365,33366,33367,34134,34117,34155,34125,34131,34145,34136,34112,34118,34148,34113,34146,34116,34129,34119,34147,34110,34139,34161,34126,34158,34165,34133,34151,34144,34188,34150,34141,34132,34149,34156,34403,34405,34404,34715,34703,34711,34707,34706,34696,34689,34710,34712,34681,34695,34723,34693,34704,34705,34717,34692,34708,34716,34714,34697,35102,35110,35120,35117,35118,35111,35121,35106,35113,35107,35119,35116,35103,35313,35552,35554,35570,35572,35573,35549,35604,35556,35551,35568,35528,35550,35553,35560,35583,35567,35579,35985,35986,35984,36085,36078,36081,36080,36083,36204,36206,36261,36263,36403,36414,36408,36416,36421,36406,36412,36413,36417,36400,36415,36541,36662,36654,36661,36658,36665,36663,36660,36982,36985,36987,36998,37114,37171,37173,37174,37267,37264,37265,37261,37263,37671,37662,37640,37663,37638,37647,37754,37688,37692,37659,37667,37650,37633,37702,37677,37646,37645,37579,37661,37626,37669,37651,37625,37623,37684,37634,37668,37631,37673,37689,37685,37674,37652,37644,37643,37630,37641,37632,37627,37654,38332,38349,38334,38329,38330,38326,38335,38325,38333,38569,38612,38667,38674,38672,38809,38807,38804,38896,38904,38965,38959,38962,39204,39199,39207,39209,39326,39406,39404,39397,39396,39408,39395,39402,39401,39399,39609,39615,39604,39611,39670,39674,39673,39671,39731,39808,39813,39815,39804,39806,39803,39810,39827,39826,39824,39802,39829,39805,39816,40229,40215,40224,40222,40212,40233,40221,40216,40226,40208,40217,40223,40584,40582,40583,40622,40621,40661,40662,40698,40722,40765,20774,20773,20770,20772,20768,20777,21236,22163,22156,22157,22150,22148,22147,22142,22146,22143,22145,22742,22740,22735,22738,23341,23333,23346,23331,23340,23335,23334,23343,23342,23419,23537,23538,23991,24172,24170,24510,24507,25027,25013,25020,25063,25056,25061,25060,25064,25054,25839,25833,25827,25835,25828,25832,25985,25984,26038,26074,26322,27277,27286,27265,27301,27273,27295,27291,27297,27294,27271,27283,27278,27285,27267,27304,27300,27281,27263,27302,27290,27269,27276,27282,27483,27565,27657,28620,28585,28660,28628,28643,28636,28653,28647,28646,28638,28658,28637,28642,28648,29153,29169,29160,29170,29156,29168,29154,29555,29550,29551,29847,29874,29867,29840,29866,29869,29873,29861,29871,29968,29969,29970,29967,30084,30275,30280,30281,30279,30372,30441,30645,30635,30642,30647,30646,30644,30641,30632,30704,30963,30973,30978,30971,30972,30962,30981,30969,30974,30980,31147,31144,31324,31323,31318,31320,31316,31322,31422,31424,31425,31749,31759,31730,31744,31743,31739,31758,31732,31755,31731,31746,31753,31747,31745,31736,31741,31750,31728,31729,31760,31754,31976,32301,32316,32322,32307,38984,32312,32298,32329,32320,32327,32297,32332,32304,32315,32310,32324,32314,32581,32639,32638,32637,32756,32754,32812,33211,33220,33228,33226,33221,33223,33212,33257,33371,33370,33372,34179,34176,34191,34215,34197,34208,34187,34211,34171,34212,34202,34206,34167,34172,34185,34209,34170,34168,34135,34190,34198,34182,34189,34201,34205,34177,34210,34178,34184,34181,34169,34166,34200,34192,34207,34408,34750,34730,34733,34757,34736,34732,34745,34741,34748,34734,34761,34755,34754,34764,34743,34735,34756,34762,34740,34742,34751,34744,34749,34782,34738,35125,35123,35132,35134,35137,35154,35127,35138,35245,35247,35246,35314,35315,35614,35608,35606,35601,35589,35595,35618,35599,35602,35605,35591,35597,35592,35590,35612,35603,35610,35919,35952,35954,35953,35951,35989,35988,36089,36207,36430,36429,36435,36432,36428,36423,36675,36672,36997,36990,37176,37274,37282,37275,37273,37279,37281,37277,37280,37793,37763,37807,37732,37718,37703,37756,37720,37724,37750,37705,37712,37713,37728,37741,37775,37708,37738,37753,37719,37717,37714,37711,37745,37751,37755,37729,37726,37731,37735,37760,37710,37721,38343,38336,38345,38339,38341,38327,38574,38576,38572,38688,38687,38680,38685,38681,38810,38817,38812,38814,38813,38869,38868,38897,38977,38980,38986,38985,38981,38979,39205,39211,39212,39210,39219,39218,39215,39213,39217,39216,39320,39331,39329,39426,39418,39412,39415,39417,39416,39414,39419,39421,39422,39420,39427,39614,39678,39677,39681,39676,39752,39834,39848,39838,39835,39846,39841,39845,39844,39814,39842,39840,39855,40243,40257,40295,40246,40238,40239,40241,40248,40240,40261,40258,40259,40254,40247,40256,40253,32757,40237,40586,40585,40589,40624,40648,40666,40699,40703,40740,40739,40738,40788,40864,20785,20781,20782,22168,22172,22167,22170,22173,22169,22896,23356,23657,23658,24e3,24173,24174,25048,25055,25069,25070,25073,25066,25072,25067,25046,25065,25855,25860,25853,25848,25857,25859,25852,26004,26075,26330,26331,26328,27333,27321,27325,27361,27334,27322,27318,27319,27335,27316,27309,27486,27593,27659,28679,28684,28685,28673,28677,28692,28686,28671,28672,28667,28710,28668,28663,28682,29185,29183,29177,29187,29181,29558,29880,29888,29877,29889,29886,29878,29883,29890,29972,29971,30300,30308,30297,30288,30291,30295,30298,30374,30397,30444,30658,30650,30975,30988,30995,30996,30985,30992,30994,30993,31149,31148,31327,31772,31785,31769,31776,31775,31789,31773,31782,31784,31778,31781,31792,32348,32336,32342,32355,32344,32354,32351,32337,32352,32343,32339,32693,32691,32759,32760,32885,33233,33234,33232,33375,33374,34228,34246,34240,34243,34242,34227,34229,34237,34247,34244,34239,34251,34254,34248,34245,34225,34230,34258,34340,34232,34231,34238,34409,34791,34790,34786,34779,34795,34794,34789,34783,34803,34788,34772,34780,34771,34797,34776,34787,34724,34775,34777,34817,34804,34792,34781,35155,35147,35151,35148,35142,35152,35153,35145,35626,35623,35619,35635,35632,35637,35655,35631,35644,35646,35633,35621,35639,35622,35638,35630,35620,35643,35645,35642,35906,35957,35993,35992,35991,36094,36100,36098,36096,36444,36450,36448,36439,36438,36446,36453,36455,36443,36442,36449,36445,36457,36436,36678,36679,36680,36683,37160,37178,37179,37182,37288,37285,37287,37295,37290,37813,37772,37778,37815,37787,37789,37769,37799,37774,37802,37790,37798,37781,37768,37785,37791,37773,37809,37777,37810,37796,37800,37812,37795,37797,38354,38355,38353,38579,38615,38618,24002,38623,38616,38621,38691,38690,38693,38828,38830,38824,38827,38820,38826,38818,38821,38871,38873,38870,38872,38906,38992,38993,38994,39096,39233,39228,39226,39439,39435,39433,39437,39428,39441,39434,39429,39431,39430,39616,39644,39688,39684,39685,39721,39733,39754,39756,39755,39879,39878,39875,39871,39873,39861,39864,39891,39862,39876,39865,39869,40284,40275,40271,40266,40283,40267,40281,40278,40268,40279,40274,40276,40287,40280,40282,40590,40588,40671,40705,40704,40726,40741,40747,40746,40745,40744,40780,40789,20788,20789,21142,21239,21428,22187,22189,22182,22183,22186,22188,22746,22749,22747,22802,23357,23358,23359,24003,24176,24511,25083,25863,25872,25869,25865,25868,25870,25988,26078,26077,26334,27367,27360,27340,27345,27353,27339,27359,27356,27344,27371,27343,27341,27358,27488,27568,27660,28697,28711,28704,28694,28715,28705,28706,28707,28713,28695,28708,28700,28714,29196,29194,29191,29186,29189,29349,29350,29348,29347,29345,29899,29893,29879,29891,29974,30304,30665,30666,30660,30705,31005,31003,31009,31004,30999,31006,31152,31335,31336,31795,31804,31801,31788,31803,31980,31978,32374,32373,32376,32368,32375,32367,32378,32370,32372,32360,32587,32586,32643,32646,32695,32765,32766,32888,33239,33237,33380,33377,33379,34283,34289,34285,34265,34273,34280,34266,34263,34284,34290,34296,34264,34271,34275,34268,34257,34288,34278,34287,34270,34274,34816,34810,34819,34806,34807,34825,34828,34827,34822,34812,34824,34815,34826,34818,35170,35162,35163,35159,35169,35164,35160,35165,35161,35208,35255,35254,35318,35664,35656,35658,35648,35667,35670,35668,35659,35669,35665,35650,35666,35671,35907,35959,35958,35994,36102,36103,36105,36268,36266,36269,36267,36461,36472,36467,36458,36463,36475,36546,36690,36689,36687,36688,36691,36788,37184,37183,37296,37293,37854,37831,37839,37826,37850,37840,37881,37868,37836,37849,37801,37862,37834,37844,37870,37859,37845,37828,37838,37824,37842,37863,38269,38362,38363,38625,38697,38699,38700,38696,38694,38835,38839,38838,38877,38878,38879,39004,39001,39005,38999,39103,39101,39099,39102,39240,39239,39235,39334,39335,39450,39445,39461,39453,39460,39451,39458,39456,39463,39459,39454,39452,39444,39618,39691,39690,39694,39692,39735,39914,39915,39904,39902,39908,39910,39906,39920,39892,39895,39916,39900,39897,39909,39893,39905,39898,40311,40321,40330,40324,40328,40305,40320,40312,40326,40331,40332,40317,40299,40308,40309,40304,40297,40325,40307,40315,40322,40303,40313,40319,40327,40296,40596,40593,40640,40700,40749,40768,40769,40781,40790,40791,40792,21303,22194,22197,22195,22755,23365,24006,24007,24302,24303,24512,24513,25081,25879,25878,25877,25875,26079,26344,26339,26340,27379,27376,27370,27368,27385,27377,27374,27375,28732,28725,28719,28727,28724,28721,28738,28728,28735,28730,28729,28736,28731,28723,28737,29203,29204,29352,29565,29564,29882,30379,30378,30398,30445,30668,30670,30671,30669,30706,31013,31011,31015,31016,31012,31017,31154,31342,31340,31341,31479,31817,31816,31818,31815,31813,31982,32379,32382,32385,32384,32698,32767,32889,33243,33241,33291,33384,33385,34338,34303,34305,34302,34331,34304,34294,34308,34313,34309,34316,34301,34841,34832,34833,34839,34835,34838,35171,35174,35257,35319,35680,35690,35677,35688,35683,35685,35687,35693,36270,36486,36488,36484,36697,36694,36695,36693,36696,36698,37005,37187,37185,37303,37301,37298,37299,37899,37907,37883,37920,37903,37908,37886,37909,37904,37928,37913,37901,37877,37888,37879,37895,37902,37910,37906,37882,37897,37880,37898,37887,37884,37900,37878,37905,37894,38366,38368,38367,38702,38703,38841,38843,38909,38910,39008,39010,39011,39007,39105,39106,39248,39246,39257,39244,39243,39251,39474,39476,39473,39468,39466,39478,39465,39470,39480,39469,39623,39626,39622,39696,39698,39697,39947,39944,39927,39941,39954,39928,4e4,39943,39950,39942,39959,39956,39945,40351,40345,40356,40349,40338,40344,40336,40347,40352,40340,40348,40362,40343,40353,40346,40354,40360,40350,40355,40383,40361,40342,40358,40359,40601,40603,40602,40677,40676,40679,40678,40752,40750,40795,40800,40798,40797,40793,40849,20794,20793,21144,21143,22211,22205,22206,23368,23367,24011,24015,24305,25085,25883,27394,27388,27395,27384,27392,28739,28740,28746,28744,28745,28741,28742,29213,29210,29209,29566,29975,30314,30672,31021,31025,31023,31828,31827,31986,32394,32391,32392,32395,32390,32397,32589,32699,32816,33245,34328,34346,34342,34335,34339,34332,34329,34343,34350,34337,34336,34345,34334,34341,34857,34845,34843,34848,34852,34844,34859,34890,35181,35177,35182,35179,35322,35705,35704,35653,35706,35707,36112,36116,36271,36494,36492,36702,36699,36701,37190,37188,37189,37305,37951,37947,37942,37929,37949,37948,37936,37945,37930,37943,37932,37952,37937,38373,38372,38371,38709,38714,38847,38881,39012,39113,39110,39104,39256,39254,39481,39485,39494,39492,39490,39489,39482,39487,39629,39701,39703,39704,39702,39738,39762,39979,39965,39964,39980,39971,39976,39977,39972,39969,40375,40374,40380,40385,40391,40394,40399,40382,40389,40387,40379,40373,40398,40377,40378,40364,40392,40369,40365,40396,40371,40397,40370,40570,40604,40683,40686,40685,40731,40728,40730,40753,40782,40805,40804,40850,20153,22214,22213,22219,22897,23371,23372,24021,24017,24306,25889,25888,25894,25890,27403,27400,27401,27661,28757,28758,28759,28754,29214,29215,29353,29567,29912,29909,29913,29911,30317,30381,31029,31156,31344,31345,31831,31836,31833,31835,31834,31988,31985,32401,32591,32647,33246,33387,34356,34357,34355,34348,34354,34358,34860,34856,34854,34858,34853,35185,35263,35262,35323,35710,35716,35714,35718,35717,35711,36117,36501,36500,36506,36498,36496,36502,36503,36704,36706,37191,37964,37968,37962,37963,37967,37959,37957,37960,37961,37958,38719,38883,39018,39017,39115,39252,39259,39502,39507,39508,39500,39503,39496,39498,39497,39506,39504,39632,39705,39723,39739,39766,39765,40006,40008,39999,40004,39993,39987,40001,39996,39991,39988,39986,39997,39990,40411,40402,40414,40410,40395,40400,40412,40401,40415,40425,40409,40408,40406,40437,40405,40413,40630,40688,40757,40755,40754,40770,40811,40853,40866,20797,21145,22760,22759,22898,23373,24024,34863,24399,25089,25091,25092,25897,25893,26006,26347,27409,27410,27407,27594,28763,28762,29218,29570,29569,29571,30320,30676,31847,31846,32405,33388,34362,34368,34361,34364,34353,34363,34366,34864,34866,34862,34867,35190,35188,35187,35326,35724,35726,35723,35720,35909,36121,36504,36708,36707,37308,37986,37973,37981,37975,37982,38852,38853,38912,39510,39513,39710,39711,39712,40018,40024,40016,40010,40013,40011,40021,40025,40012,40014,40443,40439,40431,40419,40427,40440,40420,40438,40417,40430,40422,40434,40432,40418,40428,40436,40435,40424,40429,40642,40656,40690,40691,40710,40732,40760,40759,40758,40771,40783,40817,40816,40814,40815,22227,22221,23374,23661,25901,26349,26350,27411,28767,28769,28765,28768,29219,29915,29925,30677,31032,31159,31158,31850,32407,32649,33389,34371,34872,34871,34869,34891,35732,35733,36510,36511,36512,36509,37310,37309,37314,37995,37992,37993,38629,38726,38723,38727,38855,38885,39518,39637,39769,40035,40039,40038,40034,40030,40032,40450,40446,40455,40451,40454,40453,40448,40449,40457,40447,40445,40452,40608,40734,40774,40820,40821,40822,22228,25902,26040,27416,27417,27415,27418,28770,29222,29354,30680,30681,31033,31849,31851,31990,32410,32408,32411,32409,33248,33249,34374,34375,34376,35193,35194,35196,35195,35327,35736,35737,36517,36516,36515,37998,37997,37999,38001,38003,38729,39026,39263,40040,40046,40045,40459,40461,40464,40463,40466,40465,40609,40693,40713,40775,40824,40827,40826,40825,22302,28774,31855,34876,36274,36518,37315,38004,38008,38006,38005,39520,40052,40051,40049,40053,40468,40467,40694,40714,40868,28776,28773,31991,34410,34878,34877,34879,35742,35996,36521,36553,38731,39027,39028,39116,39265,39339,39524,39526,39527,39716,40469,40471,40776,25095,27422,29223,34380,36520,38018,38016,38017,39529,39528,39726,40473,29225,34379,35743,38019,40057,40631,30325,39531,40058,40477,28777,28778,40612,40830,40777,40856,30849,37561,35023,22715,24658,31911,23290,9556,9574,9559,9568,9580,9571,9562,9577,9565,9554,9572,9557,9566,9578,9569,9560,9575,9563,9555,9573,9558,9567,9579,9570,9561,9576,9564,9553,9552,9581,9582,9584,9583,65517,132423,37595,132575,147397,34124,17077,29679,20917,13897,149826,166372,37700,137691,33518,146632,30780,26436,25311,149811,166314,131744,158643,135941,20395,140525,20488,159017,162436,144896,150193,140563,20521,131966,24484,131968,131911,28379,132127,20605,20737,13434,20750,39020,14147,33814,149924,132231,20832,144308,20842,134143,139516,131813,140592,132494,143923,137603,23426,34685,132531,146585,20914,20920,40244,20937,20943,20945,15580,20947,150182,20915,20962,21314,20973,33741,26942,145197,24443,21003,21030,21052,21173,21079,21140,21177,21189,31765,34114,21216,34317,158483,21253,166622,21833,28377,147328,133460,147436,21299,21316,134114,27851,136998,26651,29653,24650,16042,14540,136936,29149,17570,21357,21364,165547,21374,21375,136598,136723,30694,21395,166555,21408,21419,21422,29607,153458,16217,29596,21441,21445,27721,20041,22526,21465,15019,134031,21472,147435,142755,21494,134263,21523,28793,21803,26199,27995,21613,158547,134516,21853,21647,21668,18342,136973,134877,15796,134477,166332,140952,21831,19693,21551,29719,21894,21929,22021,137431,147514,17746,148533,26291,135348,22071,26317,144010,26276,26285,22093,22095,30961,22257,38791,21502,22272,22255,22253,166758,13859,135759,22342,147877,27758,28811,22338,14001,158846,22502,136214,22531,136276,148323,22566,150517,22620,22698,13665,22752,22748,135740,22779,23551,22339,172368,148088,37843,13729,22815,26790,14019,28249,136766,23076,21843,136850,34053,22985,134478,158849,159018,137180,23001,137211,137138,159142,28017,137256,136917,23033,159301,23211,23139,14054,149929,23159,14088,23190,29797,23251,159649,140628,15749,137489,14130,136888,24195,21200,23414,25992,23420,162318,16388,18525,131588,23509,24928,137780,154060,132517,23539,23453,19728,23557,138052,23571,29646,23572,138405,158504,23625,18653,23685,23785,23791,23947,138745,138807,23824,23832,23878,138916,23738,24023,33532,14381,149761,139337,139635,33415,14390,15298,24110,27274,24181,24186,148668,134355,21414,20151,24272,21416,137073,24073,24308,164994,24313,24315,14496,24316,26686,37915,24333,131521,194708,15070,18606,135994,24378,157832,140240,24408,140401,24419,38845,159342,24434,37696,166454,24487,23990,15711,152144,139114,159992,140904,37334,131742,166441,24625,26245,137335,14691,15815,13881,22416,141236,31089,15936,24734,24740,24755,149890,149903,162387,29860,20705,23200,24932,33828,24898,194726,159442,24961,20980,132694,24967,23466,147383,141407,25043,166813,170333,25040,14642,141696,141505,24611,24924,25886,25483,131352,25285,137072,25301,142861,25452,149983,14871,25656,25592,136078,137212,25744,28554,142902,38932,147596,153373,25825,25829,38011,14950,25658,14935,25933,28438,150056,150051,25989,25965,25951,143486,26037,149824,19255,26065,16600,137257,26080,26083,24543,144384,26136,143863,143864,26180,143780,143781,26187,134773,26215,152038,26227,26228,138813,143921,165364,143816,152339,30661,141559,39332,26370,148380,150049,15147,27130,145346,26462,26471,26466,147917,168173,26583,17641,26658,28240,37436,26625,144358,159136,26717,144495,27105,27147,166623,26995,26819,144845,26881,26880,15666,14849,144956,15232,26540,26977,166474,17148,26934,27032,15265,132041,33635,20624,27129,144985,139562,27205,145155,27293,15347,26545,27336,168348,15373,27421,133411,24798,27445,27508,141261,28341,146139,132021,137560,14144,21537,146266,27617,147196,27612,27703,140427,149745,158545,27738,33318,27769,146876,17605,146877,147876,149772,149760,146633,14053,15595,134450,39811,143865,140433,32655,26679,159013,159137,159211,28054,27996,28284,28420,149887,147589,159346,34099,159604,20935,27804,28189,33838,166689,28207,146991,29779,147330,31180,28239,23185,143435,28664,14093,28573,146992,28410,136343,147517,17749,37872,28484,28508,15694,28532,168304,15675,28575,147780,28627,147601,147797,147513,147440,147380,147775,20959,147798,147799,147776,156125,28747,28798,28839,28801,28876,28885,28886,28895,16644,15848,29108,29078,148087,28971,28997,23176,29002,29038,23708,148325,29007,37730,148161,28972,148570,150055,150050,29114,166888,28861,29198,37954,29205,22801,37955,29220,37697,153093,29230,29248,149876,26813,29269,29271,15957,143428,26637,28477,29314,29482,29483,149539,165931,18669,165892,29480,29486,29647,29610,134202,158254,29641,29769,147938,136935,150052,26147,14021,149943,149901,150011,29687,29717,26883,150054,29753,132547,16087,29788,141485,29792,167602,29767,29668,29814,33721,29804,14128,29812,37873,27180,29826,18771,150156,147807,150137,166799,23366,166915,137374,29896,137608,29966,29929,29982,167641,137803,23511,167596,37765,30029,30026,30055,30062,151426,16132,150803,30094,29789,30110,30132,30210,30252,30289,30287,30319,30326,156661,30352,33263,14328,157969,157966,30369,30373,30391,30412,159647,33890,151709,151933,138780,30494,30502,30528,25775,152096,30552,144044,30639,166244,166248,136897,30708,30729,136054,150034,26826,30895,30919,30931,38565,31022,153056,30935,31028,30897,161292,36792,34948,166699,155779,140828,31110,35072,26882,31104,153687,31133,162617,31036,31145,28202,160038,16040,31174,168205,31188],"euc-kr":[44034,44035,44037,44038,44043,44044,44045,44046,44047,44056,44062,44063,44065,44066,44067,44069,44070,44071,44072,44073,44074,44075,44078,44082,44083,44084,null,null,null,null,null,null,44085,44086,44087,44090,44091,44093,44094,44095,44097,44098,44099,44100,44101,44102,44103,44104,44105,44106,44108,44110,44111,44112,44113,44114,44115,44117,null,null,null,null,null,null,44118,44119,44121,44122,44123,44125,44126,44127,44128,44129,44130,44131,44132,44133,44134,44135,44136,44137,44138,44139,44140,44141,44142,44143,44146,44147,44149,44150,44153,44155,44156,44157,44158,44159,44162,44167,44168,44173,44174,44175,44177,44178,44179,44181,44182,44183,44184,44185,44186,44187,44190,44194,44195,44196,44197,44198,44199,44203,44205,44206,44209,44210,44211,44212,44213,44214,44215,44218,44222,44223,44224,44226,44227,44229,44230,44231,44233,44234,44235,44237,44238,44239,44240,44241,44242,44243,44244,44246,44248,44249,44250,44251,44252,44253,44254,44255,44258,44259,44261,44262,44265,44267,44269,44270,44274,44276,44279,44280,44281,44282,44283,44286,44287,44289,44290,44291,44293,44295,44296,44297,44298,44299,44302,44304,44306,44307,44308,44309,44310,44311,44313,44314,44315,44317,44318,44319,44321,44322,44323,44324,44325,44326,44327,44328,44330,44331,44334,44335,44336,44337,44338,44339,null,null,null,null,null,null,44342,44343,44345,44346,44347,44349,44350,44351,44352,44353,44354,44355,44358,44360,44362,44363,44364,44365,44366,44367,44369,44370,44371,44373,44374,44375,null,null,null,null,null,null,44377,44378,44379,44380,44381,44382,44383,44384,44386,44388,44389,44390,44391,44392,44393,44394,44395,44398,44399,44401,44402,44407,44408,44409,44410,44414,44416,44419,44420,44421,44422,44423,44426,44427,44429,44430,44431,44433,44434,44435,44436,44437,44438,44439,44440,44441,44442,44443,44446,44447,44448,44449,44450,44451,44453,44454,44455,44456,44457,44458,44459,44460,44461,44462,44463,44464,44465,44466,44467,44468,44469,44470,44472,44473,44474,44475,44476,44477,44478,44479,44482,44483,44485,44486,44487,44489,44490,44491,44492,44493,44494,44495,44498,44500,44501,44502,44503,44504,44505,44506,44507,44509,44510,44511,44513,44514,44515,44517,44518,44519,44520,44521,44522,44523,44524,44525,44526,44527,44528,44529,44530,44531,44532,44533,44534,44535,44538,44539,44541,44542,44546,44547,44548,44549,44550,44551,44554,44556,44558,44559,44560,44561,44562,44563,44565,44566,44567,44568,44569,44570,44571,44572,null,null,null,null,null,null,44573,44574,44575,44576,44577,44578,44579,44580,44581,44582,44583,44584,44585,44586,44587,44588,44589,44590,44591,44594,44595,44597,44598,44601,44603,44604,null,null,null,null,null,null,44605,44606,44607,44610,44612,44615,44616,44617,44619,44623,44625,44626,44627,44629,44631,44632,44633,44634,44635,44638,44642,44643,44644,44646,44647,44650,44651,44653,44654,44655,44657,44658,44659,44660,44661,44662,44663,44666,44670,44671,44672,44673,44674,44675,44678,44679,44680,44681,44682,44683,44685,44686,44687,44688,44689,44690,44691,44692,44693,44694,44695,44696,44697,44698,44699,44700,44701,44702,44703,44704,44705,44706,44707,44708,44709,44710,44711,44712,44713,44714,44715,44716,44717,44718,44719,44720,44721,44722,44723,44724,44725,44726,44727,44728,44729,44730,44731,44735,44737,44738,44739,44741,44742,44743,44744,44745,44746,44747,44750,44754,44755,44756,44757,44758,44759,44762,44763,44765,44766,44767,44768,44769,44770,44771,44772,44773,44774,44775,44777,44778,44780,44782,44783,44784,44785,44786,44787,44789,44790,44791,44793,44794,44795,44797,44798,44799,44800,44801,44802,44803,44804,44805,null,null,null,null,null,null,44806,44809,44810,44811,44812,44814,44815,44817,44818,44819,44820,44821,44822,44823,44824,44825,44826,44827,44828,44829,44830,44831,44832,44833,44834,44835,null,null,null,null,null,null,44836,44837,44838,44839,44840,44841,44842,44843,44846,44847,44849,44851,44853,44854,44855,44856,44857,44858,44859,44862,44864,44868,44869,44870,44871,44874,44875,44876,44877,44878,44879,44881,44882,44883,44884,44885,44886,44887,44888,44889,44890,44891,44894,44895,44896,44897,44898,44899,44902,44903,44904,44905,44906,44907,44908,44909,44910,44911,44912,44913,44914,44915,44916,44917,44918,44919,44920,44922,44923,44924,44925,44926,44927,44929,44930,44931,44933,44934,44935,44937,44938,44939,44940,44941,44942,44943,44946,44947,44948,44950,44951,44952,44953,44954,44955,44957,44958,44959,44960,44961,44962,44963,44964,44965,44966,44967,44968,44969,44970,44971,44972,44973,44974,44975,44976,44977,44978,44979,44980,44981,44982,44983,44986,44987,44989,44990,44991,44993,44994,44995,44996,44997,44998,45002,45004,45007,45008,45009,45010,45011,45013,45014,45015,45016,45017,45018,45019,45021,45022,45023,45024,45025,null,null,null,null,null,null,45026,45027,45028,45029,45030,45031,45034,45035,45036,45037,45038,45039,45042,45043,45045,45046,45047,45049,45050,45051,45052,45053,45054,45055,45058,45059,null,null,null,null,null,null,45061,45062,45063,45064,45065,45066,45067,45069,45070,45071,45073,45074,45075,45077,45078,45079,45080,45081,45082,45083,45086,45087,45088,45089,45090,45091,45092,45093,45094,45095,45097,45098,45099,45100,45101,45102,45103,45104,45105,45106,45107,45108,45109,45110,45111,45112,45113,45114,45115,45116,45117,45118,45119,45120,45121,45122,45123,45126,45127,45129,45131,45133,45135,45136,45137,45138,45142,45144,45146,45147,45148,45150,45151,45152,45153,45154,45155,45156,45157,45158,45159,45160,45161,45162,45163,45164,45165,45166,45167,45168,45169,45170,45171,45172,45173,45174,45175,45176,45177,45178,45179,45182,45183,45185,45186,45187,45189,45190,45191,45192,45193,45194,45195,45198,45200,45202,45203,45204,45205,45206,45207,45211,45213,45214,45219,45220,45221,45222,45223,45226,45232,45234,45238,45239,45241,45242,45243,45245,45246,45247,45248,45249,45250,45251,45254,45258,45259,45260,45261,45262,45263,45266,null,null,null,null,null,null,45267,45269,45270,45271,45273,45274,45275,45276,45277,45278,45279,45281,45282,45283,45284,45286,45287,45288,45289,45290,45291,45292,45293,45294,45295,45296,null,null,null,null,null,null,45297,45298,45299,45300,45301,45302,45303,45304,45305,45306,45307,45308,45309,45310,45311,45312,45313,45314,45315,45316,45317,45318,45319,45322,45325,45326,45327,45329,45332,45333,45334,45335,45338,45342,45343,45344,45345,45346,45350,45351,45353,45354,45355,45357,45358,45359,45360,45361,45362,45363,45366,45370,45371,45372,45373,45374,45375,45378,45379,45381,45382,45383,45385,45386,45387,45388,45389,45390,45391,45394,45395,45398,45399,45401,45402,45403,45405,45406,45407,45409,45410,45411,45412,45413,45414,45415,45416,45417,45418,45419,45420,45421,45422,45423,45424,45425,45426,45427,45428,45429,45430,45431,45434,45435,45437,45438,45439,45441,45443,45444,45445,45446,45447,45450,45452,45454,45455,45456,45457,45461,45462,45463,45465,45466,45467,45469,45470,45471,45472,45473,45474,45475,45476,45477,45478,45479,45481,45482,45483,45484,45485,45486,45487,45488,45489,45490,45491,45492,45493,45494,45495,45496,null,null,null,null,null,null,45497,45498,45499,45500,45501,45502,45503,45504,45505,45506,45507,45508,45509,45510,45511,45512,45513,45514,45515,45517,45518,45519,45521,45522,45523,45525,null,null,null,null,null,null,45526,45527,45528,45529,45530,45531,45534,45536,45537,45538,45539,45540,45541,45542,45543,45546,45547,45549,45550,45551,45553,45554,45555,45556,45557,45558,45559,45560,45562,45564,45566,45567,45568,45569,45570,45571,45574,45575,45577,45578,45581,45582,45583,45584,45585,45586,45587,45590,45592,45594,45595,45596,45597,45598,45599,45601,45602,45603,45604,45605,45606,45607,45608,45609,45610,45611,45612,45613,45614,45615,45616,45617,45618,45619,45621,45622,45623,45624,45625,45626,45627,45629,45630,45631,45632,45633,45634,45635,45636,45637,45638,45639,45640,45641,45642,45643,45644,45645,45646,45647,45648,45649,45650,45651,45652,45653,45654,45655,45657,45658,45659,45661,45662,45663,45665,45666,45667,45668,45669,45670,45671,45674,45675,45676,45677,45678,45679,45680,45681,45682,45683,45686,45687,45688,45689,45690,45691,45693,45694,45695,45696,45697,45698,45699,45702,45703,45704,45706,45707,45708,45709,45710,null,null,null,null,null,null,45711,45714,45715,45717,45718,45719,45723,45724,45725,45726,45727,45730,45732,45735,45736,45737,45739,45741,45742,45743,45745,45746,45747,45749,45750,45751,null,null,null,null,null,null,45752,45753,45754,45755,45756,45757,45758,45759,45760,45761,45762,45763,45764,45765,45766,45767,45770,45771,45773,45774,45775,45777,45779,45780,45781,45782,45783,45786,45788,45790,45791,45792,45793,45795,45799,45801,45802,45808,45809,45810,45814,45820,45821,45822,45826,45827,45829,45830,45831,45833,45834,45835,45836,45837,45838,45839,45842,45846,45847,45848,45849,45850,45851,45853,45854,45855,45856,45857,45858,45859,45860,45861,45862,45863,45864,45865,45866,45867,45868,45869,45870,45871,45872,45873,45874,45875,45876,45877,45878,45879,45880,45881,45882,45883,45884,45885,45886,45887,45888,45889,45890,45891,45892,45893,45894,45895,45896,45897,45898,45899,45900,45901,45902,45903,45904,45905,45906,45907,45911,45913,45914,45917,45920,45921,45922,45923,45926,45928,45930,45932,45933,45935,45938,45939,45941,45942,45943,45945,45946,45947,45948,45949,45950,45951,45954,45958,45959,45960,45961,45962,45963,45965,null,null,null,null,null,null,45966,45967,45969,45970,45971,45973,45974,45975,45976,45977,45978,45979,45980,45981,45982,45983,45986,45987,45988,45989,45990,45991,45993,45994,45995,45997,null,null,null,null,null,null,45998,45999,46e3,46001,46002,46003,46004,46005,46006,46007,46008,46009,46010,46011,46012,46013,46014,46015,46016,46017,46018,46019,46022,46023,46025,46026,46029,46031,46033,46034,46035,46038,46040,46042,46044,46046,46047,46049,46050,46051,46053,46054,46055,46057,46058,46059,46060,46061,46062,46063,46064,46065,46066,46067,46068,46069,46070,46071,46072,46073,46074,46075,46077,46078,46079,46080,46081,46082,46083,46084,46085,46086,46087,46088,46089,46090,46091,46092,46093,46094,46095,46097,46098,46099,46100,46101,46102,46103,46105,46106,46107,46109,46110,46111,46113,46114,46115,46116,46117,46118,46119,46122,46124,46125,46126,46127,46128,46129,46130,46131,46133,46134,46135,46136,46137,46138,46139,46140,46141,46142,46143,46144,46145,46146,46147,46148,46149,46150,46151,46152,46153,46154,46155,46156,46157,46158,46159,46162,46163,46165,46166,46167,46169,46170,46171,46172,46173,46174,46175,46178,46180,46182,null,null,null,null,null,null,46183,46184,46185,46186,46187,46189,46190,46191,46192,46193,46194,46195,46196,46197,46198,46199,46200,46201,46202,46203,46204,46205,46206,46207,46209,46210,null,null,null,null,null,null,46211,46212,46213,46214,46215,46217,46218,46219,46220,46221,46222,46223,46224,46225,46226,46227,46228,46229,46230,46231,46232,46233,46234,46235,46236,46238,46239,46240,46241,46242,46243,46245,46246,46247,46249,46250,46251,46253,46254,46255,46256,46257,46258,46259,46260,46262,46264,46266,46267,46268,46269,46270,46271,46273,46274,46275,46277,46278,46279,46281,46282,46283,46284,46285,46286,46287,46289,46290,46291,46292,46294,46295,46296,46297,46298,46299,46302,46303,46305,46306,46309,46311,46312,46313,46314,46315,46318,46320,46322,46323,46324,46325,46326,46327,46329,46330,46331,46332,46333,46334,46335,46336,46337,46338,46339,46340,46341,46342,46343,46344,46345,46346,46347,46348,46349,46350,46351,46352,46353,46354,46355,46358,46359,46361,46362,46365,46366,46367,46368,46369,46370,46371,46374,46379,46380,46381,46382,46383,46386,46387,46389,46390,46391,46393,46394,46395,46396,46397,46398,46399,46402,46406,null,null,null,null,null,null,46407,46408,46409,46410,46414,46415,46417,46418,46419,46421,46422,46423,46424,46425,46426,46427,46430,46434,46435,46436,46437,46438,46439,46440,46441,46442,null,null,null,null,null,null,46443,46444,46445,46446,46447,46448,46449,46450,46451,46452,46453,46454,46455,46456,46457,46458,46459,46460,46461,46462,46463,46464,46465,46466,46467,46468,46469,46470,46471,46472,46473,46474,46475,46476,46477,46478,46479,46480,46481,46482,46483,46484,46485,46486,46487,46488,46489,46490,46491,46492,46493,46494,46495,46498,46499,46501,46502,46503,46505,46508,46509,46510,46511,46514,46518,46519,46520,46521,46522,46526,46527,46529,46530,46531,46533,46534,46535,46536,46537,46538,46539,46542,46546,46547,46548,46549,46550,46551,46553,46554,46555,46556,46557,46558,46559,46560,46561,46562,46563,46564,46565,46566,46567,46568,46569,46570,46571,46573,46574,46575,46576,46577,46578,46579,46580,46581,46582,46583,46584,46585,46586,46587,46588,46589,46590,46591,46592,46593,46594,46595,46596,46597,46598,46599,46600,46601,46602,46603,46604,46605,46606,46607,46610,46611,46613,46614,46615,46617,46618,46619,46620,46621,null,null,null,null,null,null,46622,46623,46624,46625,46626,46627,46628,46630,46631,46632,46633,46634,46635,46637,46638,46639,46640,46641,46642,46643,46645,46646,46647,46648,46649,46650,null,null,null,null,null,null,46651,46652,46653,46654,46655,46656,46657,46658,46659,46660,46661,46662,46663,46665,46666,46667,46668,46669,46670,46671,46672,46673,46674,46675,46676,46677,46678,46679,46680,46681,46682,46683,46684,46685,46686,46687,46688,46689,46690,46691,46693,46694,46695,46697,46698,46699,46700,46701,46702,46703,46704,46705,46706,46707,46708,46709,46710,46711,46712,46713,46714,46715,46716,46717,46718,46719,46720,46721,46722,46723,46724,46725,46726,46727,46728,46729,46730,46731,46732,46733,46734,46735,46736,46737,46738,46739,46740,46741,46742,46743,46744,46745,46746,46747,46750,46751,46753,46754,46755,46757,46758,46759,46760,46761,46762,46765,46766,46767,46768,46770,46771,46772,46773,46774,46775,46776,46777,46778,46779,46780,46781,46782,46783,46784,46785,46786,46787,46788,46789,46790,46791,46792,46793,46794,46795,46796,46797,46798,46799,46800,46801,46802,46803,46805,46806,46807,46808,46809,46810,46811,46812,46813,null,null,null,null,null,null,46814,46815,46816,46817,46818,46819,46820,46821,46822,46823,46824,46825,46826,46827,46828,46829,46830,46831,46833,46834,46835,46837,46838,46839,46841,46842,null,null,null,null,null,null,46843,46844,46845,46846,46847,46850,46851,46852,46854,46855,46856,46857,46858,46859,46860,46861,46862,46863,46864,46865,46866,46867,46868,46869,46870,46871,46872,46873,46874,46875,46876,46877,46878,46879,46880,46881,46882,46883,46884,46885,46886,46887,46890,46891,46893,46894,46897,46898,46899,46900,46901,46902,46903,46906,46908,46909,46910,46911,46912,46913,46914,46915,46917,46918,46919,46921,46922,46923,46925,46926,46927,46928,46929,46930,46931,46934,46935,46936,46937,46938,46939,46940,46941,46942,46943,46945,46946,46947,46949,46950,46951,46953,46954,46955,46956,46957,46958,46959,46962,46964,46966,46967,46968,46969,46970,46971,46974,46975,46977,46978,46979,46981,46982,46983,46984,46985,46986,46987,46990,46995,46996,46997,47002,47003,47005,47006,47007,47009,47010,47011,47012,47013,47014,47015,47018,47022,47023,47024,47025,47026,47027,47030,47031,47033,47034,47035,47036,47037,47038,47039,47040,47041,null,null,null,null,null,null,47042,47043,47044,47045,47046,47048,47050,47051,47052,47053,47054,47055,47056,47057,47058,47059,47060,47061,47062,47063,47064,47065,47066,47067,47068,47069,null,null,null,null,null,null,47070,47071,47072,47073,47074,47075,47076,47077,47078,47079,47080,47081,47082,47083,47086,47087,47089,47090,47091,47093,47094,47095,47096,47097,47098,47099,47102,47106,47107,47108,47109,47110,47114,47115,47117,47118,47119,47121,47122,47123,47124,47125,47126,47127,47130,47132,47134,47135,47136,47137,47138,47139,47142,47143,47145,47146,47147,47149,47150,47151,47152,47153,47154,47155,47158,47162,47163,47164,47165,47166,47167,47169,47170,47171,47173,47174,47175,47176,47177,47178,47179,47180,47181,47182,47183,47184,47186,47188,47189,47190,47191,47192,47193,47194,47195,47198,47199,47201,47202,47203,47205,47206,47207,47208,47209,47210,47211,47214,47216,47218,47219,47220,47221,47222,47223,47225,47226,47227,47229,47230,47231,47232,47233,47234,47235,47236,47237,47238,47239,47240,47241,47242,47243,47244,47246,47247,47248,47249,47250,47251,47252,47253,47254,47255,47256,47257,47258,47259,47260,47261,47262,47263,null,null,null,null,null,null,47264,47265,47266,47267,47268,47269,47270,47271,47273,47274,47275,47276,47277,47278,47279,47281,47282,47283,47285,47286,47287,47289,47290,47291,47292,47293,null,null,null,null,null,null,47294,47295,47298,47300,47302,47303,47304,47305,47306,47307,47309,47310,47311,47313,47314,47315,47317,47318,47319,47320,47321,47322,47323,47324,47326,47328,47330,47331,47332,47333,47334,47335,47338,47339,47341,47342,47343,47345,47346,47347,47348,47349,47350,47351,47354,47356,47358,47359,47360,47361,47362,47363,47365,47366,47367,47368,47369,47370,47371,47372,47373,47374,47375,47376,47377,47378,47379,47380,47381,47382,47383,47385,47386,47387,47388,47389,47390,47391,47393,47394,47395,47396,47397,47398,47399,47400,47401,47402,47403,47404,47405,47406,47407,47408,47409,47410,47411,47412,47413,47414,47415,47416,47417,47418,47419,47422,47423,47425,47426,47427,47429,47430,47431,47432,47433,47434,47435,47437,47438,47440,47442,47443,47444,47445,47446,47447,47450,47451,47453,47454,47455,47457,47458,47459,47460,47461,47462,47463,47466,47468,47470,47471,47472,47473,47474,47475,47478,47479,47481,47482,47483,47485,null,null,null,null,null,null,47486,47487,47488,47489,47490,47491,47494,47496,47499,47500,47503,47504,47505,47506,47507,47508,47509,47510,47511,47512,47513,47514,47515,47516,47517,47518,null,null,null,null,null,null,47519,47520,47521,47522,47523,47524,47525,47526,47527,47528,47529,47530,47531,47534,47535,47537,47538,47539,47541,47542,47543,47544,47545,47546,47547,47550,47552,47554,47555,47556,47557,47558,47559,47562,47563,47565,47571,47572,47573,47574,47575,47578,47580,47583,47584,47586,47590,47591,47593,47594,47595,47597,47598,47599,47600,47601,47602,47603,47606,47611,47612,47613,47614,47615,47618,47619,47620,47621,47622,47623,47625,47626,47627,47628,47629,47630,47631,47632,47633,47634,47635,47636,47638,47639,47640,47641,47642,47643,47644,47645,47646,47647,47648,47649,47650,47651,47652,47653,47654,47655,47656,47657,47658,47659,47660,47661,47662,47663,47664,47665,47666,47667,47668,47669,47670,47671,47674,47675,47677,47678,47679,47681,47683,47684,47685,47686,47687,47690,47692,47695,47696,47697,47698,47702,47703,47705,47706,47707,47709,47710,47711,47712,47713,47714,47715,47718,47722,47723,47724,47725,47726,47727,null,null,null,null,null,null,47730,47731,47733,47734,47735,47737,47738,47739,47740,47741,47742,47743,47744,47745,47746,47750,47752,47753,47754,47755,47757,47758,47759,47760,47761,47762,null,null,null,null,null,null,47763,47764,47765,47766,47767,47768,47769,47770,47771,47772,47773,47774,47775,47776,47777,47778,47779,47780,47781,47782,47783,47786,47789,47790,47791,47793,47795,47796,47797,47798,47799,47802,47804,47806,47807,47808,47809,47810,47811,47813,47814,47815,47817,47818,47819,47820,47821,47822,47823,47824,47825,47826,47827,47828,47829,47830,47831,47834,47835,47836,47837,47838,47839,47840,47841,47842,47843,47844,47845,47846,47847,47848,47849,47850,47851,47852,47853,47854,47855,47856,47857,47858,47859,47860,47861,47862,47863,47864,47865,47866,47867,47869,47870,47871,47873,47874,47875,47877,47878,47879,47880,47881,47882,47883,47884,47886,47888,47890,47891,47892,47893,47894,47895,47897,47898,47899,47901,47902,47903,47905,47906,47907,47908,47909,47910,47911,47912,47914,47916,47917,47918,47919,47920,47921,47922,47923,47927,47929,47930,47935,47936,47937,47938,47939,47942,47944,47946,47947,47948,47950,47953,47954,null,null,null,null,null,null,47955,47957,47958,47959,47961,47962,47963,47964,47965,47966,47967,47968,47970,47972,47973,47974,47975,47976,47977,47978,47979,47981,47982,47983,47984,47985,null,null,null,null,null,null,47986,47987,47988,47989,47990,47991,47992,47993,47994,47995,47996,47997,47998,47999,48e3,48001,48002,48003,48004,48005,48006,48007,48009,48010,48011,48013,48014,48015,48017,48018,48019,48020,48021,48022,48023,48024,48025,48026,48027,48028,48029,48030,48031,48032,48033,48034,48035,48037,48038,48039,48041,48042,48043,48045,48046,48047,48048,48049,48050,48051,48053,48054,48056,48057,48058,48059,48060,48061,48062,48063,48065,48066,48067,48069,48070,48071,48073,48074,48075,48076,48077,48078,48079,48081,48082,48084,48085,48086,48087,48088,48089,48090,48091,48092,48093,48094,48095,48096,48097,48098,48099,48100,48101,48102,48103,48104,48105,48106,48107,48108,48109,48110,48111,48112,48113,48114,48115,48116,48117,48118,48119,48122,48123,48125,48126,48129,48131,48132,48133,48134,48135,48138,48142,48144,48146,48147,48153,48154,48160,48161,48162,48163,48166,48168,48170,48171,48172,48174,48175,48178,48179,48181,null,null,null,null,null,null,48182,48183,48185,48186,48187,48188,48189,48190,48191,48194,48198,48199,48200,48202,48203,48206,48207,48209,48210,48211,48212,48213,48214,48215,48216,48217,null,null,null,null,null,null,48218,48219,48220,48222,48223,48224,48225,48226,48227,48228,48229,48230,48231,48232,48233,48234,48235,48236,48237,48238,48239,48240,48241,48242,48243,48244,48245,48246,48247,48248,48249,48250,48251,48252,48253,48254,48255,48256,48257,48258,48259,48262,48263,48265,48266,48269,48271,48272,48273,48274,48275,48278,48280,48283,48284,48285,48286,48287,48290,48291,48293,48294,48297,48298,48299,48300,48301,48302,48303,48306,48310,48311,48312,48313,48314,48315,48318,48319,48321,48322,48323,48325,48326,48327,48328,48329,48330,48331,48332,48334,48338,48339,48340,48342,48343,48345,48346,48347,48349,48350,48351,48352,48353,48354,48355,48356,48357,48358,48359,48360,48361,48362,48363,48364,48365,48366,48367,48368,48369,48370,48371,48375,48377,48378,48379,48381,48382,48383,48384,48385,48386,48387,48390,48392,48394,48395,48396,48397,48398,48399,48401,48402,48403,48405,48406,48407,48408,48409,48410,48411,48412,48413,null,null,null,null,null,null,48414,48415,48416,48417,48418,48419,48421,48422,48423,48424,48425,48426,48427,48429,48430,48431,48432,48433,48434,48435,48436,48437,48438,48439,48440,48441,null,null,null,null,null,null,48442,48443,48444,48445,48446,48447,48449,48450,48451,48452,48453,48454,48455,48458,48459,48461,48462,48463,48465,48466,48467,48468,48469,48470,48471,48474,48475,48476,48477,48478,48479,48480,48481,48482,48483,48485,48486,48487,48489,48490,48491,48492,48493,48494,48495,48496,48497,48498,48499,48500,48501,48502,48503,48504,48505,48506,48507,48508,48509,48510,48511,48514,48515,48517,48518,48523,48524,48525,48526,48527,48530,48532,48534,48535,48536,48539,48541,48542,48543,48544,48545,48546,48547,48549,48550,48551,48552,48553,48554,48555,48556,48557,48558,48559,48561,48562,48563,48564,48565,48566,48567,48569,48570,48571,48572,48573,48574,48575,48576,48577,48578,48579,48580,48581,48582,48583,48584,48585,48586,48587,48588,48589,48590,48591,48592,48593,48594,48595,48598,48599,48601,48602,48603,48605,48606,48607,48608,48609,48610,48611,48612,48613,48614,48615,48616,48618,48619,48620,48621,48622,48623,48625,null,null,null,null,null,null,48626,48627,48629,48630,48631,48633,48634,48635,48636,48637,48638,48639,48641,48642,48644,48646,48647,48648,48649,48650,48651,48654,48655,48657,48658,48659,null,null,null,null,null,null,48661,48662,48663,48664,48665,48666,48667,48670,48672,48673,48674,48675,48676,48677,48678,48679,48680,48681,48682,48683,48684,48685,48686,48687,48688,48689,48690,48691,48692,48693,48694,48695,48696,48697,48698,48699,48700,48701,48702,48703,48704,48705,48706,48707,48710,48711,48713,48714,48715,48717,48719,48720,48721,48722,48723,48726,48728,48732,48733,48734,48735,48738,48739,48741,48742,48743,48745,48747,48748,48749,48750,48751,48754,48758,48759,48760,48761,48762,48766,48767,48769,48770,48771,48773,48774,48775,48776,48777,48778,48779,48782,48786,48787,48788,48789,48790,48791,48794,48795,48796,48797,48798,48799,48800,48801,48802,48803,48804,48805,48806,48807,48809,48810,48811,48812,48813,48814,48815,48816,48817,48818,48819,48820,48821,48822,48823,48824,48825,48826,48827,48828,48829,48830,48831,48832,48833,48834,48835,48836,48837,48838,48839,48840,48841,48842,48843,48844,48845,48846,48847,48850,48851,null,null,null,null,null,null,48853,48854,48857,48858,48859,48860,48861,48862,48863,48865,48866,48870,48871,48872,48873,48874,48875,48877,48878,48879,48880,48881,48882,48883,48884,48885,null,null,null,null,null,null,48886,48887,48888,48889,48890,48891,48892,48893,48894,48895,48896,48898,48899,48900,48901,48902,48903,48906,48907,48908,48909,48910,48911,48912,48913,48914,48915,48916,48917,48918,48919,48922,48926,48927,48928,48929,48930,48931,48932,48933,48934,48935,48936,48937,48938,48939,48940,48941,48942,48943,48944,48945,48946,48947,48948,48949,48950,48951,48952,48953,48954,48955,48956,48957,48958,48959,48962,48963,48965,48966,48967,48969,48970,48971,48972,48973,48974,48975,48978,48979,48980,48982,48983,48984,48985,48986,48987,48988,48989,48990,48991,48992,48993,48994,48995,48996,48997,48998,48999,49e3,49001,49002,49003,49004,49005,49006,49007,49008,49009,49010,49011,49012,49013,49014,49015,49016,49017,49018,49019,49020,49021,49022,49023,49024,49025,49026,49027,49028,49029,49030,49031,49032,49033,49034,49035,49036,49037,49038,49039,49040,49041,49042,49043,49045,49046,49047,49048,49049,49050,49051,49052,49053,null,null,null,null,null,null,49054,49055,49056,49057,49058,49059,49060,49061,49062,49063,49064,49065,49066,49067,49068,49069,49070,49071,49073,49074,49075,49076,49077,49078,49079,49080,null,null,null,null,null,null,49081,49082,49083,49084,49085,49086,49087,49088,49089,49090,49091,49092,49094,49095,49096,49097,49098,49099,49102,49103,49105,49106,49107,49109,49110,49111,49112,49113,49114,49115,49117,49118,49120,49122,49123,49124,49125,49126,49127,49128,49129,49130,49131,49132,49133,49134,49135,49136,49137,49138,49139,49140,49141,49142,49143,49144,49145,49146,49147,49148,49149,49150,49151,49152,49153,49154,49155,49156,49157,49158,49159,49160,49161,49162,49163,49164,49165,49166,49167,49168,49169,49170,49171,49172,49173,49174,49175,49176,49177,49178,49179,49180,49181,49182,49183,49184,49185,49186,49187,49188,49189,49190,49191,49192,49193,49194,49195,49196,49197,49198,49199,49200,49201,49202,49203,49204,49205,49206,49207,49208,49209,49210,49211,49213,49214,49215,49216,49217,49218,49219,49220,49221,49222,49223,49224,49225,49226,49227,49228,49229,49230,49231,49232,49234,49235,49236,49237,49238,49239,49241,49242,49243,null,null,null,null,null,null,49245,49246,49247,49249,49250,49251,49252,49253,49254,49255,49258,49259,49260,49261,49262,49263,49264,49265,49266,49267,49268,49269,49270,49271,49272,49273,null,null,null,null,null,null,49274,49275,49276,49277,49278,49279,49280,49281,49282,49283,49284,49285,49286,49287,49288,49289,49290,49291,49292,49293,49294,49295,49298,49299,49301,49302,49303,49305,49306,49307,49308,49309,49310,49311,49314,49316,49318,49319,49320,49321,49322,49323,49326,49329,49330,49335,49336,49337,49338,49339,49342,49346,49347,49348,49350,49351,49354,49355,49357,49358,49359,49361,49362,49363,49364,49365,49366,49367,49370,49374,49375,49376,49377,49378,49379,49382,49383,49385,49386,49387,49389,49390,49391,49392,49393,49394,49395,49398,49400,49402,49403,49404,49405,49406,49407,49409,49410,49411,49413,49414,49415,49417,49418,49419,49420,49421,49422,49423,49425,49426,49427,49428,49430,49431,49432,49433,49434,49435,49441,49442,49445,49448,49449,49450,49451,49454,49458,49459,49460,49461,49463,49466,49467,49469,49470,49471,49473,49474,49475,49476,49477,49478,49479,49482,49486,49487,49488,49489,49490,49491,49494,49495,null,null,null,null,null,null,49497,49498,49499,49501,49502,49503,49504,49505,49506,49507,49510,49514,49515,49516,49517,49518,49519,49521,49522,49523,49525,49526,49527,49529,49530,49531,null,null,null,null,null,null,49532,49533,49534,49535,49536,49537,49538,49539,49540,49542,49543,49544,49545,49546,49547,49551,49553,49554,49555,49557,49559,49560,49561,49562,49563,49566,49568,49570,49571,49572,49574,49575,49578,49579,49581,49582,49583,49585,49586,49587,49588,49589,49590,49591,49592,49593,49594,49595,49596,49598,49599,49600,49601,49602,49603,49605,49606,49607,49609,49610,49611,49613,49614,49615,49616,49617,49618,49619,49621,49622,49625,49626,49627,49628,49629,49630,49631,49633,49634,49635,49637,49638,49639,49641,49642,49643,49644,49645,49646,49647,49650,49652,49653,49654,49655,49656,49657,49658,49659,49662,49663,49665,49666,49667,49669,49670,49671,49672,49673,49674,49675,49678,49680,49682,49683,49684,49685,49686,49687,49690,49691,49693,49694,49697,49698,49699,49700,49701,49702,49703,49706,49708,49710,49712,49715,49717,49718,49719,49720,49721,49722,49723,49724,49725,49726,49727,49728,49729,49730,49731,49732,49733,null,null,null,null,null,null,49734,49735,49737,49738,49739,49740,49741,49742,49743,49746,49747,49749,49750,49751,49753,49754,49755,49756,49757,49758,49759,49761,49762,49763,49764,49766,null,null,null,null,null,null,49767,49768,49769,49770,49771,49774,49775,49777,49778,49779,49781,49782,49783,49784,49785,49786,49787,49790,49792,49794,49795,49796,49797,49798,49799,49802,49803,49804,49805,49806,49807,49809,49810,49811,49812,49813,49814,49815,49817,49818,49820,49822,49823,49824,49825,49826,49827,49830,49831,49833,49834,49835,49838,49839,49840,49841,49842,49843,49846,49848,49850,49851,49852,49853,49854,49855,49856,49857,49858,49859,49860,49861,49862,49863,49864,49865,49866,49867,49868,49869,49870,49871,49872,49873,49874,49875,49876,49877,49878,49879,49880,49881,49882,49883,49886,49887,49889,49890,49893,49894,49895,49896,49897,49898,49902,49904,49906,49907,49908,49909,49911,49914,49917,49918,49919,49921,49922,49923,49924,49925,49926,49927,49930,49931,49934,49935,49936,49937,49938,49942,49943,49945,49946,49947,49949,49950,49951,49952,49953,49954,49955,49958,49959,49962,49963,49964,49965,49966,49967,49968,49969,49970,null,null,null,null,null,null,49971,49972,49973,49974,49975,49976,49977,49978,49979,49980,49981,49982,49983,49984,49985,49986,49987,49988,49990,49991,49992,49993,49994,49995,49996,49997,null,null,null,null,null,null,49998,49999,5e4,50001,50002,50003,50004,50005,50006,50007,50008,50009,50010,50011,50012,50013,50014,50015,50016,50017,50018,50019,50020,50021,50022,50023,50026,50027,50029,50030,50031,50033,50035,50036,50037,50038,50039,50042,50043,50046,50047,50048,50049,50050,50051,50053,50054,50055,50057,50058,50059,50061,50062,50063,50064,50065,50066,50067,50068,50069,50070,50071,50072,50073,50074,50075,50076,50077,50078,50079,50080,50081,50082,50083,50084,50085,50086,50087,50088,50089,50090,50091,50092,50093,50094,50095,50096,50097,50098,50099,50100,50101,50102,50103,50104,50105,50106,50107,50108,50109,50110,50111,50113,50114,50115,50116,50117,50118,50119,50120,50121,50122,50123,50124,50125,50126,50127,50128,50129,50130,50131,50132,50133,50134,50135,50138,50139,50141,50142,50145,50147,50148,50149,50150,50151,50154,50155,50156,50158,50159,50160,50161,50162,50163,50166,50167,50169,50170,50171,50172,50173,50174,null,null,null,null,null,null,50175,50176,50177,50178,50179,50180,50181,50182,50183,50185,50186,50187,50188,50189,50190,50191,50193,50194,50195,50196,50197,50198,50199,50200,50201,50202,null,null,null,null,null,null,50203,50204,50205,50206,50207,50208,50209,50210,50211,50213,50214,50215,50216,50217,50218,50219,50221,50222,50223,50225,50226,50227,50229,50230,50231,50232,50233,50234,50235,50238,50239,50240,50241,50242,50243,50244,50245,50246,50247,50249,50250,50251,50252,50253,50254,50255,50256,50257,50258,50259,50260,50261,50262,50263,50264,50265,50266,50267,50268,50269,50270,50271,50272,50273,50274,50275,50278,50279,50281,50282,50283,50285,50286,50287,50288,50289,50290,50291,50294,50295,50296,50298,50299,50300,50301,50302,50303,50305,50306,50307,50308,50309,50310,50311,50312,50313,50314,50315,50316,50317,50318,50319,50320,50321,50322,50323,50325,50326,50327,50328,50329,50330,50331,50333,50334,50335,50336,50337,50338,50339,50340,50341,50342,50343,50344,50345,50346,50347,50348,50349,50350,50351,50352,50353,50354,50355,50356,50357,50358,50359,50361,50362,50363,50365,50366,50367,50368,50369,50370,50371,50372,50373,null,null,null,null,null,null,50374,50375,50376,50377,50378,50379,50380,50381,50382,50383,50384,50385,50386,50387,50388,50389,50390,50391,50392,50393,50394,50395,50396,50397,50398,50399,null,null,null,null,null,null,50400,50401,50402,50403,50404,50405,50406,50407,50408,50410,50411,50412,50413,50414,50415,50418,50419,50421,50422,50423,50425,50427,50428,50429,50430,50434,50435,50436,50437,50438,50439,50440,50441,50442,50443,50445,50446,50447,50449,50450,50451,50453,50454,50455,50456,50457,50458,50459,50461,50462,50463,50464,50465,50466,50467,50468,50469,50470,50471,50474,50475,50477,50478,50479,50481,50482,50483,50484,50485,50486,50487,50490,50492,50494,50495,50496,50497,50498,50499,50502,50503,50507,50511,50512,50513,50514,50518,50522,50523,50524,50527,50530,50531,50533,50534,50535,50537,50538,50539,50540,50541,50542,50543,50546,50550,50551,50552,50553,50554,50555,50558,50559,50561,50562,50563,50565,50566,50568,50569,50570,50571,50574,50576,50578,50579,50580,50582,50585,50586,50587,50589,50590,50591,50593,50594,50595,50596,50597,50598,50599,50600,50602,50603,50604,50605,50606,50607,50608,50609,50610,50611,50614,null,null,null,null,null,null,50615,50618,50623,50624,50625,50626,50627,50635,50637,50639,50642,50643,50645,50646,50647,50649,50650,50651,50652,50653,50654,50655,50658,50660,50662,50663,null,null,null,null,null,null,50664,50665,50666,50667,50671,50673,50674,50675,50677,50680,50681,50682,50683,50690,50691,50692,50697,50698,50699,50701,50702,50703,50705,50706,50707,50708,50709,50710,50711,50714,50717,50718,50719,50720,50721,50722,50723,50726,50727,50729,50730,50731,50735,50737,50738,50742,50744,50746,50748,50749,50750,50751,50754,50755,50757,50758,50759,50761,50762,50763,50764,50765,50766,50767,50770,50774,50775,50776,50777,50778,50779,50782,50783,50785,50786,50787,50788,50789,50790,50791,50792,50793,50794,50795,50797,50798,50800,50802,50803,50804,50805,50806,50807,50810,50811,50813,50814,50815,50817,50818,50819,50820,50821,50822,50823,50826,50828,50830,50831,50832,50833,50834,50835,50838,50839,50841,50842,50843,50845,50846,50847,50848,50849,50850,50851,50854,50856,50858,50859,50860,50861,50862,50863,50866,50867,50869,50870,50871,50875,50876,50877,50878,50879,50882,50884,50886,50887,50888,50889,50890,50891,50894,null,null,null,null,null,null,50895,50897,50898,50899,50901,50902,50903,50904,50905,50906,50907,50910,50911,50914,50915,50916,50917,50918,50919,50922,50923,50925,50926,50927,50929,50930,null,null,null,null,null,null,50931,50932,50933,50934,50935,50938,50939,50940,50942,50943,50944,50945,50946,50947,50950,50951,50953,50954,50955,50957,50958,50959,50960,50961,50962,50963,50966,50968,50970,50971,50972,50973,50974,50975,50978,50979,50981,50982,50983,50985,50986,50987,50988,50989,50990,50991,50994,50996,50998,51e3,51001,51002,51003,51006,51007,51009,51010,51011,51013,51014,51015,51016,51017,51019,51022,51024,51033,51034,51035,51037,51038,51039,51041,51042,51043,51044,51045,51046,51047,51049,51050,51052,51053,51054,51055,51056,51057,51058,51059,51062,51063,51065,51066,51067,51071,51072,51073,51074,51078,51083,51084,51085,51087,51090,51091,51093,51097,51099,51100,51101,51102,51103,51106,51111,51112,51113,51114,51115,51118,51119,51121,51122,51123,51125,51126,51127,51128,51129,51130,51131,51134,51138,51139,51140,51141,51142,51143,51146,51147,51149,51151,51153,51154,51155,51156,51157,51158,51159,51161,51162,51163,51164,null,null,null,null,null,null,51166,51167,51168,51169,51170,51171,51173,51174,51175,51177,51178,51179,51181,51182,51183,51184,51185,51186,51187,51188,51189,51190,51191,51192,51193,51194,null,null,null,null,null,null,51195,51196,51197,51198,51199,51202,51203,51205,51206,51207,51209,51211,51212,51213,51214,51215,51218,51220,51223,51224,51225,51226,51227,51230,51231,51233,51234,51235,51237,51238,51239,51240,51241,51242,51243,51246,51248,51250,51251,51252,51253,51254,51255,51257,51258,51259,51261,51262,51263,51265,51266,51267,51268,51269,51270,51271,51274,51275,51278,51279,51280,51281,51282,51283,51285,51286,51287,51288,51289,51290,51291,51292,51293,51294,51295,51296,51297,51298,51299,51300,51301,51302,51303,51304,51305,51306,51307,51308,51309,51310,51311,51314,51315,51317,51318,51319,51321,51323,51324,51325,51326,51327,51330,51332,51336,51337,51338,51342,51343,51344,51345,51346,51347,51349,51350,51351,51352,51353,51354,51355,51356,51358,51360,51362,51363,51364,51365,51366,51367,51369,51370,51371,51372,51373,51374,51375,51376,51377,51378,51379,51380,51381,51382,51383,51384,51385,51386,51387,51390,51391,51392,51393,null,null,null,null,null,null,51394,51395,51397,51398,51399,51401,51402,51403,51405,51406,51407,51408,51409,51410,51411,51414,51416,51418,51419,51420,51421,51422,51423,51426,51427,51429,null,null,null,null,null,null,51430,51431,51432,51433,51434,51435,51436,51437,51438,51439,51440,51441,51442,51443,51444,51446,51447,51448,51449,51450,51451,51454,51455,51457,51458,51459,51463,51464,51465,51466,51467,51470,12288,12289,12290,183,8229,8230,168,12291,173,8213,8741,65340,8764,8216,8217,8220,8221,12308,12309,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,177,215,247,8800,8804,8805,8734,8756,176,8242,8243,8451,8491,65504,65505,65509,9794,9792,8736,8869,8978,8706,8711,8801,8786,167,8251,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8594,8592,8593,8595,8596,12307,8810,8811,8730,8765,8733,8757,8747,8748,8712,8715,8838,8839,8834,8835,8746,8745,8743,8744,65506,51472,51474,51475,51476,51477,51478,51479,51481,51482,51483,51484,51485,51486,51487,51488,51489,51490,51491,51492,51493,51494,51495,51496,51497,51498,51499,null,null,null,null,null,null,51501,51502,51503,51504,51505,51506,51507,51509,51510,51511,51512,51513,51514,51515,51516,51517,51518,51519,51520,51521,51522,51523,51524,51525,51526,51527,null,null,null,null,null,null,51528,51529,51530,51531,51532,51533,51534,51535,51538,51539,51541,51542,51543,51545,51546,51547,51548,51549,51550,51551,51554,51556,51557,51558,51559,51560,51561,51562,51563,51565,51566,51567,8658,8660,8704,8707,180,65374,711,728,733,730,729,184,731,161,191,720,8750,8721,8719,164,8457,8240,9665,9664,9655,9654,9828,9824,9825,9829,9831,9827,8857,9672,9635,9680,9681,9618,9636,9637,9640,9639,9638,9641,9832,9743,9742,9756,9758,182,8224,8225,8597,8599,8601,8598,8600,9837,9833,9834,9836,12927,12828,8470,13255,8482,13250,13272,8481,8364,174,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,51569,51570,51571,51573,51574,51575,51576,51577,51578,51579,51581,51582,51583,51584,51585,51586,51587,51588,51589,51590,51591,51594,51595,51597,51598,51599,null,null,null,null,null,null,51601,51602,51603,51604,51605,51606,51607,51610,51612,51614,51615,51616,51617,51618,51619,51620,51621,51622,51623,51624,51625,51626,51627,51628,51629,51630,null,null,null,null,null,null,51631,51632,51633,51634,51635,51636,51637,51638,51639,51640,51641,51642,51643,51644,51645,51646,51647,51650,51651,51653,51654,51657,51659,51660,51661,51662,51663,51666,51668,51671,51672,51675,65281,65282,65283,65284,65285,65286,65287,65288,65289,65290,65291,65292,65293,65294,65295,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,65306,65307,65308,65309,65310,65311,65312,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65339,65510,65341,65342,65343,65344,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,65371,65372,65373,65507,51678,51679,51681,51683,51685,51686,51688,51689,51690,51691,51694,51698,51699,51700,51701,51702,51703,51706,51707,51709,51710,51711,51713,51714,51715,51716,null,null,null,null,null,null,51717,51718,51719,51722,51726,51727,51728,51729,51730,51731,51733,51734,51735,51737,51738,51739,51740,51741,51742,51743,51744,51745,51746,51747,51748,51749,null,null,null,null,null,null,51750,51751,51752,51754,51755,51756,51757,51758,51759,51760,51761,51762,51763,51764,51765,51766,51767,51768,51769,51770,51771,51772,51773,51774,51775,51776,51777,51778,51779,51780,51781,51782,12593,12594,12595,12596,12597,12598,12599,12600,12601,12602,12603,12604,12605,12606,12607,12608,12609,12610,12611,12612,12613,12614,12615,12616,12617,12618,12619,12620,12621,12622,12623,12624,12625,12626,12627,12628,12629,12630,12631,12632,12633,12634,12635,12636,12637,12638,12639,12640,12641,12642,12643,12644,12645,12646,12647,12648,12649,12650,12651,12652,12653,12654,12655,12656,12657,12658,12659,12660,12661,12662,12663,12664,12665,12666,12667,12668,12669,12670,12671,12672,12673,12674,12675,12676,12677,12678,12679,12680,12681,12682,12683,12684,12685,12686,51783,51784,51785,51786,51787,51790,51791,51793,51794,51795,51797,51798,51799,51800,51801,51802,51803,51806,51810,51811,51812,51813,51814,51815,51817,51818,null,null,null,null,null,null,51819,51820,51821,51822,51823,51824,51825,51826,51827,51828,51829,51830,51831,51832,51833,51834,51835,51836,51838,51839,51840,51841,51842,51843,51845,51846,null,null,null,null,null,null,51847,51848,51849,51850,51851,51852,51853,51854,51855,51856,51857,51858,51859,51860,51861,51862,51863,51865,51866,51867,51868,51869,51870,51871,51872,51873,51874,51875,51876,51877,51878,51879,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,null,null,null,null,null,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,null,null,null,null,null,null,null,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,null,null,null,null,null,null,null,null,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,null,null,null,null,null,null,51880,51881,51882,51883,51884,51885,51886,51887,51888,51889,51890,51891,51892,51893,51894,51895,51896,51897,51898,51899,51902,51903,51905,51906,51907,51909,null,null,null,null,null,null,51910,51911,51912,51913,51914,51915,51918,51920,51922,51924,51925,51926,51927,51930,51931,51932,51933,51934,51935,51937,51938,51939,51940,51941,51942,51943,null,null,null,null,null,null,51944,51945,51946,51947,51949,51950,51951,51952,51953,51954,51955,51957,51958,51959,51960,51961,51962,51963,51964,51965,51966,51967,51968,51969,51970,51971,51972,51973,51974,51975,51977,51978,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,9490,9489,9498,9497,9494,9493,9486,9485,9502,9503,9505,9506,9510,9511,9513,9514,9517,9518,9521,9522,9525,9526,9529,9530,9533,9534,9536,9537,9539,9540,9541,9542,9543,9544,9545,9546,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,51979,51980,51981,51982,51983,51985,51986,51987,51989,51990,51991,51993,51994,51995,51996,51997,51998,51999,52002,52003,52004,52005,52006,52007,52008,52009,null,null,null,null,null,null,52010,52011,52012,52013,52014,52015,52016,52017,52018,52019,52020,52021,52022,52023,52024,52025,52026,52027,52028,52029,52030,52031,52032,52034,52035,52036,null,null,null,null,null,null,52037,52038,52039,52042,52043,52045,52046,52047,52049,52050,52051,52052,52053,52054,52055,52058,52059,52060,52062,52063,52064,52065,52066,52067,52069,52070,52071,52072,52073,52074,52075,52076,13205,13206,13207,8467,13208,13252,13219,13220,13221,13222,13209,13210,13211,13212,13213,13214,13215,13216,13217,13218,13258,13197,13198,13199,13263,13192,13193,13256,13223,13224,13232,13233,13234,13235,13236,13237,13238,13239,13240,13241,13184,13185,13186,13187,13188,13242,13243,13244,13245,13246,13247,13200,13201,13202,13203,13204,8486,13248,13249,13194,13195,13196,13270,13253,13229,13230,13231,13275,13225,13226,13227,13228,13277,13264,13267,13251,13257,13276,13254,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52077,52078,52079,52080,52081,52082,52083,52084,52085,52086,52087,52090,52091,52092,52093,52094,52095,52096,52097,52098,52099,52100,52101,52102,52103,52104,null,null,null,null,null,null,52105,52106,52107,52108,52109,52110,52111,52112,52113,52114,52115,52116,52117,52118,52119,52120,52121,52122,52123,52125,52126,52127,52128,52129,52130,52131,null,null,null,null,null,null,52132,52133,52134,52135,52136,52137,52138,52139,52140,52141,52142,52143,52144,52145,52146,52147,52148,52149,52150,52151,52153,52154,52155,52156,52157,52158,52159,52160,52161,52162,52163,52164,198,208,170,294,null,306,null,319,321,216,338,186,222,358,330,null,12896,12897,12898,12899,12900,12901,12902,12903,12904,12905,12906,12907,12908,12909,12910,12911,12912,12913,12914,12915,12916,12917,12918,12919,12920,12921,12922,12923,9424,9425,9426,9427,9428,9429,9430,9431,9432,9433,9434,9435,9436,9437,9438,9439,9440,9441,9442,9443,9444,9445,9446,9447,9448,9449,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,189,8531,8532,188,190,8539,8540,8541,8542,52165,52166,52167,52168,52169,52170,52171,52172,52173,52174,52175,52176,52177,52178,52179,52181,52182,52183,52184,52185,52186,52187,52188,52189,52190,52191,null,null,null,null,null,null,52192,52193,52194,52195,52197,52198,52200,52202,52203,52204,52205,52206,52207,52208,52209,52210,52211,52212,52213,52214,52215,52216,52217,52218,52219,52220,null,null,null,null,null,null,52221,52222,52223,52224,52225,52226,52227,52228,52229,52230,52231,52232,52233,52234,52235,52238,52239,52241,52242,52243,52245,52246,52247,52248,52249,52250,52251,52254,52255,52256,52259,52260,230,273,240,295,305,307,312,320,322,248,339,223,254,359,331,329,12800,12801,12802,12803,12804,12805,12806,12807,12808,12809,12810,12811,12812,12813,12814,12815,12816,12817,12818,12819,12820,12821,12822,12823,12824,12825,12826,12827,9372,9373,9374,9375,9376,9377,9378,9379,9380,9381,9382,9383,9384,9385,9386,9387,9388,9389,9390,9391,9392,9393,9394,9395,9396,9397,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345,9346,185,178,179,8308,8319,8321,8322,8323,8324,52261,52262,52266,52267,52269,52271,52273,52274,52275,52276,52277,52278,52279,52282,52287,52288,52289,52290,52291,52294,52295,52297,52298,52299,52301,52302,null,null,null,null,null,null,52303,52304,52305,52306,52307,52310,52314,52315,52316,52317,52318,52319,52321,52322,52323,52325,52327,52329,52330,52331,52332,52333,52334,52335,52337,52338,null,null,null,null,null,null,52339,52340,52342,52343,52344,52345,52346,52347,52348,52349,52350,52351,52352,52353,52354,52355,52356,52357,52358,52359,52360,52361,52362,52363,52364,52365,52366,52367,52368,52369,52370,52371,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,null,null,null,null,null,null,null,null,null,null,null,52372,52373,52374,52375,52378,52379,52381,52382,52383,52385,52386,52387,52388,52389,52390,52391,52394,52398,52399,52400,52401,52402,52403,52406,52407,52409,null,null,null,null,null,null,52410,52411,52413,52414,52415,52416,52417,52418,52419,52422,52424,52426,52427,52428,52429,52430,52431,52433,52434,52435,52437,52438,52439,52440,52441,52442,null,null,null,null,null,null,52443,52444,52445,52446,52447,52448,52449,52450,52451,52453,52454,52455,52456,52457,52458,52459,52461,52462,52463,52465,52466,52467,52468,52469,52470,52471,52472,52473,52474,52475,52476,52477,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,null,null,null,null,null,null,null,null,52478,52479,52480,52482,52483,52484,52485,52486,52487,52490,52491,52493,52494,52495,52497,52498,52499,52500,52501,52502,52503,52506,52508,52510,52511,52512,null,null,null,null,null,null,52513,52514,52515,52517,52518,52519,52521,52522,52523,52525,52526,52527,52528,52529,52530,52531,52532,52533,52534,52535,52536,52538,52539,52540,52541,52542,null,null,null,null,null,null,52543,52544,52545,52546,52547,52548,52549,52550,52551,52552,52553,52554,52555,52556,52557,52558,52559,52560,52561,52562,52563,52564,52565,52566,52567,52568,52569,52570,52571,52573,52574,52575,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,null,null,null,null,null,null,null,null,null,null,null,null,null,52577,52578,52579,52581,52582,52583,52584,52585,52586,52587,52590,52592,52594,52595,52596,52597,52598,52599,52601,52602,52603,52604,52605,52606,52607,52608,null,null,null,null,null,null,52609,52610,52611,52612,52613,52614,52615,52617,52618,52619,52620,52621,52622,52623,52624,52625,52626,52627,52630,52631,52633,52634,52635,52637,52638,52639,null,null,null,null,null,null,52640,52641,52642,52643,52646,52648,52650,52651,52652,52653,52654,52655,52657,52658,52659,52660,52661,52662,52663,52664,52665,52666,52667,52668,52669,52670,52671,52672,52673,52674,52675,52677,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52678,52679,52680,52681,52682,52683,52685,52686,52687,52689,52690,52691,52692,52693,52694,52695,52696,52697,52698,52699,52700,52701,52702,52703,52704,52705,null,null,null,null,null,null,52706,52707,52708,52709,52710,52711,52713,52714,52715,52717,52718,52719,52721,52722,52723,52724,52725,52726,52727,52730,52732,52734,52735,52736,52737,52738,null,null,null,null,null,null,52739,52741,52742,52743,52745,52746,52747,52749,52750,52751,52752,52753,52754,52755,52757,52758,52759,52760,52762,52763,52764,52765,52766,52767,52770,52771,52773,52774,52775,52777,52778,52779,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52780,52781,52782,52783,52786,52788,52790,52791,52792,52793,52794,52795,52796,52797,52798,52799,52800,52801,52802,52803,52804,52805,52806,52807,52808,52809,null,null,null,null,null,null,52810,52811,52812,52813,52814,52815,52816,52817,52818,52819,52820,52821,52822,52823,52826,52827,52829,52830,52834,52835,52836,52837,52838,52839,52842,52844,null,null,null,null,null,null,52846,52847,52848,52849,52850,52851,52854,52855,52857,52858,52859,52861,52862,52863,52864,52865,52866,52867,52870,52872,52874,52875,52876,52877,52878,52879,52882,52883,52885,52886,52887,52889,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52890,52891,52892,52893,52894,52895,52898,52902,52903,52904,52905,52906,52907,52910,52911,52912,52913,52914,52915,52916,52917,52918,52919,52920,52921,52922,null,null,null,null,null,null,52923,52924,52925,52926,52927,52928,52930,52931,52932,52933,52934,52935,52936,52937,52938,52939,52940,52941,52942,52943,52944,52945,52946,52947,52948,52949,null,null,null,null,null,null,52950,52951,52952,52953,52954,52955,52956,52957,52958,52959,52960,52961,52962,52963,52966,52967,52969,52970,52973,52974,52975,52976,52977,52978,52979,52982,52986,52987,52988,52989,52990,52991,44032,44033,44036,44039,44040,44041,44042,44048,44049,44050,44051,44052,44053,44054,44055,44057,44058,44059,44060,44061,44064,44068,44076,44077,44079,44080,44081,44088,44089,44092,44096,44107,44109,44116,44120,44124,44144,44145,44148,44151,44152,44154,44160,44161,44163,44164,44165,44166,44169,44170,44171,44172,44176,44180,44188,44189,44191,44192,44193,44200,44201,44202,44204,44207,44208,44216,44217,44219,44220,44221,44225,44228,44232,44236,44245,44247,44256,44257,44260,44263,44264,44266,44268,44271,44272,44273,44275,44277,44278,44284,44285,44288,44292,44294,52994,52995,52997,52998,52999,53001,53002,53003,53004,53005,53006,53007,53010,53012,53014,53015,53016,53017,53018,53019,53021,53022,53023,53025,53026,53027,null,null,null,null,null,null,53029,53030,53031,53032,53033,53034,53035,53038,53042,53043,53044,53045,53046,53047,53049,53050,53051,53052,53053,53054,53055,53056,53057,53058,53059,53060,null,null,null,null,null,null,53061,53062,53063,53064,53065,53066,53067,53068,53069,53070,53071,53072,53073,53074,53075,53078,53079,53081,53082,53083,53085,53086,53087,53088,53089,53090,53091,53094,53096,53098,53099,53100,44300,44301,44303,44305,44312,44316,44320,44329,44332,44333,44340,44341,44344,44348,44356,44357,44359,44361,44368,44372,44376,44385,44387,44396,44397,44400,44403,44404,44405,44406,44411,44412,44413,44415,44417,44418,44424,44425,44428,44432,44444,44445,44452,44471,44480,44481,44484,44488,44496,44497,44499,44508,44512,44516,44536,44537,44540,44543,44544,44545,44552,44553,44555,44557,44564,44592,44593,44596,44599,44600,44602,44608,44609,44611,44613,44614,44618,44620,44621,44622,44624,44628,44630,44636,44637,44639,44640,44641,44645,44648,44649,44652,44656,44664,53101,53102,53103,53106,53107,53109,53110,53111,53113,53114,53115,53116,53117,53118,53119,53121,53122,53123,53124,53126,53127,53128,53129,53130,53131,53133,null,null,null,null,null,null,53134,53135,53136,53137,53138,53139,53140,53141,53142,53143,53144,53145,53146,53147,53148,53149,53150,53151,53152,53154,53155,53156,53157,53158,53159,53161,null,null,null,null,null,null,53162,53163,53164,53165,53166,53167,53169,53170,53171,53172,53173,53174,53175,53176,53177,53178,53179,53180,53181,53182,53183,53184,53185,53186,53187,53189,53190,53191,53192,53193,53194,53195,44665,44667,44668,44669,44676,44677,44684,44732,44733,44734,44736,44740,44748,44749,44751,44752,44753,44760,44761,44764,44776,44779,44781,44788,44792,44796,44807,44808,44813,44816,44844,44845,44848,44850,44852,44860,44861,44863,44865,44866,44867,44872,44873,44880,44892,44893,44900,44901,44921,44928,44932,44936,44944,44945,44949,44956,44984,44985,44988,44992,44999,45e3,45001,45003,45005,45006,45012,45020,45032,45033,45040,45041,45044,45048,45056,45057,45060,45068,45072,45076,45084,45085,45096,45124,45125,45128,45130,45132,45134,45139,45140,45141,45143,45145,53196,53197,53198,53199,53200,53201,53202,53203,53204,53205,53206,53207,53208,53209,53210,53211,53212,53213,53214,53215,53218,53219,53221,53222,53223,53225,null,null,null,null,null,null,53226,53227,53228,53229,53230,53231,53234,53236,53238,53239,53240,53241,53242,53243,53245,53246,53247,53249,53250,53251,53253,53254,53255,53256,53257,53258,null,null,null,null,null,null,53259,53260,53261,53262,53263,53264,53266,53267,53268,53269,53270,53271,53273,53274,53275,53276,53277,53278,53279,53280,53281,53282,53283,53284,53285,53286,53287,53288,53289,53290,53291,53292,45149,45180,45181,45184,45188,45196,45197,45199,45201,45208,45209,45210,45212,45215,45216,45217,45218,45224,45225,45227,45228,45229,45230,45231,45233,45235,45236,45237,45240,45244,45252,45253,45255,45256,45257,45264,45265,45268,45272,45280,45285,45320,45321,45323,45324,45328,45330,45331,45336,45337,45339,45340,45341,45347,45348,45349,45352,45356,45364,45365,45367,45368,45369,45376,45377,45380,45384,45392,45393,45396,45397,45400,45404,45408,45432,45433,45436,45440,45442,45448,45449,45451,45453,45458,45459,45460,45464,45468,45480,45516,45520,45524,45532,45533,53294,53295,53296,53297,53298,53299,53302,53303,53305,53306,53307,53309,53310,53311,53312,53313,53314,53315,53318,53320,53322,53323,53324,53325,53326,53327,null,null,null,null,null,null,53329,53330,53331,53333,53334,53335,53337,53338,53339,53340,53341,53342,53343,53345,53346,53347,53348,53349,53350,53351,53352,53353,53354,53355,53358,53359,null,null,null,null,null,null,53361,53362,53363,53365,53366,53367,53368,53369,53370,53371,53374,53375,53376,53378,53379,53380,53381,53382,53383,53384,53385,53386,53387,53388,53389,53390,53391,53392,53393,53394,53395,53396,45535,45544,45545,45548,45552,45561,45563,45565,45572,45573,45576,45579,45580,45588,45589,45591,45593,45600,45620,45628,45656,45660,45664,45672,45673,45684,45685,45692,45700,45701,45705,45712,45713,45716,45720,45721,45722,45728,45729,45731,45733,45734,45738,45740,45744,45748,45768,45769,45772,45776,45778,45784,45785,45787,45789,45794,45796,45797,45798,45800,45803,45804,45805,45806,45807,45811,45812,45813,45815,45816,45817,45818,45819,45823,45824,45825,45828,45832,45840,45841,45843,45844,45845,45852,45908,45909,45910,45912,45915,45916,45918,45919,45924,45925,53397,53398,53399,53400,53401,53402,53403,53404,53405,53406,53407,53408,53409,53410,53411,53414,53415,53417,53418,53419,53421,53422,53423,53424,53425,53426,null,null,null,null,null,null,53427,53430,53432,53434,53435,53436,53437,53438,53439,53442,53443,53445,53446,53447,53450,53451,53452,53453,53454,53455,53458,53462,53463,53464,53465,53466,null,null,null,null,null,null,53467,53470,53471,53473,53474,53475,53477,53478,53479,53480,53481,53482,53483,53486,53490,53491,53492,53493,53494,53495,53497,53498,53499,53500,53501,53502,53503,53504,53505,53506,53507,53508,45927,45929,45931,45934,45936,45937,45940,45944,45952,45953,45955,45956,45957,45964,45968,45972,45984,45985,45992,45996,46020,46021,46024,46027,46028,46030,46032,46036,46037,46039,46041,46043,46045,46048,46052,46056,46076,46096,46104,46108,46112,46120,46121,46123,46132,46160,46161,46164,46168,46176,46177,46179,46181,46188,46208,46216,46237,46244,46248,46252,46261,46263,46265,46272,46276,46280,46288,46293,46300,46301,46304,46307,46308,46310,46316,46317,46319,46321,46328,46356,46357,46360,46363,46364,46372,46373,46375,46376,46377,46378,46384,46385,46388,46392,53509,53510,53511,53512,53513,53514,53515,53516,53518,53519,53520,53521,53522,53523,53524,53525,53526,53527,53528,53529,53530,53531,53532,53533,53534,53535,null,null,null,null,null,null,53536,53537,53538,53539,53540,53541,53542,53543,53544,53545,53546,53547,53548,53549,53550,53551,53554,53555,53557,53558,53559,53561,53563,53564,53565,53566,null,null,null,null,null,null,53567,53570,53574,53575,53576,53577,53578,53579,53582,53583,53585,53586,53587,53589,53590,53591,53592,53593,53594,53595,53598,53600,53602,53603,53604,53605,53606,53607,53609,53610,53611,53613,46400,46401,46403,46404,46405,46411,46412,46413,46416,46420,46428,46429,46431,46432,46433,46496,46497,46500,46504,46506,46507,46512,46513,46515,46516,46517,46523,46524,46525,46528,46532,46540,46541,46543,46544,46545,46552,46572,46608,46609,46612,46616,46629,46636,46644,46664,46692,46696,46748,46749,46752,46756,46763,46764,46769,46804,46832,46836,46840,46848,46849,46853,46888,46889,46892,46895,46896,46904,46905,46907,46916,46920,46924,46932,46933,46944,46948,46952,46960,46961,46963,46965,46972,46973,46976,46980,46988,46989,46991,46992,46993,46994,46998,46999,53614,53615,53616,53617,53618,53619,53620,53621,53622,53623,53624,53625,53626,53627,53629,53630,53631,53632,53633,53634,53635,53637,53638,53639,53641,53642,null,null,null,null,null,null,53643,53644,53645,53646,53647,53648,53649,53650,53651,53652,53653,53654,53655,53656,53657,53658,53659,53660,53661,53662,53663,53666,53667,53669,53670,53671,null,null,null,null,null,null,53673,53674,53675,53676,53677,53678,53679,53682,53684,53686,53687,53688,53689,53691,53693,53694,53695,53697,53698,53699,53700,53701,53702,53703,53704,53705,53706,53707,53708,53709,53710,53711,47e3,47001,47004,47008,47016,47017,47019,47020,47021,47028,47029,47032,47047,47049,47084,47085,47088,47092,47100,47101,47103,47104,47105,47111,47112,47113,47116,47120,47128,47129,47131,47133,47140,47141,47144,47148,47156,47157,47159,47160,47161,47168,47172,47185,47187,47196,47197,47200,47204,47212,47213,47215,47217,47224,47228,47245,47272,47280,47284,47288,47296,47297,47299,47301,47308,47312,47316,47325,47327,47329,47336,47337,47340,47344,47352,47353,47355,47357,47364,47384,47392,47420,47421,47424,47428,47436,47439,47441,47448,47449,47452,47456,47464,47465,53712,53713,53714,53715,53716,53717,53718,53719,53721,53722,53723,53724,53725,53726,53727,53728,53729,53730,53731,53732,53733,53734,53735,53736,53737,53738,null,null,null,null,null,null,53739,53740,53741,53742,53743,53744,53745,53746,53747,53749,53750,53751,53753,53754,53755,53756,53757,53758,53759,53760,53761,53762,53763,53764,53765,53766,null,null,null,null,null,null,53768,53770,53771,53772,53773,53774,53775,53777,53778,53779,53780,53781,53782,53783,53784,53785,53786,53787,53788,53789,53790,53791,53792,53793,53794,53795,53796,53797,53798,53799,53800,53801,47467,47469,47476,47477,47480,47484,47492,47493,47495,47497,47498,47501,47502,47532,47533,47536,47540,47548,47549,47551,47553,47560,47561,47564,47566,47567,47568,47569,47570,47576,47577,47579,47581,47582,47585,47587,47588,47589,47592,47596,47604,47605,47607,47608,47609,47610,47616,47617,47624,47637,47672,47673,47676,47680,47682,47688,47689,47691,47693,47694,47699,47700,47701,47704,47708,47716,47717,47719,47720,47721,47728,47729,47732,47736,47747,47748,47749,47751,47756,47784,47785,47787,47788,47792,47794,47800,47801,47803,47805,47812,47816,47832,47833,47868,53802,53803,53806,53807,53809,53810,53811,53813,53814,53815,53816,53817,53818,53819,53822,53824,53826,53827,53828,53829,53830,53831,53833,53834,53835,53836,null,null,null,null,null,null,53837,53838,53839,53840,53841,53842,53843,53844,53845,53846,53847,53848,53849,53850,53851,53853,53854,53855,53856,53857,53858,53859,53861,53862,53863,53864,null,null,null,null,null,null,53865,53866,53867,53868,53869,53870,53871,53872,53873,53874,53875,53876,53877,53878,53879,53880,53881,53882,53883,53884,53885,53886,53887,53890,53891,53893,53894,53895,53897,53898,53899,53900,47872,47876,47885,47887,47889,47896,47900,47904,47913,47915,47924,47925,47926,47928,47931,47932,47933,47934,47940,47941,47943,47945,47949,47951,47952,47956,47960,47969,47971,47980,48008,48012,48016,48036,48040,48044,48052,48055,48064,48068,48072,48080,48083,48120,48121,48124,48127,48128,48130,48136,48137,48139,48140,48141,48143,48145,48148,48149,48150,48151,48152,48155,48156,48157,48158,48159,48164,48165,48167,48169,48173,48176,48177,48180,48184,48192,48193,48195,48196,48197,48201,48204,48205,48208,48221,48260,48261,48264,48267,48268,48270,48276,48277,48279,53901,53902,53903,53906,53907,53908,53910,53911,53912,53913,53914,53915,53917,53918,53919,53921,53922,53923,53925,53926,53927,53928,53929,53930,53931,53933,null,null,null,null,null,null,53934,53935,53936,53938,53939,53940,53941,53942,53943,53946,53947,53949,53950,53953,53955,53956,53957,53958,53959,53962,53964,53965,53966,53967,53968,53969,null,null,null,null,null,null,53970,53971,53973,53974,53975,53977,53978,53979,53981,53982,53983,53984,53985,53986,53987,53990,53991,53992,53993,53994,53995,53996,53997,53998,53999,54002,54003,54005,54006,54007,54009,54010,48281,48282,48288,48289,48292,48295,48296,48304,48305,48307,48308,48309,48316,48317,48320,48324,48333,48335,48336,48337,48341,48344,48348,48372,48373,48374,48376,48380,48388,48389,48391,48393,48400,48404,48420,48428,48448,48456,48457,48460,48464,48472,48473,48484,48488,48512,48513,48516,48519,48520,48521,48522,48528,48529,48531,48533,48537,48538,48540,48548,48560,48568,48596,48597,48600,48604,48617,48624,48628,48632,48640,48643,48645,48652,48653,48656,48660,48668,48669,48671,48708,48709,48712,48716,48718,48724,48725,48727,48729,48730,48731,48736,48737,48740,54011,54012,54013,54014,54015,54018,54020,54022,54023,54024,54025,54026,54027,54031,54033,54034,54035,54037,54039,54040,54041,54042,54043,54046,54050,54051,null,null,null,null,null,null,54052,54054,54055,54058,54059,54061,54062,54063,54065,54066,54067,54068,54069,54070,54071,54074,54078,54079,54080,54081,54082,54083,54086,54087,54088,54089,null,null,null,null,null,null,54090,54091,54092,54093,54094,54095,54096,54097,54098,54099,54100,54101,54102,54103,54104,54105,54106,54107,54108,54109,54110,54111,54112,54113,54114,54115,54116,54117,54118,54119,54120,54121,48744,48746,48752,48753,48755,48756,48757,48763,48764,48765,48768,48772,48780,48781,48783,48784,48785,48792,48793,48808,48848,48849,48852,48855,48856,48864,48867,48868,48869,48876,48897,48904,48905,48920,48921,48923,48924,48925,48960,48961,48964,48968,48976,48977,48981,49044,49072,49093,49100,49101,49104,49108,49116,49119,49121,49212,49233,49240,49244,49248,49256,49257,49296,49297,49300,49304,49312,49313,49315,49317,49324,49325,49327,49328,49331,49332,49333,49334,49340,49341,49343,49344,49345,49349,49352,49353,49356,49360,49368,49369,49371,49372,49373,49380,54122,54123,54124,54125,54126,54127,54128,54129,54130,54131,54132,54133,54134,54135,54136,54137,54138,54139,54142,54143,54145,54146,54147,54149,54150,54151,null,null,null,null,null,null,54152,54153,54154,54155,54158,54162,54163,54164,54165,54166,54167,54170,54171,54173,54174,54175,54177,54178,54179,54180,54181,54182,54183,54186,54188,54190,null,null,null,null,null,null,54191,54192,54193,54194,54195,54197,54198,54199,54201,54202,54203,54205,54206,54207,54208,54209,54210,54211,54214,54215,54218,54219,54220,54221,54222,54223,54225,54226,54227,54228,54229,54230,49381,49384,49388,49396,49397,49399,49401,49408,49412,49416,49424,49429,49436,49437,49438,49439,49440,49443,49444,49446,49447,49452,49453,49455,49456,49457,49462,49464,49465,49468,49472,49480,49481,49483,49484,49485,49492,49493,49496,49500,49508,49509,49511,49512,49513,49520,49524,49528,49541,49548,49549,49550,49552,49556,49558,49564,49565,49567,49569,49573,49576,49577,49580,49584,49597,49604,49608,49612,49620,49623,49624,49632,49636,49640,49648,49649,49651,49660,49661,49664,49668,49676,49677,49679,49681,49688,49689,49692,49695,49696,49704,49705,49707,49709,54231,54233,54234,54235,54236,54237,54238,54239,54240,54242,54244,54245,54246,54247,54248,54249,54250,54251,54254,54255,54257,54258,54259,54261,54262,54263,null,null,null,null,null,null,54264,54265,54266,54267,54270,54272,54274,54275,54276,54277,54278,54279,54281,54282,54283,54284,54285,54286,54287,54288,54289,54290,54291,54292,54293,54294,null,null,null,null,null,null,54295,54296,54297,54298,54299,54300,54302,54303,54304,54305,54306,54307,54308,54309,54310,54311,54312,54313,54314,54315,54316,54317,54318,54319,54320,54321,54322,54323,54324,54325,54326,54327,49711,49713,49714,49716,49736,49744,49745,49748,49752,49760,49765,49772,49773,49776,49780,49788,49789,49791,49793,49800,49801,49808,49816,49819,49821,49828,49829,49832,49836,49837,49844,49845,49847,49849,49884,49885,49888,49891,49892,49899,49900,49901,49903,49905,49910,49912,49913,49915,49916,49920,49928,49929,49932,49933,49939,49940,49941,49944,49948,49956,49957,49960,49961,49989,50024,50025,50028,50032,50034,50040,50041,50044,50045,50052,50056,50060,50112,50136,50137,50140,50143,50144,50146,50152,50153,50157,50164,50165,50168,50184,50192,50212,50220,50224,54328,54329,54330,54331,54332,54333,54334,54335,54337,54338,54339,54341,54342,54343,54344,54345,54346,54347,54348,54349,54350,54351,54352,54353,54354,54355,null,null,null,null,null,null,54356,54357,54358,54359,54360,54361,54362,54363,54365,54366,54367,54369,54370,54371,54373,54374,54375,54376,54377,54378,54379,54380,54382,54384,54385,54386,null,null,null,null,null,null,54387,54388,54389,54390,54391,54394,54395,54397,54398,54401,54403,54404,54405,54406,54407,54410,54412,54414,54415,54416,54417,54418,54419,54421,54422,54423,54424,54425,54426,54427,54428,54429,50228,50236,50237,50248,50276,50277,50280,50284,50292,50293,50297,50304,50324,50332,50360,50364,50409,50416,50417,50420,50424,50426,50431,50432,50433,50444,50448,50452,50460,50472,50473,50476,50480,50488,50489,50491,50493,50500,50501,50504,50505,50506,50508,50509,50510,50515,50516,50517,50519,50520,50521,50525,50526,50528,50529,50532,50536,50544,50545,50547,50548,50549,50556,50557,50560,50564,50567,50572,50573,50575,50577,50581,50583,50584,50588,50592,50601,50612,50613,50616,50617,50619,50620,50621,50622,50628,50629,50630,50631,50632,50633,50634,50636,50638,54430,54431,54432,54433,54434,54435,54436,54437,54438,54439,54440,54442,54443,54444,54445,54446,54447,54448,54449,54450,54451,54452,54453,54454,54455,54456,null,null,null,null,null,null,54457,54458,54459,54460,54461,54462,54463,54464,54465,54466,54467,54468,54469,54470,54471,54472,54473,54474,54475,54477,54478,54479,54481,54482,54483,54485,null,null,null,null,null,null,54486,54487,54488,54489,54490,54491,54493,54494,54496,54497,54498,54499,54500,54501,54502,54503,54505,54506,54507,54509,54510,54511,54513,54514,54515,54516,54517,54518,54519,54521,54522,54524,50640,50641,50644,50648,50656,50657,50659,50661,50668,50669,50670,50672,50676,50678,50679,50684,50685,50686,50687,50688,50689,50693,50694,50695,50696,50700,50704,50712,50713,50715,50716,50724,50725,50728,50732,50733,50734,50736,50739,50740,50741,50743,50745,50747,50752,50753,50756,50760,50768,50769,50771,50772,50773,50780,50781,50784,50796,50799,50801,50808,50809,50812,50816,50824,50825,50827,50829,50836,50837,50840,50844,50852,50853,50855,50857,50864,50865,50868,50872,50873,50874,50880,50881,50883,50885,50892,50893,50896,50900,50908,50909,50912,50913,50920,54526,54527,54528,54529,54530,54531,54533,54534,54535,54537,54538,54539,54541,54542,54543,54544,54545,54546,54547,54550,54552,54553,54554,54555,54556,54557,null,null,null,null,null,null,54558,54559,54560,54561,54562,54563,54564,54565,54566,54567,54568,54569,54570,54571,54572,54573,54574,54575,54576,54577,54578,54579,54580,54581,54582,54583,null,null,null,null,null,null,54584,54585,54586,54587,54590,54591,54593,54594,54595,54597,54598,54599,54600,54601,54602,54603,54606,54608,54610,54611,54612,54613,54614,54615,54618,54619,54621,54622,54623,54625,54626,54627,50921,50924,50928,50936,50937,50941,50948,50949,50952,50956,50964,50965,50967,50969,50976,50977,50980,50984,50992,50993,50995,50997,50999,51004,51005,51008,51012,51018,51020,51021,51023,51025,51026,51027,51028,51029,51030,51031,51032,51036,51040,51048,51051,51060,51061,51064,51068,51069,51070,51075,51076,51077,51079,51080,51081,51082,51086,51088,51089,51092,51094,51095,51096,51098,51104,51105,51107,51108,51109,51110,51116,51117,51120,51124,51132,51133,51135,51136,51137,51144,51145,51148,51150,51152,51160,51165,51172,51176,51180,51200,51201,51204,51208,51210,54628,54630,54631,54634,54636,54638,54639,54640,54641,54642,54643,54646,54647,54649,54650,54651,54653,54654,54655,54656,54657,54658,54659,54662,54666,54667,null,null,null,null,null,null,54668,54669,54670,54671,54673,54674,54675,54676,54677,54678,54679,54680,54681,54682,54683,54684,54685,54686,54687,54688,54689,54690,54691,54692,54694,54695,null,null,null,null,null,null,54696,54697,54698,54699,54700,54701,54702,54703,54704,54705,54706,54707,54708,54709,54710,54711,54712,54713,54714,54715,54716,54717,54718,54719,54720,54721,54722,54723,54724,54725,54726,54727,51216,51217,51219,51221,51222,51228,51229,51232,51236,51244,51245,51247,51249,51256,51260,51264,51272,51273,51276,51277,51284,51312,51313,51316,51320,51322,51328,51329,51331,51333,51334,51335,51339,51340,51341,51348,51357,51359,51361,51368,51388,51389,51396,51400,51404,51412,51413,51415,51417,51424,51425,51428,51445,51452,51453,51456,51460,51461,51462,51468,51469,51471,51473,51480,51500,51508,51536,51537,51540,51544,51552,51553,51555,51564,51568,51572,51580,51592,51593,51596,51600,51608,51609,51611,51613,51648,51649,51652,51655,51656,51658,51664,51665,51667,54730,54731,54733,54734,54735,54737,54739,54740,54741,54742,54743,54746,54748,54750,54751,54752,54753,54754,54755,54758,54759,54761,54762,54763,54765,54766,null,null,null,null,null,null,54767,54768,54769,54770,54771,54774,54776,54778,54779,54780,54781,54782,54783,54786,54787,54789,54790,54791,54793,54794,54795,54796,54797,54798,54799,54802,null,null,null,null,null,null,54806,54807,54808,54809,54810,54811,54813,54814,54815,54817,54818,54819,54821,54822,54823,54824,54825,54826,54827,54828,54830,54831,54832,54833,54834,54835,54836,54837,54838,54839,54842,54843,51669,51670,51673,51674,51676,51677,51680,51682,51684,51687,51692,51693,51695,51696,51697,51704,51705,51708,51712,51720,51721,51723,51724,51725,51732,51736,51753,51788,51789,51792,51796,51804,51805,51807,51808,51809,51816,51837,51844,51864,51900,51901,51904,51908,51916,51917,51919,51921,51923,51928,51929,51936,51948,51956,51976,51984,51988,51992,52e3,52001,52033,52040,52041,52044,52048,52056,52057,52061,52068,52088,52089,52124,52152,52180,52196,52199,52201,52236,52237,52240,52244,52252,52253,52257,52258,52263,52264,52265,52268,52270,52272,52280,52281,52283,54845,54846,54847,54849,54850,54851,54852,54854,54855,54858,54860,54862,54863,54864,54866,54867,54870,54871,54873,54874,54875,54877,54878,54879,54880,54881,null,null,null,null,null,null,54882,54883,54884,54885,54886,54888,54890,54891,54892,54893,54894,54895,54898,54899,54901,54902,54903,54904,54905,54906,54907,54908,54909,54910,54911,54912,null,null,null,null,null,null,54913,54914,54916,54918,54919,54920,54921,54922,54923,54926,54927,54929,54930,54931,54933,54934,54935,54936,54937,54938,54939,54940,54942,54944,54946,54947,54948,54949,54950,54951,54953,54954,52284,52285,52286,52292,52293,52296,52300,52308,52309,52311,52312,52313,52320,52324,52326,52328,52336,52341,52376,52377,52380,52384,52392,52393,52395,52396,52397,52404,52405,52408,52412,52420,52421,52423,52425,52432,52436,52452,52460,52464,52481,52488,52489,52492,52496,52504,52505,52507,52509,52516,52520,52524,52537,52572,52576,52580,52588,52589,52591,52593,52600,52616,52628,52629,52632,52636,52644,52645,52647,52649,52656,52676,52684,52688,52712,52716,52720,52728,52729,52731,52733,52740,52744,52748,52756,52761,52768,52769,52772,52776,52784,52785,52787,52789,54955,54957,54958,54959,54961,54962,54963,54964,54965,54966,54967,54968,54970,54972,54973,54974,54975,54976,54977,54978,54979,54982,54983,54985,54986,54987,null,null,null,null,null,null,54989,54990,54991,54992,54994,54995,54997,54998,55e3,55002,55003,55004,55005,55006,55007,55009,55010,55011,55013,55014,55015,55017,55018,55019,55020,55021,null,null,null,null,null,null,55022,55023,55025,55026,55027,55028,55030,55031,55032,55033,55034,55035,55038,55039,55041,55042,55043,55045,55046,55047,55048,55049,55050,55051,55052,55053,55054,55055,55056,55058,55059,55060,52824,52825,52828,52831,52832,52833,52840,52841,52843,52845,52852,52853,52856,52860,52868,52869,52871,52873,52880,52881,52884,52888,52896,52897,52899,52900,52901,52908,52909,52929,52964,52965,52968,52971,52972,52980,52981,52983,52984,52985,52992,52993,52996,53e3,53008,53009,53011,53013,53020,53024,53028,53036,53037,53039,53040,53041,53048,53076,53077,53080,53084,53092,53093,53095,53097,53104,53105,53108,53112,53120,53125,53132,53153,53160,53168,53188,53216,53217,53220,53224,53232,53233,53235,53237,53244,53248,53252,53265,53272,53293,53300,53301,53304,53308,55061,55062,55063,55066,55067,55069,55070,55071,55073,55074,55075,55076,55077,55078,55079,55082,55084,55086,55087,55088,55089,55090,55091,55094,55095,55097,null,null,null,null,null,null,55098,55099,55101,55102,55103,55104,55105,55106,55107,55109,55110,55112,55114,55115,55116,55117,55118,55119,55122,55123,55125,55130,55131,55132,55133,55134,null,null,null,null,null,null,55135,55138,55140,55142,55143,55144,55146,55147,55149,55150,55151,55153,55154,55155,55157,55158,55159,55160,55161,55162,55163,55166,55167,55168,55170,55171,55172,55173,55174,55175,55178,55179,53316,53317,53319,53321,53328,53332,53336,53344,53356,53357,53360,53364,53372,53373,53377,53412,53413,53416,53420,53428,53429,53431,53433,53440,53441,53444,53448,53449,53456,53457,53459,53460,53461,53468,53469,53472,53476,53484,53485,53487,53488,53489,53496,53517,53552,53553,53556,53560,53562,53568,53569,53571,53572,53573,53580,53581,53584,53588,53596,53597,53599,53601,53608,53612,53628,53636,53640,53664,53665,53668,53672,53680,53681,53683,53685,53690,53692,53696,53720,53748,53752,53767,53769,53776,53804,53805,53808,53812,53820,53821,53823,53825,53832,53852,55181,55182,55183,55185,55186,55187,55188,55189,55190,55191,55194,55196,55198,55199,55200,55201,55202,55203,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,53860,53888,53889,53892,53896,53904,53905,53909,53916,53920,53924,53932,53937,53944,53945,53948,53951,53952,53954,53960,53961,53963,53972,53976,53980,53988,53989,54e3,54001,54004,54008,54016,54017,54019,54021,54028,54029,54030,54032,54036,54038,54044,54045,54047,54048,54049,54053,54056,54057,54060,54064,54072,54073,54075,54076,54077,54084,54085,54140,54141,54144,54148,54156,54157,54159,54160,54161,54168,54169,54172,54176,54184,54185,54187,54189,54196,54200,54204,54212,54213,54216,54217,54224,54232,54241,54243,54252,54253,54256,54260,54268,54269,54271,54273,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,54280,54301,54336,54340,54364,54368,54372,54381,54383,54392,54393,54396,54399,54400,54402,54408,54409,54411,54413,54420,54441,54476,54480,54484,54492,54495,54504,54508,54512,54520,54523,54525,54532,54536,54540,54548,54549,54551,54588,54589,54592,54596,54604,54605,54607,54609,54616,54617,54620,54624,54629,54632,54633,54635,54637,54644,54645,54648,54652,54660,54661,54663,54664,54665,54672,54693,54728,54729,54732,54736,54738,54744,54745,54747,54749,54756,54757,54760,54764,54772,54773,54775,54777,54784,54785,54788,54792,54800,54801,54803,54804,54805,54812,54816,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,54820,54829,54840,54841,54844,54848,54853,54856,54857,54859,54861,54865,54868,54869,54872,54876,54887,54889,54896,54897,54900,54915,54917,54924,54925,54928,54932,54941,54943,54945,54952,54956,54960,54969,54971,54980,54981,54984,54988,54993,54996,54999,55001,55008,55012,55016,55024,55029,55036,55037,55040,55044,55057,55064,55065,55068,55072,55080,55081,55083,55085,55092,55093,55096,55100,55108,55111,55113,55120,55121,55124,55126,55127,55128,55129,55136,55137,55139,55141,55145,55148,55152,55156,55164,55165,55169,55176,55177,55180,55184,55192,55193,55195,55197,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20285,20339,20551,20729,21152,21487,21621,21733,22025,23233,23478,26247,26550,26551,26607,27468,29634,30146,31292,33499,33540,34903,34952,35382,36040,36303,36603,36838,39381,21051,21364,21508,24682,24932,27580,29647,33050,35258,35282,38307,20355,21002,22718,22904,23014,24178,24185,25031,25536,26438,26604,26751,28567,30286,30475,30965,31240,31487,31777,32925,33390,33393,35563,38291,20075,21917,26359,28212,30883,31469,33883,35088,34638,38824,21208,22350,22570,23884,24863,25022,25121,25954,26577,27204,28187,29976,30131,30435,30640,32058,37039,37969,37970,40853,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21283,23724,30002,32987,37440,38296,21083,22536,23004,23713,23831,24247,24378,24394,24951,27743,30074,30086,31968,32115,32177,32652,33108,33313,34193,35137,35611,37628,38477,40007,20171,20215,20491,20977,22607,24887,24894,24936,25913,27114,28433,30117,30342,30422,31623,33445,33995,63744,37799,38283,21888,23458,22353,63745,31923,32697,37301,20520,21435,23621,24040,25298,25454,25818,25831,28192,28844,31067,36317,36382,63746,36989,37445,37624,20094,20214,20581,24062,24314,24838,26967,33137,34388,36423,37749,39467,20062,20625,26480,26688,20745,21133,21138,27298,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30652,37392,40660,21163,24623,36850,20552,25001,25581,25802,26684,27268,28608,33160,35233,38548,22533,29309,29356,29956,32121,32365,32937,35211,35700,36963,40273,25225,27770,28500,32080,32570,35363,20860,24906,31645,35609,37463,37772,20140,20435,20510,20670,20742,21185,21197,21375,22384,22659,24218,24465,24950,25004,25806,25964,26223,26299,26356,26775,28039,28805,28913,29855,29861,29898,30169,30828,30956,31455,31478,32069,32147,32789,32831,33051,33686,35686,36629,36885,37857,38915,38968,39514,39912,20418,21843,22586,22865,23395,23622,24760,25106,26690,26800,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26856,28330,30028,30328,30926,31293,31995,32363,32380,35336,35489,35903,38542,40388,21476,21481,21578,21617,22266,22993,23396,23611,24235,25335,25911,25925,25970,26272,26543,27073,27837,30204,30352,30590,31295,32660,32771,32929,33167,33510,33533,33776,34241,34865,34996,35493,63747,36764,37678,38599,39015,39640,40723,21741,26011,26354,26767,31296,35895,40288,22256,22372,23825,26118,26801,26829,28414,29736,34974,39908,27752,63748,39592,20379,20844,20849,21151,23380,24037,24656,24685,25329,25511,25915,29657,31354,34467,36002,38799,20018,23521,25096,26524,29916,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31185,33747,35463,35506,36328,36942,37707,38982,24275,27112,34303,37101,63749,20896,23448,23532,24931,26874,27454,28748,29743,29912,31649,32592,33733,35264,36011,38364,39208,21038,24669,25324,36866,20362,20809,21281,22745,24291,26336,27960,28826,29378,29654,31568,33009,37979,21350,25499,32619,20054,20608,22602,22750,24618,24871,25296,27088,39745,23439,32024,32945,36703,20132,20689,21676,21932,23308,23968,24039,25898,25934,26657,27211,29409,30350,30703,32094,32761,33184,34126,34527,36611,36686,37066,39171,39509,39851,19992,20037,20061,20167,20465,20855,21246,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21312,21475,21477,21646,22036,22389,22434,23495,23943,24272,25084,25304,25937,26552,26601,27083,27472,27590,27628,27714,28317,28792,29399,29590,29699,30655,30697,31350,32127,32777,33276,33285,33290,33503,34914,35635,36092,36544,36881,37041,37476,37558,39378,39493,40169,40407,40860,22283,23616,33738,38816,38827,40628,21531,31384,32676,35033,36557,37089,22528,23624,25496,31391,23470,24339,31353,31406,33422,36524,20518,21048,21240,21367,22280,25331,25458,27402,28099,30519,21413,29527,34152,36470,38357,26426,27331,28528,35437,36556,39243,63750,26231,27512,36020,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,39740,63751,21483,22317,22862,25542,27131,29674,30789,31418,31429,31998,33909,35215,36211,36917,38312,21243,22343,30023,31584,33740,37406,63752,27224,20811,21067,21127,25119,26840,26997,38553,20677,21156,21220,25027,26020,26681,27135,29822,31563,33465,33771,35250,35641,36817,39241,63753,20170,22935,25810,26129,27278,29748,31105,31165,33449,34942,34943,35167,63754,37670,20235,21450,24613,25201,27762,32026,32102,20120,20834,30684,32943,20225,20238,20854,20864,21980,22120,22331,22522,22524,22804,22855,22931,23492,23696,23822,24049,24190,24524,25216,26071,26083,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26398,26399,26462,26827,26820,27231,27450,27683,27773,27778,28103,29592,29734,29738,29826,29859,30072,30079,30849,30959,31041,31047,31048,31098,31637,32e3,32186,32648,32774,32813,32908,35352,35663,35912,36215,37665,37668,39138,39249,39438,39439,39525,40594,32202,20342,21513,25326,26708,37329,21931,20794,63755,63756,23068,25062,63757,25295,25343,63758,63759,63760,63761,63762,63763,37027,63764,63765,63766,63767,63768,35582,63769,63770,63771,63772,26262,63773,29014,63774,63775,38627,63776,25423,25466,21335,63777,26511,26976,28275,63778,30007,63779,63780,63781,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32013,63782,63783,34930,22218,23064,63784,63785,63786,63787,63788,20035,63789,20839,22856,26608,32784,63790,22899,24180,25754,31178,24565,24684,25288,25467,23527,23511,21162,63791,22900,24361,24594,63792,63793,63794,29785,63795,63796,63797,63798,63799,63800,39377,63801,63802,63803,63804,63805,63806,63807,63808,63809,63810,63811,28611,63812,63813,33215,36786,24817,63814,63815,33126,63816,63817,23615,63818,63819,63820,63821,63822,63823,63824,63825,23273,35365,26491,32016,63826,63827,63828,63829,63830,63831,33021,63832,63833,23612,27877,21311,28346,22810,33590,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20025,20150,20294,21934,22296,22727,24406,26039,26086,27264,27573,28237,30701,31471,31774,32222,34507,34962,37170,37723,25787,28606,29562,30136,36948,21846,22349,25018,25812,26311,28129,28251,28525,28601,30192,32835,33213,34113,35203,35527,35674,37663,27795,30035,31572,36367,36957,21776,22530,22616,24162,25095,25758,26848,30070,31958,34739,40680,20195,22408,22382,22823,23565,23729,24118,24453,25140,25825,29619,33274,34955,36024,38538,40667,23429,24503,24755,20498,20992,21040,22294,22581,22615,23566,23648,23798,23947,24230,24466,24764,25361,25481,25623,26691,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26873,27330,28120,28193,28372,28644,29182,30428,30585,31153,31291,33796,35241,36077,36339,36424,36867,36884,36947,37117,37709,38518,38876,27602,28678,29272,29346,29544,30563,31167,31716,32411,35712,22697,24775,25958,26109,26302,27788,28958,29129,35930,38931,20077,31361,20189,20908,20941,21205,21516,24999,26481,26704,26847,27934,28540,30140,30643,31461,33012,33891,37509,20828,26007,26460,26515,30168,31431,33651,63834,35910,36887,38957,23663,33216,33434,36929,36975,37389,24471,23965,27225,29128,30331,31561,34276,35588,37159,39472,21895,25078,63835,30313,32645,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,34367,34746,35064,37007,63836,27931,28889,29662,32097,33853,63837,37226,39409,63838,20098,21365,27396,27410,28734,29211,34349,40478,21068,36771,23888,25829,25900,27414,28651,31811,32412,34253,35172,35261,25289,33240,34847,24266,26391,28010,29436,29701,29807,34690,37086,20358,23821,24480,33802,20919,25504,30053,20142,20486,20841,20937,26753,27153,31918,31921,31975,33391,35538,36635,37327,20406,20791,21237,21570,24300,24942,25150,26053,27354,28670,31018,34268,34851,38317,39522,39530,40599,40654,21147,26310,27511,28701,31019,36706,38722,24976,25088,25891,28451,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29001,29833,32244,32879,34030,36646,36899,37706,20925,21015,21155,27916,28872,35010,24265,25986,27566,28610,31806,29557,20196,20278,22265,63839,23738,23994,24604,29618,31533,32666,32718,32838,36894,37428,38646,38728,38936,40801,20363,28583,31150,37300,38583,21214,63840,25736,25796,27347,28510,28696,29200,30439,32769,34310,34396,36335,36613,38706,39791,40442,40565,30860,31103,32160,33737,37636,40575,40595,35542,22751,24324,26407,28711,29903,31840,32894,20769,28712,29282,30922,36034,36058,36084,38647,20102,20698,23534,24278,26009,29134,30274,30637,32842,34044,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36988,39719,40845,22744,23105,23650,27155,28122,28431,30267,32047,32311,34078,35128,37860,38475,21129,26066,26611,27060,27969,28316,28687,29705,29792,30041,30244,30827,35628,39006,20845,25134,38520,20374,20523,23833,28138,32184,36650,24459,24900,26647,63841,38534,21202,32907,20956,20940,26974,31260,32190,33777,38517,20442,21033,21400,21519,21774,23653,24743,26446,26792,28012,29313,29432,29702,29827,63842,30178,31852,32633,32696,33673,35023,35041,37324,37328,38626,39881,21533,28542,29136,29848,34298,36522,38563,40023,40607,26519,28107,29747,33256,38678,30764,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31435,31520,31890,25705,29802,30194,30908,30952,39340,39764,40635,23518,24149,28448,33180,33707,37e3,19975,21325,23081,24018,24398,24930,25405,26217,26364,28415,28459,28771,30622,33836,34067,34875,36627,39237,39995,21788,25273,26411,27819,33545,35178,38778,20129,22916,24536,24537,26395,32178,32596,33426,33579,33725,36638,37017,22475,22969,23186,23504,26151,26522,26757,27599,29028,32629,36023,36067,36993,39749,33032,35978,38476,39488,40613,23391,27667,29467,30450,30431,33804,20906,35219,20813,20885,21193,26825,27796,30468,30496,32191,32236,38754,40629,28357,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,34065,20901,21517,21629,26126,26269,26919,28319,30399,30609,33559,33986,34719,37225,37528,40180,34946,20398,20882,21215,22982,24125,24917,25720,25721,26286,26576,27169,27597,27611,29279,29281,29761,30520,30683,32791,33468,33541,35584,35624,35980,26408,27792,29287,30446,30566,31302,40361,27519,27794,22818,26406,33945,21359,22675,22937,24287,25551,26164,26483,28218,29483,31447,33495,37672,21209,24043,25006,25035,25098,25287,25771,26080,26969,27494,27595,28961,29687,30045,32326,33310,33538,34154,35491,36031,38695,40289,22696,40664,20497,21006,21563,21839,25991,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,27766,32010,32011,32862,34442,38272,38639,21247,27797,29289,21619,23194,23614,23883,24396,24494,26410,26806,26979,28220,28228,30473,31859,32654,34183,35598,36855,38753,40692,23735,24758,24845,25003,25935,26107,26108,27665,27887,29599,29641,32225,38292,23494,34588,35600,21085,21338,25293,25615,25778,26420,27192,27850,29632,29854,31636,31893,32283,33162,33334,34180,36843,38649,39361,20276,21322,21453,21467,25292,25644,25856,26001,27075,27886,28504,29677,30036,30242,30436,30460,30928,30971,31020,32070,33324,34784,36820,38930,39151,21187,25300,25765,28196,28497,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30332,36299,37297,37474,39662,39747,20515,20621,22346,22952,23592,24135,24439,25151,25918,26041,26049,26121,26507,27036,28354,30917,32033,32938,33152,33323,33459,33953,34444,35370,35607,37030,38450,40848,20493,20467,63843,22521,24472,25308,25490,26479,28227,28953,30403,32972,32986,35060,35061,35097,36064,36649,37197,38506,20271,20336,24091,26575,26658,30333,30334,39748,24161,27146,29033,29140,30058,63844,32321,34115,34281,39132,20240,31567,32624,38309,20961,24070,26805,27710,27726,27867,29359,31684,33539,27861,29754,20731,21128,22721,25816,27287,29863,30294,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30887,34327,38370,38713,63845,21342,24321,35722,36776,36783,37002,21029,30629,40009,40712,19993,20482,20853,23643,24183,26142,26170,26564,26821,28851,29953,30149,31177,31453,36647,39200,39432,20445,22561,22577,23542,26222,27493,27921,28282,28541,29668,29995,33769,35036,35091,35676,36628,20239,20693,21264,21340,23443,24489,26381,31119,33145,33583,34068,35079,35206,36665,36667,39333,39954,26412,20086,20472,22857,23553,23791,23792,25447,26834,28925,29090,29739,32299,34028,34562,36898,37586,40179,19981,20184,20463,20613,21078,21103,21542,21648,22496,22827,23142,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,23386,23413,23500,24220,63846,25206,25975,26023,28014,28325,29238,31526,31807,32566,33104,33105,33178,33344,33433,33705,35331,36e3,36070,36091,36212,36282,37096,37340,38428,38468,39385,40167,21271,20998,21545,22132,22707,22868,22894,24575,24996,25198,26128,27774,28954,30406,31881,31966,32027,33452,36033,38640,63847,20315,24343,24447,25282,23849,26379,26842,30844,32323,40300,19989,20633,21269,21290,21329,22915,23138,24199,24754,24970,25161,25209,26e3,26503,27047,27604,27606,27607,27608,27832,63848,29749,30202,30738,30865,31189,31192,31875,32203,32737,32933,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,33086,33218,33778,34586,35048,35513,35692,36027,37145,38750,39131,40763,22188,23338,24428,25996,27315,27567,27996,28657,28693,29277,29613,36007,36051,38971,24977,27703,32856,39425,20045,20107,20123,20181,20282,20284,20351,20447,20735,21490,21496,21766,21987,22235,22763,22882,23057,23531,23546,23556,24051,24107,24473,24605,25448,26012,26031,26614,26619,26797,27515,27801,27863,28195,28681,29509,30722,31038,31040,31072,31169,31721,32023,32114,32902,33293,33678,34001,34503,35039,35408,35422,35613,36060,36198,36781,37034,39164,39391,40605,21066,63849,26388,63850,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20632,21034,23665,25955,27733,29642,29987,30109,31639,33948,37240,38704,20087,25746,27578,29022,34217,19977,63851,26441,26862,28183,33439,34072,34923,25591,28545,37394,39087,19978,20663,20687,20767,21830,21930,22039,23360,23577,23776,24120,24202,24224,24258,24819,26705,27233,28248,29245,29248,29376,30456,31077,31665,32724,35059,35316,35443,35937,36062,38684,22622,29885,36093,21959,63852,31329,32034,33394,29298,29983,29989,63853,31513,22661,22779,23996,24207,24246,24464,24661,25234,25471,25933,26257,26329,26360,26646,26866,29312,29790,31598,32110,32214,32626,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32997,33298,34223,35199,35475,36893,37604,40653,40736,22805,22893,24109,24796,26132,26227,26512,27728,28101,28511,30707,30889,33990,37323,37675,20185,20682,20808,21892,23307,23459,25159,25982,26059,28210,29053,29697,29764,29831,29887,30316,31146,32218,32341,32680,33146,33203,33337,34330,34796,35445,36323,36984,37521,37925,39245,39854,21352,23633,26964,27844,27945,28203,33292,34203,35131,35373,35498,38634,40807,21089,26297,27570,32406,34814,36109,38275,38493,25885,28041,29166,63854,22478,22995,23468,24615,24826,25104,26143,26207,29481,29689,30427,30465,31596,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32854,32882,33125,35488,37266,19990,21218,27506,27927,31237,31545,32048,63855,36016,21484,22063,22609,23477,23567,23569,24034,25152,25475,25620,26157,26803,27836,28040,28335,28703,28836,29138,29990,30095,30094,30233,31505,31712,31787,32032,32057,34092,34157,34311,35380,36877,36961,37045,37559,38902,39479,20439,23660,26463,28049,31903,32396,35606,36118,36895,23403,24061,25613,33984,36956,39137,29575,23435,24730,26494,28126,35359,35494,36865,38924,21047,63856,28753,30862,37782,34928,37335,20462,21463,22013,22234,22402,22781,23234,23432,23723,23744,24101,24833,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,25101,25163,25480,25628,25910,25976,27193,27530,27700,27929,28465,29159,29417,29560,29703,29874,30246,30561,31168,31319,31466,31929,32143,32172,32353,32670,33065,33585,33936,34010,34282,34966,35504,35728,36664,36930,36995,37228,37526,37561,38539,38567,38568,38614,38656,38920,39318,39635,39706,21460,22654,22809,23408,23487,28113,28506,29087,29729,29881,32901,33789,24033,24455,24490,24642,26092,26642,26991,27219,27529,27957,28147,29667,30462,30636,31565,32020,33059,33308,33600,34036,34147,35426,35524,37255,37662,38918,39348,25100,34899,36848,37477,23815,23847,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,23913,29791,33181,34664,28629,25342,32722,35126,35186,19998,20056,20711,21213,21319,25215,26119,32361,34821,38494,20365,21273,22070,22987,23204,23608,23630,23629,24066,24337,24643,26045,26159,26178,26558,26612,29468,30690,31034,32709,33940,33997,35222,35430,35433,35553,35925,35962,22516,23508,24335,24687,25325,26893,27542,28252,29060,31698,34645,35672,36606,39135,39166,20280,20353,20449,21627,23072,23480,24892,26032,26216,29180,30003,31070,32051,33102,33251,33688,34218,34254,34563,35338,36523,36763,63857,36805,22833,23460,23526,24713,23529,23563,24515,27777,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63858,28145,28683,29978,33455,35574,20160,21313,63859,38617,27663,20126,20420,20818,21854,23077,23784,25105,29273,33469,33706,34558,34905,35357,38463,38597,39187,40201,40285,22538,23731,23997,24132,24801,24853,25569,27138,28197,37122,37716,38990,39952,40823,23433,23736,25353,26191,26696,30524,38593,38797,38996,39839,26017,35585,36555,38332,21813,23721,24022,24245,26263,30284,33780,38343,22739,25276,29390,40232,20208,22830,24591,26171,27523,31207,40230,21395,21696,22467,23830,24859,26326,28079,30861,33406,38552,38724,21380,25212,25494,28082,32266,33099,38989,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,27387,32588,40367,40474,20063,20539,20918,22812,24825,25590,26928,29242,32822,63860,37326,24369,63861,63862,32004,33509,33903,33979,34277,36493,63863,20335,63864,63865,22756,23363,24665,25562,25880,25965,26264,63866,26954,27171,27915,28673,29036,30162,30221,31155,31344,63867,32650,63868,35140,63869,35731,37312,38525,63870,39178,22276,24481,26044,28417,30208,31142,35486,39341,39770,40812,20740,25014,25233,27277,33222,20547,22576,24422,28937,35328,35578,23420,34326,20474,20796,22196,22852,25513,28153,23978,26989,20870,20104,20313,63871,63872,63873,22914,63874,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63875,27487,27741,63876,29877,30998,63877,33287,33349,33593,36671,36701,63878,39192,63879,63880,63881,20134,63882,22495,24441,26131,63883,63884,30123,32377,35695,63885,36870,39515,22181,22567,23032,23071,23476,63886,24310,63887,63888,25424,25403,63889,26941,27783,27839,28046,28051,28149,28436,63890,28895,28982,29017,63891,29123,29141,63892,30799,30831,63893,31605,32227,63894,32303,63895,34893,36575,63896,63897,63898,37467,63899,40182,63900,63901,63902,24709,28037,63903,29105,63904,63905,38321,21421,63906,63907,63908,26579,63909,28814,28976,29744,33398,33490,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63910,38331,39653,40573,26308,63911,29121,33865,63912,63913,22603,63914,63915,23992,24433,63916,26144,26254,27001,27054,27704,27891,28214,28481,28634,28699,28719,29008,29151,29552,63917,29787,63918,29908,30408,31310,32403,63919,63920,33521,35424,36814,63921,37704,63922,38681,63923,63924,20034,20522,63925,21e3,21473,26355,27757,28618,29450,30591,31330,33454,34269,34306,63926,35028,35427,35709,35947,63927,37555,63928,38675,38928,20116,20237,20425,20658,21320,21566,21555,21978,22626,22714,22887,23067,23524,24735,63929,25034,25942,26111,26212,26791,27738,28595,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,28879,29100,29522,31613,34568,35492,39986,40711,23627,27779,29508,29577,37434,28331,29797,30239,31337,32277,34314,20800,22725,25793,29934,29973,30320,32705,37013,38605,39252,28198,29926,31401,31402,33253,34521,34680,35355,23113,23436,23451,26785,26880,28003,29609,29715,29740,30871,32233,32747,33048,33109,33694,35916,38446,38929,26352,24448,26106,26505,27754,29579,20525,23043,27498,30702,22806,23916,24013,29477,30031,63930,63931,20709,20985,22575,22829,22934,23002,23525,63932,63933,23970,25303,25622,25747,25854,63934,26332,63935,27208,63936,29183,29796,63937,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31368,31407,32327,32350,32768,33136,63938,34799,35201,35616,36953,63939,36992,39250,24958,27442,28020,32287,35109,36785,20433,20653,20887,21191,22471,22665,23481,24248,24898,27029,28044,28263,28342,29076,29794,29992,29996,32883,33592,33993,36362,37780,37854,63940,20110,20305,20598,20778,21448,21451,21491,23431,23507,23588,24858,24962,26100,29275,29591,29760,30402,31056,31121,31161,32006,32701,33419,34261,34398,36802,36935,37109,37354,38533,38632,38633,21206,24423,26093,26161,26671,29020,31286,37057,38922,20113,63941,27218,27550,28560,29065,32792,33464,34131,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36939,38549,38642,38907,34074,39729,20112,29066,38596,20803,21407,21729,22291,22290,22435,23195,23236,23491,24616,24895,25588,27781,27961,28274,28304,29232,29503,29783,33489,34945,36677,36960,63942,38498,39e3,40219,26376,36234,37470,20301,20553,20702,21361,22285,22996,23041,23561,24944,26256,28205,29234,29771,32239,32963,33806,33894,34111,34655,34907,35096,35586,36949,38859,39759,20083,20369,20754,20842,63943,21807,21929,23418,23461,24188,24189,24254,24736,24799,24840,24841,25540,25912,26377,63944,26580,26586,63945,26977,26978,27833,27943,63946,28216,63947,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,28641,29494,29495,63948,29788,30001,63949,30290,63950,63951,32173,33278,33848,35029,35480,35547,35565,36400,36418,36938,36926,36986,37193,37321,37742,63952,63953,22537,63954,27603,32905,32946,63955,63956,20801,22891,23609,63957,63958,28516,29607,32996,36103,63959,37399,38287,63960,63961,63962,63963,32895,25102,28700,32104,34701,63964,22432,24681,24903,27575,35518,37504,38577,20057,21535,28139,34093,38512,38899,39150,25558,27875,37009,20957,25033,33210,40441,20381,20506,20736,23452,24847,25087,25836,26885,27589,30097,30691,32681,33380,34191,34811,34915,35516,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,35696,37291,20108,20197,20234,63965,63966,22839,23016,63967,24050,24347,24411,24609,63968,63969,63970,63971,29246,29669,63972,30064,30157,63973,31227,63974,32780,32819,32900,33505,33617,63975,63976,36029,36019,36999,63977,63978,39156,39180,63979,63980,28727,30410,32714,32716,32764,35610,20154,20161,20995,21360,63981,21693,22240,23035,23493,24341,24525,28270,63982,63983,32106,33589,63984,34451,35469,63985,38765,38775,63986,63987,19968,20314,20350,22777,26085,28322,36920,37808,39353,20219,22764,22922,23001,24641,63988,63989,31252,63990,33615,36035,20837,21316,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63991,63992,63993,20173,21097,23381,33471,20180,21050,21672,22985,23039,23376,23383,23388,24675,24904,28363,28825,29038,29574,29943,30133,30913,32043,32773,33258,33576,34071,34249,35566,36039,38604,20316,21242,22204,26027,26152,28796,28856,29237,32189,33421,37196,38592,40306,23409,26855,27544,28538,30430,23697,26283,28507,31668,31786,34870,38620,19976,20183,21280,22580,22715,22767,22892,23559,24115,24196,24373,25484,26290,26454,27167,27299,27404,28479,29254,63994,29520,29835,31456,31911,33144,33247,33255,33674,33900,34083,34196,34255,35037,36115,37292,38263,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38556,20877,21705,22312,23472,25165,26448,26685,26771,28221,28371,28797,32289,35009,36001,36617,40779,40782,29229,31631,35533,37658,20295,20302,20786,21632,22992,24213,25269,26485,26990,27159,27822,28186,29401,29482,30141,31672,32053,33511,33785,33879,34295,35419,36015,36487,36889,37048,38606,40799,21219,21514,23265,23490,25688,25973,28404,29380,63995,30340,31309,31515,31821,32318,32735,33659,35627,36042,36196,36321,36447,36842,36857,36969,37841,20291,20346,20659,20840,20856,21069,21098,22625,22652,22880,23560,23637,24283,24731,25136,26643,27583,27656,28593,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29006,29728,3e4,30008,30033,30322,31564,31627,31661,31686,32399,35438,36670,36681,37439,37523,37666,37931,38651,39002,39019,39198,20999,25130,25240,27993,30308,31434,31680,32118,21344,23742,24215,28472,28857,31896,38673,39822,40670,25509,25722,34678,19969,20117,20141,20572,20597,21576,22979,23450,24128,24237,24311,24449,24773,25402,25919,25972,26060,26230,26232,26622,26984,27273,27491,27712,28096,28136,28191,28254,28702,28833,29582,29693,30010,30555,30855,31118,31243,31357,31934,32142,33351,35330,35562,35998,37165,37194,37336,37478,37580,37664,38662,38742,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38748,38914,40718,21046,21137,21884,22564,24093,24351,24716,25552,26799,28639,31085,31532,33229,34234,35069,35576,36420,37261,38500,38555,38717,38988,40778,20430,20806,20939,21161,22066,24340,24427,25514,25805,26089,26177,26362,26361,26397,26781,26839,27133,28437,28526,29031,29157,29226,29866,30522,31062,31066,31199,31264,31381,31895,31967,32068,32368,32903,34299,34468,35412,35519,36249,36481,36896,36973,37347,38459,38613,40165,26063,31751,36275,37827,23384,23562,21330,25305,29469,20519,23447,24478,24752,24939,26837,28121,29742,31278,32066,32156,32305,33131,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36394,36405,37758,37912,20304,22352,24038,24231,25387,32618,20027,20303,20367,20570,23005,32964,21610,21608,22014,22863,23449,24030,24282,26205,26417,26609,26666,27880,27954,28234,28557,28855,29664,30087,31820,32002,32044,32162,33311,34523,35387,35461,36208,36490,36659,36913,37198,37202,37956,39376,31481,31909,20426,20737,20934,22472,23535,23803,26201,27197,27994,28310,28652,28940,30063,31459,34850,36897,36981,38603,39423,33537,20013,20210,34886,37325,21373,27355,26987,27713,33914,22686,24974,26366,25327,28893,29969,30151,32338,33976,35657,36104,20043,21482,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21675,22320,22336,24535,25345,25351,25711,25903,26088,26234,26525,26547,27490,27744,27802,28460,30693,30757,31049,31063,32025,32930,33026,33267,33437,33463,34584,35468,63996,36100,36286,36978,30452,31257,31287,32340,32887,21767,21972,22645,25391,25634,26185,26187,26733,27035,27524,27941,28337,29645,29800,29857,30043,30137,30433,30494,30603,31206,32265,32285,33275,34095,34967,35386,36049,36587,36784,36914,37805,38499,38515,38663,20356,21489,23018,23241,24089,26702,29894,30142,31209,31378,33187,34541,36074,36300,36845,26015,26389,63997,22519,28503,32221,36655,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,37878,38598,24501,25074,28548,19988,20376,20511,21449,21983,23919,24046,27425,27492,30923,31642,63998,36425,36554,36974,25417,25662,30528,31364,37679,38015,40810,25776,28591,29158,29864,29914,31428,31762,32386,31922,32408,35738,36106,38013,39184,39244,21049,23519,25830,26413,32046,20717,21443,22649,24920,24921,25082,26028,31449,35730,35734,20489,20513,21109,21809,23100,24288,24432,24884,25950,26124,26166,26274,27085,28356,28466,29462,30241,31379,33081,33369,33750,33980,20661,22512,23488,23528,24425,25505,30758,32181,33756,34081,37319,37365,20874,26613,31574,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36012,20932,22971,24765,34389,20508,63999,21076,23610,24957,25114,25299,25842,26021,28364,30240,33034,36448,38495,38587,20191,21315,21912,22825,24029,25797,27849,28154,29588,31359,33307,34214,36068,36368,36983,37351,38369,38433,38854,20984,21746,21894,24505,25764,28552,32180,36639,36685,37941,20681,23574,27838,28155,29979,30651,31805,31844,35449,35522,22558,22974,24086,25463,29266,30090,30571,35548,36028,36626,24307,26228,28152,32893,33729,35531,38737,39894,64e3,21059,26367,28053,28399,32224,35558,36910,36958,39636,21021,21119,21736,24980,25220,25307,26786,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26898,26970,27189,28818,28966,30813,30977,30990,31186,31245,32918,33400,33493,33609,34121,35970,36229,37218,37259,37294,20419,22225,29165,30679,34560,35320,23544,24534,26449,37032,21474,22618,23541,24740,24961,25696,32317,32880,34085,37507,25774,20652,23828,26368,22684,25277,25512,26894,27e3,27166,28267,30394,31179,33467,33833,35535,36264,36861,37138,37195,37276,37648,37656,37786,38619,39478,39949,19985,30044,31069,31482,31569,31689,32302,33988,36441,36468,36600,36880,26149,26943,29763,20986,26414,40668,20805,24544,27798,34802,34909,34935,24756,33205,33795,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36101,21462,21561,22068,23094,23601,28810,32736,32858,33030,33261,36259,37257,39519,40434,20596,20164,21408,24827,28204,23652,20360,20516,21988,23769,24159,24677,26772,27835,28100,29118,30164,30196,30305,31258,31305,32199,32251,32622,33268,34473,36636,38601,39347,40786,21063,21189,39149,35242,19971,26578,28422,20405,23522,26517,27784,28024,29723,30759,37341,37756,34756,31204,31281,24555,20182,21668,21822,22702,22949,24816,25171,25302,26422,26965,33333,38464,39345,39389,20524,21331,21828,22396,64001,25176,64002,25826,26219,26589,28609,28655,29730,29752,35351,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,37944,21585,22022,22374,24392,24986,27470,28760,28845,32187,35477,22890,33067,25506,30472,32829,36010,22612,25645,27067,23445,24081,28271,64003,34153,20812,21488,22826,24608,24907,27526,27760,27888,31518,32974,33492,36294,37040,39089,64004,25799,28580,25745,25860,20814,21520,22303,35342,24927,26742,64005,30171,31570,32113,36890,22534,27084,33151,35114,36864,38969,20600,22871,22956,25237,36879,39722,24925,29305,38358,22369,23110,24052,25226,25773,25850,26487,27874,27966,29228,29750,30772,32631,33453,36315,38935,21028,22338,26495,29256,29923,36009,36774,37393,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38442,20843,21485,25420,20329,21764,24726,25943,27803,28031,29260,29437,31255,35207,35997,24429,28558,28921,33192,24846,20415,20559,25153,29255,31687,32232,32745,36941,38829,39449,36022,22378,24179,26544,33805,35413,21536,23318,24163,24290,24330,25987,32954,34109,38281,38491,20296,21253,21261,21263,21638,21754,22275,24067,24598,25243,25265,25429,64006,27873,28006,30129,30770,32990,33071,33502,33889,33970,34957,35090,36875,37610,39165,39825,24133,26292,26333,28689,29190,64007,20469,21117,24426,24915,26451,27161,28418,29922,31080,34920,35961,39111,39108,39491,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21697,31263,26963,35575,35914,39080,39342,24444,25259,30130,30382,34987,36991,38466,21305,24380,24517,27852,29644,30050,30091,31558,33534,39325,20047,36924,19979,20309,21414,22799,24264,26160,27827,29781,33655,34662,36032,36944,38686,39957,22737,23416,34384,35604,40372,23506,24680,24717,26097,27735,28450,28579,28698,32597,32752,38289,38290,38480,38867,21106,36676,20989,21547,21688,21859,21898,27323,28085,32216,33382,37532,38519,40569,21512,21704,30418,34532,38308,38356,38492,20130,20233,23022,23270,24055,24658,25239,26477,26689,27782,28207,32568,32923,33322,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,64008,64009,38917,20133,20565,21683,22419,22874,23401,23475,25032,26999,28023,28707,34809,35299,35442,35559,36994,39405,39608,21182,26680,20502,24184,26447,33607,34892,20139,21521,22190,29670,37141,38911,39177,39255,39321,22099,22687,34395,35377,25010,27382,29563,36562,27463,38570,39511,22869,29184,36203,38761,20436,23796,24358,25080,26203,27883,28843,29572,29625,29694,30505,30541,32067,32098,32291,33335,34898,64010,36066,37449,39023,23377,31348,34880,38913,23244,20448,21332,22846,23805,25406,28025,29433,33029,33031,33698,37583,38960,20136,20804,21009,22411,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,24418,27842,28366,28677,28752,28847,29074,29673,29801,33610,34722,34913,36872,37026,37795,39336,20846,24407,24800,24935,26291,34137,36426,37295,38795,20046,20114,21628,22741,22778,22909,23733,24359,25142,25160,26122,26215,27627,28009,28111,28246,28408,28564,28640,28649,28765,29392,29733,29786,29920,30355,31068,31946,32286,32993,33446,33899,33983,34382,34399,34676,35703,35946,37804,38912,39013,24785,25110,37239,23130,26127,28151,28222,29759,39746,24573,24794,31503,21700,24344,27742,27859,27946,28888,32005,34425,35340,40251,21270,21644,23301,27194,28779,30069,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31117,31166,33457,33775,35441,35649,36008,38772,64011,25844,25899,30906,30907,31339,20024,21914,22864,23462,24187,24739,25563,27489,26213,26707,28185,29029,29872,32008,36996,39529,39973,27963,28369,29502,35905,38346,20976,24140,24488,24653,24822,24880,24908,26179,26180,27045,27841,28255,28361,28514,29004,29852,30343,31681,31783,33618,34647,36945,38541,40643,21295,22238,24315,24458,24674,24724,25079,26214,26371,27292,28142,28590,28784,29546,32362,33214,33588,34516,35496,36036,21123,29554,23446,27243,37892,21742,22150,23389,25928,25989,26313,26783,28045,28102,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29243,32948,37237,39501,20399,20505,21402,21518,21564,21897,21957,24127,24460,26429,29030,29661,36869,21211,21235,22628,22734,28932,29071,29179,34224,35347,26248,34216,21927,26244,29002,33841,21321,21913,27585,24409,24509,25582,26249,28999,35569,36637,40638,20241,25658,28875,30054,34407,24676,35662,40440,20807,20982,21256,27958,33016,40657,26133,27427,28824,30165,21507,23673,32007,35350,27424,27453,27462,21560,24688,27965,32725,33288,20694,20958,21916,22123,22221,23020,23305,24076,24985,24984,25137,26206,26342,29081,29113,29114,29351,31143,31232,32690,35440,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],gb18030:[19970,19972,19973,19974,19983,19986,19991,19999,2e4,20001,20003,20006,20009,20014,20015,20017,20019,20021,20023,20028,20032,20033,20034,20036,20038,20042,20049,20053,20055,20058,20059,20066,20067,20068,20069,20071,20072,20074,20075,20076,20077,20078,20079,20082,20084,20085,20086,20087,20088,20089,20090,20091,20092,20093,20095,20096,20097,20098,20099,20100,20101,20103,20106,20112,20118,20119,20121,20124,20125,20126,20131,20138,20143,20144,20145,20148,20150,20151,20152,20153,20156,20157,20158,20168,20172,20175,20176,20178,20186,20187,20188,20192,20194,20198,20199,20201,20205,20206,20207,20209,20212,20216,20217,20218,20220,20222,20224,20226,20227,20228,20229,20230,20231,20232,20235,20236,20242,20243,20244,20245,20246,20252,20253,20257,20259,20264,20265,20268,20269,20270,20273,20275,20277,20279,20281,20283,20286,20287,20288,20289,20290,20292,20293,20295,20296,20297,20298,20299,20300,20306,20308,20310,20321,20322,20326,20328,20330,20331,20333,20334,20337,20338,20341,20343,20344,20345,20346,20349,20352,20353,20354,20357,20358,20359,20362,20364,20366,20368,20370,20371,20373,20374,20376,20377,20378,20380,20382,20383,20385,20386,20388,20395,20397,20400,20401,20402,20403,20404,20406,20407,20408,20409,20410,20411,20412,20413,20414,20416,20417,20418,20422,20423,20424,20425,20427,20428,20429,20434,20435,20436,20437,20438,20441,20443,20448,20450,20452,20453,20455,20459,20460,20464,20466,20468,20469,20470,20471,20473,20475,20476,20477,20479,20480,20481,20482,20483,20484,20485,20486,20487,20488,20489,20490,20491,20494,20496,20497,20499,20501,20502,20503,20507,20509,20510,20512,20514,20515,20516,20519,20523,20527,20528,20529,20530,20531,20532,20533,20534,20535,20536,20537,20539,20541,20543,20544,20545,20546,20548,20549,20550,20553,20554,20555,20557,20560,20561,20562,20563,20564,20566,20567,20568,20569,20571,20573,20574,20575,20576,20577,20578,20579,20580,20582,20583,20584,20585,20586,20587,20589,20590,20591,20592,20593,20594,20595,20596,20597,20600,20601,20602,20604,20605,20609,20610,20611,20612,20614,20615,20617,20618,20619,20620,20622,20623,20624,20625,20626,20627,20628,20629,20630,20631,20632,20633,20634,20635,20636,20637,20638,20639,20640,20641,20642,20644,20646,20650,20651,20653,20654,20655,20656,20657,20659,20660,20661,20662,20663,20664,20665,20668,20669,20670,20671,20672,20673,20674,20675,20676,20677,20678,20679,20680,20681,20682,20683,20684,20685,20686,20688,20689,20690,20691,20692,20693,20695,20696,20697,20699,20700,20701,20702,20703,20704,20705,20706,20707,20708,20709,20712,20713,20714,20715,20719,20720,20721,20722,20724,20726,20727,20728,20729,20730,20732,20733,20734,20735,20736,20737,20738,20739,20740,20741,20744,20745,20746,20748,20749,20750,20751,20752,20753,20755,20756,20757,20758,20759,20760,20761,20762,20763,20764,20765,20766,20767,20768,20770,20771,20772,20773,20774,20775,20776,20777,20778,20779,20780,20781,20782,20783,20784,20785,20786,20787,20788,20789,20790,20791,20792,20793,20794,20795,20796,20797,20798,20802,20807,20810,20812,20814,20815,20816,20818,20819,20823,20824,20825,20827,20829,20830,20831,20832,20833,20835,20836,20838,20839,20841,20842,20847,20850,20858,20862,20863,20867,20868,20870,20871,20874,20875,20878,20879,20880,20881,20883,20884,20888,20890,20893,20894,20895,20897,20899,20902,20903,20904,20905,20906,20909,20910,20916,20920,20921,20922,20926,20927,20929,20930,20931,20933,20936,20938,20941,20942,20944,20946,20947,20948,20949,20950,20951,20952,20953,20954,20956,20958,20959,20962,20963,20965,20966,20967,20968,20969,20970,20972,20974,20977,20978,20980,20983,20990,20996,20997,21001,21003,21004,21007,21008,21011,21012,21013,21020,21022,21023,21025,21026,21027,21029,21030,21031,21034,21036,21039,21041,21042,21044,21045,21052,21054,21060,21061,21062,21063,21064,21065,21067,21070,21071,21074,21075,21077,21079,21080,21081,21082,21083,21085,21087,21088,21090,21091,21092,21094,21096,21099,21100,21101,21102,21104,21105,21107,21108,21109,21110,21111,21112,21113,21114,21115,21116,21118,21120,21123,21124,21125,21126,21127,21129,21130,21131,21132,21133,21134,21135,21137,21138,21140,21141,21142,21143,21144,21145,21146,21148,21156,21157,21158,21159,21166,21167,21168,21172,21173,21174,21175,21176,21177,21178,21179,21180,21181,21184,21185,21186,21188,21189,21190,21192,21194,21196,21197,21198,21199,21201,21203,21204,21205,21207,21209,21210,21211,21212,21213,21214,21216,21217,21218,21219,21221,21222,21223,21224,21225,21226,21227,21228,21229,21230,21231,21233,21234,21235,21236,21237,21238,21239,21240,21243,21244,21245,21249,21250,21251,21252,21255,21257,21258,21259,21260,21262,21265,21266,21267,21268,21272,21275,21276,21278,21279,21282,21284,21285,21287,21288,21289,21291,21292,21293,21295,21296,21297,21298,21299,21300,21301,21302,21303,21304,21308,21309,21312,21314,21316,21318,21323,21324,21325,21328,21332,21336,21337,21339,21341,21349,21352,21354,21356,21357,21362,21366,21369,21371,21372,21373,21374,21376,21377,21379,21383,21384,21386,21390,21391,21392,21393,21394,21395,21396,21398,21399,21401,21403,21404,21406,21408,21409,21412,21415,21418,21419,21420,21421,21423,21424,21425,21426,21427,21428,21429,21431,21432,21433,21434,21436,21437,21438,21440,21443,21444,21445,21446,21447,21454,21455,21456,21458,21459,21461,21466,21468,21469,21470,21473,21474,21479,21492,21498,21502,21503,21504,21506,21509,21511,21515,21524,21528,21529,21530,21532,21538,21540,21541,21546,21552,21555,21558,21559,21562,21565,21567,21569,21570,21572,21573,21575,21577,21580,21581,21582,21583,21585,21594,21597,21598,21599,21600,21601,21603,21605,21607,21609,21610,21611,21612,21613,21614,21615,21616,21620,21625,21626,21630,21631,21633,21635,21637,21639,21640,21641,21642,21645,21649,21651,21655,21656,21660,21662,21663,21664,21665,21666,21669,21678,21680,21682,21685,21686,21687,21689,21690,21692,21694,21699,21701,21706,21707,21718,21720,21723,21728,21729,21730,21731,21732,21739,21740,21743,21744,21745,21748,21749,21750,21751,21752,21753,21755,21758,21760,21762,21763,21764,21765,21768,21770,21771,21772,21773,21774,21778,21779,21781,21782,21783,21784,21785,21786,21788,21789,21790,21791,21793,21797,21798,21800,21801,21803,21805,21810,21812,21813,21814,21816,21817,21818,21819,21821,21824,21826,21829,21831,21832,21835,21836,21837,21838,21839,21841,21842,21843,21844,21847,21848,21849,21850,21851,21853,21854,21855,21856,21858,21859,21864,21865,21867,21871,21872,21873,21874,21875,21876,21881,21882,21885,21887,21893,21894,21900,21901,21902,21904,21906,21907,21909,21910,21911,21914,21915,21918,21920,21921,21922,21923,21924,21925,21926,21928,21929,21930,21931,21932,21933,21934,21935,21936,21938,21940,21942,21944,21946,21948,21951,21952,21953,21954,21955,21958,21959,21960,21962,21963,21966,21967,21968,21973,21975,21976,21977,21978,21979,21982,21984,21986,21991,21993,21997,21998,22e3,22001,22004,22006,22008,22009,22010,22011,22012,22015,22018,22019,22020,22021,22022,22023,22026,22027,22029,22032,22033,22034,22035,22036,22037,22038,22039,22041,22042,22044,22045,22048,22049,22050,22053,22054,22056,22057,22058,22059,22062,22063,22064,22067,22069,22071,22072,22074,22076,22077,22078,22080,22081,22082,22083,22084,22085,22086,22087,22088,22089,22090,22091,22095,22096,22097,22098,22099,22101,22102,22106,22107,22109,22110,22111,22112,22113,22115,22117,22118,22119,22125,22126,22127,22128,22130,22131,22132,22133,22135,22136,22137,22138,22141,22142,22143,22144,22145,22146,22147,22148,22151,22152,22153,22154,22155,22156,22157,22160,22161,22162,22164,22165,22166,22167,22168,22169,22170,22171,22172,22173,22174,22175,22176,22177,22178,22180,22181,22182,22183,22184,22185,22186,22187,22188,22189,22190,22192,22193,22194,22195,22196,22197,22198,22200,22201,22202,22203,22205,22206,22207,22208,22209,22210,22211,22212,22213,22214,22215,22216,22217,22219,22220,22221,22222,22223,22224,22225,22226,22227,22229,22230,22232,22233,22236,22243,22245,22246,22247,22248,22249,22250,22252,22254,22255,22258,22259,22262,22263,22264,22267,22268,22272,22273,22274,22277,22279,22283,22284,22285,22286,22287,22288,22289,22290,22291,22292,22293,22294,22295,22296,22297,22298,22299,22301,22302,22304,22305,22306,22308,22309,22310,22311,22315,22321,22322,22324,22325,22326,22327,22328,22332,22333,22335,22337,22339,22340,22341,22342,22344,22345,22347,22354,22355,22356,22357,22358,22360,22361,22370,22371,22373,22375,22380,22382,22384,22385,22386,22388,22389,22392,22393,22394,22397,22398,22399,22400,22401,22407,22408,22409,22410,22413,22414,22415,22416,22417,22420,22421,22422,22423,22424,22425,22426,22428,22429,22430,22431,22437,22440,22442,22444,22447,22448,22449,22451,22453,22454,22455,22457,22458,22459,22460,22461,22462,22463,22464,22465,22468,22469,22470,22471,22472,22473,22474,22476,22477,22480,22481,22483,22486,22487,22491,22492,22494,22497,22498,22499,22501,22502,22503,22504,22505,22506,22507,22508,22510,22512,22513,22514,22515,22517,22518,22519,22523,22524,22526,22527,22529,22531,22532,22533,22536,22537,22538,22540,22542,22543,22544,22546,22547,22548,22550,22551,22552,22554,22555,22556,22557,22559,22562,22563,22565,22566,22567,22568,22569,22571,22572,22573,22574,22575,22577,22578,22579,22580,22582,22583,22584,22585,22586,22587,22588,22589,22590,22591,22592,22593,22594,22595,22597,22598,22599,22600,22601,22602,22603,22606,22607,22608,22610,22611,22613,22614,22615,22617,22618,22619,22620,22621,22623,22624,22625,22626,22627,22628,22630,22631,22632,22633,22634,22637,22638,22639,22640,22641,22642,22643,22644,22645,22646,22647,22648,22649,22650,22651,22652,22653,22655,22658,22660,22662,22663,22664,22666,22667,22668,22669,22670,22671,22672,22673,22676,22677,22678,22679,22680,22683,22684,22685,22688,22689,22690,22691,22692,22693,22694,22695,22698,22699,22700,22701,22702,22703,22704,22705,22706,22707,22708,22709,22710,22711,22712,22713,22714,22715,22717,22718,22719,22720,22722,22723,22724,22726,22727,22728,22729,22730,22731,22732,22733,22734,22735,22736,22738,22739,22740,22742,22743,22744,22745,22746,22747,22748,22749,22750,22751,22752,22753,22754,22755,22757,22758,22759,22760,22761,22762,22765,22767,22769,22770,22772,22773,22775,22776,22778,22779,22780,22781,22782,22783,22784,22785,22787,22789,22790,22792,22793,22794,22795,22796,22798,22800,22801,22802,22803,22807,22808,22811,22813,22814,22816,22817,22818,22819,22822,22824,22828,22832,22834,22835,22837,22838,22843,22845,22846,22847,22848,22851,22853,22854,22858,22860,22861,22864,22866,22867,22873,22875,22876,22877,22878,22879,22881,22883,22884,22886,22887,22888,22889,22890,22891,22892,22893,22894,22895,22896,22897,22898,22901,22903,22906,22907,22908,22910,22911,22912,22917,22921,22923,22924,22926,22927,22928,22929,22932,22933,22936,22938,22939,22940,22941,22943,22944,22945,22946,22950,22951,22956,22957,22960,22961,22963,22964,22965,22966,22967,22968,22970,22972,22973,22975,22976,22977,22978,22979,22980,22981,22983,22984,22985,22988,22989,22990,22991,22997,22998,23001,23003,23006,23007,23008,23009,23010,23012,23014,23015,23017,23018,23019,23021,23022,23023,23024,23025,23026,23027,23028,23029,23030,23031,23032,23034,23036,23037,23038,23040,23042,23050,23051,23053,23054,23055,23056,23058,23060,23061,23062,23063,23065,23066,23067,23069,23070,23073,23074,23076,23078,23079,23080,23082,23083,23084,23085,23086,23087,23088,23091,23093,23095,23096,23097,23098,23099,23101,23102,23103,23105,23106,23107,23108,23109,23111,23112,23115,23116,23117,23118,23119,23120,23121,23122,23123,23124,23126,23127,23128,23129,23131,23132,23133,23134,23135,23136,23137,23139,23140,23141,23142,23144,23145,23147,23148,23149,23150,23151,23152,23153,23154,23155,23160,23161,23163,23164,23165,23166,23168,23169,23170,23171,23172,23173,23174,23175,23176,23177,23178,23179,23180,23181,23182,23183,23184,23185,23187,23188,23189,23190,23191,23192,23193,23196,23197,23198,23199,23200,23201,23202,23203,23204,23205,23206,23207,23208,23209,23211,23212,23213,23214,23215,23216,23217,23220,23222,23223,23225,23226,23227,23228,23229,23231,23232,23235,23236,23237,23238,23239,23240,23242,23243,23245,23246,23247,23248,23249,23251,23253,23255,23257,23258,23259,23261,23262,23263,23266,23268,23269,23271,23272,23274,23276,23277,23278,23279,23280,23282,23283,23284,23285,23286,23287,23288,23289,23290,23291,23292,23293,23294,23295,23296,23297,23298,23299,23300,23301,23302,23303,23304,23306,23307,23308,23309,23310,23311,23312,23313,23314,23315,23316,23317,23320,23321,23322,23323,23324,23325,23326,23327,23328,23329,23330,23331,23332,23333,23334,23335,23336,23337,23338,23339,23340,23341,23342,23343,23344,23345,23347,23349,23350,23352,23353,23354,23355,23356,23357,23358,23359,23361,23362,23363,23364,23365,23366,23367,23368,23369,23370,23371,23372,23373,23374,23375,23378,23382,23390,23392,23393,23399,23400,23403,23405,23406,23407,23410,23412,23414,23415,23416,23417,23419,23420,23422,23423,23426,23430,23434,23437,23438,23440,23441,23442,23444,23446,23455,23463,23464,23465,23468,23469,23470,23471,23473,23474,23479,23482,23483,23484,23488,23489,23491,23496,23497,23498,23499,23501,23502,23503,23505,23508,23509,23510,23511,23512,23513,23514,23515,23516,23520,23522,23523,23526,23527,23529,23530,23531,23532,23533,23535,23537,23538,23539,23540,23541,23542,23543,23549,23550,23552,23554,23555,23557,23559,23560,23563,23564,23565,23566,23568,23570,23571,23575,23577,23579,23582,23583,23584,23585,23587,23590,23592,23593,23594,23595,23597,23598,23599,23600,23602,23603,23605,23606,23607,23619,23620,23622,23623,23628,23629,23634,23635,23636,23638,23639,23640,23642,23643,23644,23645,23647,23650,23652,23655,23656,23657,23658,23659,23660,23661,23664,23666,23667,23668,23669,23670,23671,23672,23675,23676,23677,23678,23680,23683,23684,23685,23686,23687,23689,23690,23691,23694,23695,23698,23699,23701,23709,23710,23711,23712,23713,23716,23717,23718,23719,23720,23722,23726,23727,23728,23730,23732,23734,23737,23738,23739,23740,23742,23744,23746,23747,23749,23750,23751,23752,23753,23754,23756,23757,23758,23759,23760,23761,23763,23764,23765,23766,23767,23768,23770,23771,23772,23773,23774,23775,23776,23778,23779,23783,23785,23787,23788,23790,23791,23793,23794,23795,23796,23797,23798,23799,23800,23801,23802,23804,23805,23806,23807,23808,23809,23812,23813,23816,23817,23818,23819,23820,23821,23823,23824,23825,23826,23827,23829,23831,23832,23833,23834,23836,23837,23839,23840,23841,23842,23843,23845,23848,23850,23851,23852,23855,23856,23857,23858,23859,23861,23862,23863,23864,23865,23866,23867,23868,23871,23872,23873,23874,23875,23876,23877,23878,23880,23881,23885,23886,23887,23888,23889,23890,23891,23892,23893,23894,23895,23897,23898,23900,23902,23903,23904,23905,23906,23907,23908,23909,23910,23911,23912,23914,23917,23918,23920,23921,23922,23923,23925,23926,23927,23928,23929,23930,23931,23932,23933,23934,23935,23936,23937,23939,23940,23941,23942,23943,23944,23945,23946,23947,23948,23949,23950,23951,23952,23953,23954,23955,23956,23957,23958,23959,23960,23962,23963,23964,23966,23967,23968,23969,23970,23971,23972,23973,23974,23975,23976,23977,23978,23979,23980,23981,23982,23983,23984,23985,23986,23987,23988,23989,23990,23992,23993,23994,23995,23996,23997,23998,23999,24e3,24001,24002,24003,24004,24006,24007,24008,24009,24010,24011,24012,24014,24015,24016,24017,24018,24019,24020,24021,24022,24023,24024,24025,24026,24028,24031,24032,24035,24036,24042,24044,24045,24048,24053,24054,24056,24057,24058,24059,24060,24063,24064,24068,24071,24073,24074,24075,24077,24078,24082,24083,24087,24094,24095,24096,24097,24098,24099,24100,24101,24104,24105,24106,24107,24108,24111,24112,24114,24115,24116,24117,24118,24121,24122,24126,24127,24128,24129,24131,24134,24135,24136,24137,24138,24139,24141,24142,24143,24144,24145,24146,24147,24150,24151,24152,24153,24154,24156,24157,24159,24160,24163,24164,24165,24166,24167,24168,24169,24170,24171,24172,24173,24174,24175,24176,24177,24181,24183,24185,24190,24193,24194,24195,24197,24200,24201,24204,24205,24206,24210,24216,24219,24221,24225,24226,24227,24228,24232,24233,24234,24235,24236,24238,24239,24240,24241,24242,24244,24250,24251,24252,24253,24255,24256,24257,24258,24259,24260,24261,24262,24263,24264,24267,24268,24269,24270,24271,24272,24276,24277,24279,24280,24281,24282,24284,24285,24286,24287,24288,24289,24290,24291,24292,24293,24294,24295,24297,24299,24300,24301,24302,24303,24304,24305,24306,24307,24309,24312,24313,24315,24316,24317,24325,24326,24327,24329,24332,24333,24334,24336,24338,24340,24342,24345,24346,24348,24349,24350,24353,24354,24355,24356,24360,24363,24364,24366,24368,24370,24371,24372,24373,24374,24375,24376,24379,24381,24382,24383,24385,24386,24387,24388,24389,24390,24391,24392,24393,24394,24395,24396,24397,24398,24399,24401,24404,24409,24410,24411,24412,24414,24415,24416,24419,24421,24423,24424,24427,24430,24431,24434,24436,24437,24438,24440,24442,24445,24446,24447,24451,24454,24461,24462,24463,24465,24467,24468,24470,24474,24475,24477,24478,24479,24480,24482,24483,24484,24485,24486,24487,24489,24491,24492,24495,24496,24497,24498,24499,24500,24502,24504,24505,24506,24507,24510,24511,24512,24513,24514,24519,24520,24522,24523,24526,24531,24532,24533,24538,24539,24540,24542,24543,24546,24547,24549,24550,24552,24553,24556,24559,24560,24562,24563,24564,24566,24567,24569,24570,24572,24583,24584,24585,24587,24588,24592,24593,24595,24599,24600,24602,24606,24607,24610,24611,24612,24620,24621,24622,24624,24625,24626,24627,24628,24630,24631,24632,24633,24634,24637,24638,24640,24644,24645,24646,24647,24648,24649,24650,24652,24654,24655,24657,24659,24660,24662,24663,24664,24667,24668,24670,24671,24672,24673,24677,24678,24686,24689,24690,24692,24693,24695,24702,24704,24705,24706,24709,24710,24711,24712,24714,24715,24718,24719,24720,24721,24723,24725,24727,24728,24729,24732,24734,24737,24738,24740,24741,24743,24745,24746,24750,24752,24755,24757,24758,24759,24761,24762,24765,24766,24767,24768,24769,24770,24771,24772,24775,24776,24777,24780,24781,24782,24783,24784,24786,24787,24788,24790,24791,24793,24795,24798,24801,24802,24803,24804,24805,24810,24817,24818,24821,24823,24824,24827,24828,24829,24830,24831,24834,24835,24836,24837,24839,24842,24843,24844,24848,24849,24850,24851,24852,24854,24855,24856,24857,24859,24860,24861,24862,24865,24866,24869,24872,24873,24874,24876,24877,24878,24879,24880,24881,24882,24883,24884,24885,24886,24887,24888,24889,24890,24891,24892,24893,24894,24896,24897,24898,24899,24900,24901,24902,24903,24905,24907,24909,24911,24912,24914,24915,24916,24918,24919,24920,24921,24922,24923,24924,24926,24927,24928,24929,24931,24932,24933,24934,24937,24938,24939,24940,24941,24942,24943,24945,24946,24947,24948,24950,24952,24953,24954,24955,24956,24957,24958,24959,24960,24961,24962,24963,24964,24965,24966,24967,24968,24969,24970,24972,24973,24975,24976,24977,24978,24979,24981,24982,24983,24984,24985,24986,24987,24988,24990,24991,24992,24993,24994,24995,24996,24997,24998,25002,25003,25005,25006,25007,25008,25009,25010,25011,25012,25013,25014,25016,25017,25018,25019,25020,25021,25023,25024,25025,25027,25028,25029,25030,25031,25033,25036,25037,25038,25039,25040,25043,25045,25046,25047,25048,25049,25050,25051,25052,25053,25054,25055,25056,25057,25058,25059,25060,25061,25063,25064,25065,25066,25067,25068,25069,25070,25071,25072,25073,25074,25075,25076,25078,25079,25080,25081,25082,25083,25084,25085,25086,25088,25089,25090,25091,25092,25093,25095,25097,25107,25108,25113,25116,25117,25118,25120,25123,25126,25127,25128,25129,25131,25133,25135,25136,25137,25138,25141,25142,25144,25145,25146,25147,25148,25154,25156,25157,25158,25162,25167,25168,25173,25174,25175,25177,25178,25180,25181,25182,25183,25184,25185,25186,25188,25189,25192,25201,25202,25204,25205,25207,25208,25210,25211,25213,25217,25218,25219,25221,25222,25223,25224,25227,25228,25229,25230,25231,25232,25236,25241,25244,25245,25246,25251,25254,25255,25257,25258,25261,25262,25263,25264,25266,25267,25268,25270,25271,25272,25274,25278,25280,25281,25283,25291,25295,25297,25301,25309,25310,25312,25313,25316,25322,25323,25328,25330,25333,25336,25337,25338,25339,25344,25347,25348,25349,25350,25354,25355,25356,25357,25359,25360,25362,25363,25364,25365,25367,25368,25369,25372,25382,25383,25385,25388,25389,25390,25392,25393,25395,25396,25397,25398,25399,25400,25403,25404,25406,25407,25408,25409,25412,25415,25416,25418,25425,25426,25427,25428,25430,25431,25432,25433,25434,25435,25436,25437,25440,25444,25445,25446,25448,25450,25451,25452,25455,25456,25458,25459,25460,25461,25464,25465,25468,25469,25470,25471,25473,25475,25476,25477,25478,25483,25485,25489,25491,25492,25493,25495,25497,25498,25499,25500,25501,25502,25503,25505,25508,25510,25515,25519,25521,25522,25525,25526,25529,25531,25533,25535,25536,25537,25538,25539,25541,25543,25544,25546,25547,25548,25553,25555,25556,25557,25559,25560,25561,25562,25563,25564,25565,25567,25570,25572,25573,25574,25575,25576,25579,25580,25582,25583,25584,25585,25587,25589,25591,25593,25594,25595,25596,25598,25603,25604,25606,25607,25608,25609,25610,25613,25614,25617,25618,25621,25622,25623,25624,25625,25626,25629,25631,25634,25635,25636,25637,25639,25640,25641,25643,25646,25647,25648,25649,25650,25651,25653,25654,25655,25656,25657,25659,25660,25662,25664,25666,25667,25673,25675,25676,25677,25678,25679,25680,25681,25683,25685,25686,25687,25689,25690,25691,25692,25693,25695,25696,25697,25698,25699,25700,25701,25702,25704,25706,25707,25708,25710,25711,25712,25713,25714,25715,25716,25717,25718,25719,25723,25724,25725,25726,25727,25728,25729,25731,25734,25736,25737,25738,25739,25740,25741,25742,25743,25744,25747,25748,25751,25752,25754,25755,25756,25757,25759,25760,25761,25762,25763,25765,25766,25767,25768,25770,25771,25775,25777,25778,25779,25780,25782,25785,25787,25789,25790,25791,25793,25795,25796,25798,25799,25800,25801,25802,25803,25804,25807,25809,25811,25812,25813,25814,25817,25818,25819,25820,25821,25823,25824,25825,25827,25829,25831,25832,25833,25834,25835,25836,25837,25838,25839,25840,25841,25842,25843,25844,25845,25846,25847,25848,25849,25850,25851,25852,25853,25854,25855,25857,25858,25859,25860,25861,25862,25863,25864,25866,25867,25868,25869,25870,25871,25872,25873,25875,25876,25877,25878,25879,25881,25882,25883,25884,25885,25886,25887,25888,25889,25890,25891,25892,25894,25895,25896,25897,25898,25900,25901,25904,25905,25906,25907,25911,25914,25916,25917,25920,25921,25922,25923,25924,25926,25927,25930,25931,25933,25934,25936,25938,25939,25940,25943,25944,25946,25948,25951,25952,25953,25956,25957,25959,25960,25961,25962,25965,25966,25967,25969,25971,25973,25974,25976,25977,25978,25979,25980,25981,25982,25983,25984,25985,25986,25987,25988,25989,25990,25992,25993,25994,25997,25998,25999,26002,26004,26005,26006,26008,26010,26013,26014,26016,26018,26019,26022,26024,26026,26028,26030,26033,26034,26035,26036,26037,26038,26039,26040,26042,26043,26046,26047,26048,26050,26055,26056,26057,26058,26061,26064,26065,26067,26068,26069,26072,26073,26074,26075,26076,26077,26078,26079,26081,26083,26084,26090,26091,26098,26099,26100,26101,26104,26105,26107,26108,26109,26110,26111,26113,26116,26117,26119,26120,26121,26123,26125,26128,26129,26130,26134,26135,26136,26138,26139,26140,26142,26145,26146,26147,26148,26150,26153,26154,26155,26156,26158,26160,26162,26163,26167,26168,26169,26170,26171,26173,26175,26176,26178,26180,26181,26182,26183,26184,26185,26186,26189,26190,26192,26193,26200,26201,26203,26204,26205,26206,26208,26210,26211,26213,26215,26217,26218,26219,26220,26221,26225,26226,26227,26229,26232,26233,26235,26236,26237,26239,26240,26241,26243,26245,26246,26248,26249,26250,26251,26253,26254,26255,26256,26258,26259,26260,26261,26264,26265,26266,26267,26268,26270,26271,26272,26273,26274,26275,26276,26277,26278,26281,26282,26283,26284,26285,26287,26288,26289,26290,26291,26293,26294,26295,26296,26298,26299,26300,26301,26303,26304,26305,26306,26307,26308,26309,26310,26311,26312,26313,26314,26315,26316,26317,26318,26319,26320,26321,26322,26323,26324,26325,26326,26327,26328,26330,26334,26335,26336,26337,26338,26339,26340,26341,26343,26344,26346,26347,26348,26349,26350,26351,26353,26357,26358,26360,26362,26363,26365,26369,26370,26371,26372,26373,26374,26375,26380,26382,26383,26385,26386,26387,26390,26392,26393,26394,26396,26398,26400,26401,26402,26403,26404,26405,26407,26409,26414,26416,26418,26419,26422,26423,26424,26425,26427,26428,26430,26431,26433,26436,26437,26439,26442,26443,26445,26450,26452,26453,26455,26456,26457,26458,26459,26461,26466,26467,26468,26470,26471,26475,26476,26478,26481,26484,26486,26488,26489,26490,26491,26493,26496,26498,26499,26501,26502,26504,26506,26508,26509,26510,26511,26513,26514,26515,26516,26518,26521,26523,26527,26528,26529,26532,26534,26537,26540,26542,26545,26546,26548,26553,26554,26555,26556,26557,26558,26559,26560,26562,26565,26566,26567,26568,26569,26570,26571,26572,26573,26574,26581,26582,26583,26587,26591,26593,26595,26596,26598,26599,26600,26602,26603,26605,26606,26610,26613,26614,26615,26616,26617,26618,26619,26620,26622,26625,26626,26627,26628,26630,26637,26640,26642,26644,26645,26648,26649,26650,26651,26652,26654,26655,26656,26658,26659,26660,26661,26662,26663,26664,26667,26668,26669,26670,26671,26672,26673,26676,26677,26678,26682,26683,26687,26695,26699,26701,26703,26706,26710,26711,26712,26713,26714,26715,26716,26717,26718,26719,26730,26732,26733,26734,26735,26736,26737,26738,26739,26741,26744,26745,26746,26747,26748,26749,26750,26751,26752,26754,26756,26759,26760,26761,26762,26763,26764,26765,26766,26768,26769,26770,26772,26773,26774,26776,26777,26778,26779,26780,26781,26782,26783,26784,26785,26787,26788,26789,26793,26794,26795,26796,26798,26801,26802,26804,26806,26807,26808,26809,26810,26811,26812,26813,26814,26815,26817,26819,26820,26821,26822,26823,26824,26826,26828,26830,26831,26832,26833,26835,26836,26838,26839,26841,26843,26844,26845,26846,26847,26849,26850,26852,26853,26854,26855,26856,26857,26858,26859,26860,26861,26863,26866,26867,26868,26870,26871,26872,26875,26877,26878,26879,26880,26882,26883,26884,26886,26887,26888,26889,26890,26892,26895,26897,26899,26900,26901,26902,26903,26904,26905,26906,26907,26908,26909,26910,26913,26914,26915,26917,26918,26919,26920,26921,26922,26923,26924,26926,26927,26929,26930,26931,26933,26934,26935,26936,26938,26939,26940,26942,26944,26945,26947,26948,26949,26950,26951,26952,26953,26954,26955,26956,26957,26958,26959,26960,26961,26962,26963,26965,26966,26968,26969,26971,26972,26975,26977,26978,26980,26981,26983,26984,26985,26986,26988,26989,26991,26992,26994,26995,26996,26997,26998,27002,27003,27005,27006,27007,27009,27011,27013,27018,27019,27020,27022,27023,27024,27025,27026,27027,27030,27031,27033,27034,27037,27038,27039,27040,27041,27042,27043,27044,27045,27046,27049,27050,27052,27054,27055,27056,27058,27059,27061,27062,27064,27065,27066,27068,27069,27070,27071,27072,27074,27075,27076,27077,27078,27079,27080,27081,27083,27085,27087,27089,27090,27091,27093,27094,27095,27096,27097,27098,27100,27101,27102,27105,27106,27107,27108,27109,27110,27111,27112,27113,27114,27115,27116,27118,27119,27120,27121,27123,27124,27125,27126,27127,27128,27129,27130,27131,27132,27134,27136,27137,27138,27139,27140,27141,27142,27143,27144,27145,27147,27148,27149,27150,27151,27152,27153,27154,27155,27156,27157,27158,27161,27162,27163,27164,27165,27166,27168,27170,27171,27172,27173,27174,27175,27177,27179,27180,27181,27182,27184,27186,27187,27188,27190,27191,27192,27193,27194,27195,27196,27199,27200,27201,27202,27203,27205,27206,27208,27209,27210,27211,27212,27213,27214,27215,27217,27218,27219,27220,27221,27222,27223,27226,27228,27229,27230,27231,27232,27234,27235,27236,27238,27239,27240,27241,27242,27243,27244,27245,27246,27247,27248,27250,27251,27252,27253,27254,27255,27256,27258,27259,27261,27262,27263,27265,27266,27267,27269,27270,27271,27272,27273,27274,27275,27276,27277,27279,27282,27283,27284,27285,27286,27288,27289,27290,27291,27292,27293,27294,27295,27297,27298,27299,27300,27301,27302,27303,27304,27306,27309,27310,27311,27312,27313,27314,27315,27316,27317,27318,27319,27320,27321,27322,27323,27324,27325,27326,27327,27328,27329,27330,27331,27332,27333,27334,27335,27336,27337,27338,27339,27340,27341,27342,27343,27344,27345,27346,27347,27348,27349,27350,27351,27352,27353,27354,27355,27356,27357,27358,27359,27360,27361,27362,27363,27364,27365,27366,27367,27368,27369,27370,27371,27372,27373,27374,27375,27376,27377,27378,27379,27380,27381,27382,27383,27384,27385,27386,27387,27388,27389,27390,27391,27392,27393,27394,27395,27396,27397,27398,27399,27400,27401,27402,27403,27404,27405,27406,27407,27408,27409,27410,27411,27412,27413,27414,27415,27416,27417,27418,27419,27420,27421,27422,27423,27429,27430,27432,27433,27434,27435,27436,27437,27438,27439,27440,27441,27443,27444,27445,27446,27448,27451,27452,27453,27455,27456,27457,27458,27460,27461,27464,27466,27467,27469,27470,27471,27472,27473,27474,27475,27476,27477,27478,27479,27480,27482,27483,27484,27485,27486,27487,27488,27489,27496,27497,27499,27500,27501,27502,27503,27504,27505,27506,27507,27508,27509,27510,27511,27512,27514,27517,27518,27519,27520,27525,27528,27532,27534,27535,27536,27537,27540,27541,27543,27544,27545,27548,27549,27550,27551,27552,27554,27555,27556,27557,27558,27559,27560,27561,27563,27564,27565,27566,27567,27568,27569,27570,27574,27576,27577,27578,27579,27580,27581,27582,27584,27587,27588,27590,27591,27592,27593,27594,27596,27598,27600,27601,27608,27610,27612,27613,27614,27615,27616,27618,27619,27620,27621,27622,27623,27624,27625,27628,27629,27630,27632,27633,27634,27636,27638,27639,27640,27642,27643,27644,27646,27647,27648,27649,27650,27651,27652,27656,27657,27658,27659,27660,27662,27666,27671,27676,27677,27678,27680,27683,27685,27691,27692,27693,27697,27699,27702,27703,27705,27706,27707,27708,27710,27711,27715,27716,27717,27720,27723,27724,27725,27726,27727,27729,27730,27731,27734,27736,27737,27738,27746,27747,27749,27750,27751,27755,27756,27757,27758,27759,27761,27763,27765,27767,27768,27770,27771,27772,27775,27776,27780,27783,27786,27787,27789,27790,27793,27794,27797,27798,27799,27800,27802,27804,27805,27806,27808,27810,27816,27820,27823,27824,27828,27829,27830,27831,27834,27840,27841,27842,27843,27846,27847,27848,27851,27853,27854,27855,27857,27858,27864,27865,27866,27868,27869,27871,27876,27878,27879,27881,27884,27885,27890,27892,27897,27903,27904,27906,27907,27909,27910,27912,27913,27914,27917,27919,27920,27921,27923,27924,27925,27926,27928,27932,27933,27935,27936,27937,27938,27939,27940,27942,27944,27945,27948,27949,27951,27952,27956,27958,27959,27960,27962,27967,27968,27970,27972,27977,27980,27984,27989,27990,27991,27992,27995,27997,27999,28001,28002,28004,28005,28007,28008,28011,28012,28013,28016,28017,28018,28019,28021,28022,28025,28026,28027,28029,28030,28031,28032,28033,28035,28036,28038,28039,28042,28043,28045,28047,28048,28050,28054,28055,28056,28057,28058,28060,28066,28069,28076,28077,28080,28081,28083,28084,28086,28087,28089,28090,28091,28092,28093,28094,28097,28098,28099,28104,28105,28106,28109,28110,28111,28112,28114,28115,28116,28117,28119,28122,28123,28124,28127,28130,28131,28133,28135,28136,28137,28138,28141,28143,28144,28146,28148,28149,28150,28152,28154,28157,28158,28159,28160,28161,28162,28163,28164,28166,28167,28168,28169,28171,28175,28178,28179,28181,28184,28185,28187,28188,28190,28191,28194,28198,28199,28200,28202,28204,28206,28208,28209,28211,28213,28214,28215,28217,28219,28220,28221,28222,28223,28224,28225,28226,28229,28230,28231,28232,28233,28234,28235,28236,28239,28240,28241,28242,28245,28247,28249,28250,28252,28253,28254,28256,28257,28258,28259,28260,28261,28262,28263,28264,28265,28266,28268,28269,28271,28272,28273,28274,28275,28276,28277,28278,28279,28280,28281,28282,28283,28284,28285,28288,28289,28290,28292,28295,28296,28298,28299,28300,28301,28302,28305,28306,28307,28308,28309,28310,28311,28313,28314,28315,28317,28318,28320,28321,28323,28324,28326,28328,28329,28331,28332,28333,28334,28336,28339,28341,28344,28345,28348,28350,28351,28352,28355,28356,28357,28358,28360,28361,28362,28364,28365,28366,28368,28370,28374,28376,28377,28379,28380,28381,28387,28391,28394,28395,28396,28397,28398,28399,28400,28401,28402,28403,28405,28406,28407,28408,28410,28411,28412,28413,28414,28415,28416,28417,28419,28420,28421,28423,28424,28426,28427,28428,28429,28430,28432,28433,28434,28438,28439,28440,28441,28442,28443,28444,28445,28446,28447,28449,28450,28451,28453,28454,28455,28456,28460,28462,28464,28466,28468,28469,28471,28472,28473,28474,28475,28476,28477,28479,28480,28481,28482,28483,28484,28485,28488,28489,28490,28492,28494,28495,28496,28497,28498,28499,28500,28501,28502,28503,28505,28506,28507,28509,28511,28512,28513,28515,28516,28517,28519,28520,28521,28522,28523,28524,28527,28528,28529,28531,28533,28534,28535,28537,28539,28541,28542,28543,28544,28545,28546,28547,28549,28550,28551,28554,28555,28559,28560,28561,28562,28563,28564,28565,28566,28567,28568,28569,28570,28571,28573,28574,28575,28576,28578,28579,28580,28581,28582,28584,28585,28586,28587,28588,28589,28590,28591,28592,28593,28594,28596,28597,28599,28600,28602,28603,28604,28605,28606,28607,28609,28611,28612,28613,28614,28615,28616,28618,28619,28620,28621,28622,28623,28624,28627,28628,28629,28630,28631,28632,28633,28634,28635,28636,28637,28639,28642,28643,28644,28645,28646,28647,28648,28649,28650,28651,28652,28653,28656,28657,28658,28659,28660,28661,28662,28663,28664,28665,28666,28667,28668,28669,28670,28671,28672,28673,28674,28675,28676,28677,28678,28679,28680,28681,28682,28683,28684,28685,28686,28687,28688,28690,28691,28692,28693,28694,28695,28696,28697,28700,28701,28702,28703,28704,28705,28706,28708,28709,28710,28711,28712,28713,28714,28715,28716,28717,28718,28719,28720,28721,28722,28723,28724,28726,28727,28728,28730,28731,28732,28733,28734,28735,28736,28737,28738,28739,28740,28741,28742,28743,28744,28745,28746,28747,28749,28750,28752,28753,28754,28755,28756,28757,28758,28759,28760,28761,28762,28763,28764,28765,28767,28768,28769,28770,28771,28772,28773,28774,28775,28776,28777,28778,28782,28785,28786,28787,28788,28791,28793,28794,28795,28797,28801,28802,28803,28804,28806,28807,28808,28811,28812,28813,28815,28816,28817,28819,28823,28824,28826,28827,28830,28831,28832,28833,28834,28835,28836,28837,28838,28839,28840,28841,28842,28848,28850,28852,28853,28854,28858,28862,28863,28868,28869,28870,28871,28873,28875,28876,28877,28878,28879,28880,28881,28882,28883,28884,28885,28886,28887,28890,28892,28893,28894,28896,28897,28898,28899,28901,28906,28910,28912,28913,28914,28915,28916,28917,28918,28920,28922,28923,28924,28926,28927,28928,28929,28930,28931,28932,28933,28934,28935,28936,28939,28940,28941,28942,28943,28945,28946,28948,28951,28955,28956,28957,28958,28959,28960,28961,28962,28963,28964,28965,28967,28968,28969,28970,28971,28972,28973,28974,28978,28979,28980,28981,28983,28984,28985,28986,28987,28988,28989,28990,28991,28992,28993,28994,28995,28996,28998,28999,29e3,29001,29003,29005,29007,29008,29009,29010,29011,29012,29013,29014,29015,29016,29017,29018,29019,29021,29023,29024,29025,29026,29027,29029,29033,29034,29035,29036,29037,29039,29040,29041,29044,29045,29046,29047,29049,29051,29052,29054,29055,29056,29057,29058,29059,29061,29062,29063,29064,29065,29067,29068,29069,29070,29072,29073,29074,29075,29077,29078,29079,29082,29083,29084,29085,29086,29089,29090,29091,29092,29093,29094,29095,29097,29098,29099,29101,29102,29103,29104,29105,29106,29108,29110,29111,29112,29114,29115,29116,29117,29118,29119,29120,29121,29122,29124,29125,29126,29127,29128,29129,29130,29131,29132,29133,29135,29136,29137,29138,29139,29142,29143,29144,29145,29146,29147,29148,29149,29150,29151,29153,29154,29155,29156,29158,29160,29161,29162,29163,29164,29165,29167,29168,29169,29170,29171,29172,29173,29174,29175,29176,29178,29179,29180,29181,29182,29183,29184,29185,29186,29187,29188,29189,29191,29192,29193,29194,29195,29196,29197,29198,29199,29200,29201,29202,29203,29204,29205,29206,29207,29208,29209,29210,29211,29212,29214,29215,29216,29217,29218,29219,29220,29221,29222,29223,29225,29227,29229,29230,29231,29234,29235,29236,29242,29244,29246,29248,29249,29250,29251,29252,29253,29254,29257,29258,29259,29262,29263,29264,29265,29267,29268,29269,29271,29272,29274,29276,29278,29280,29283,29284,29285,29288,29290,29291,29292,29293,29296,29297,29299,29300,29302,29303,29304,29307,29308,29309,29314,29315,29317,29318,29319,29320,29321,29324,29326,29328,29329,29331,29332,29333,29334,29335,29336,29337,29338,29339,29340,29341,29342,29344,29345,29346,29347,29348,29349,29350,29351,29352,29353,29354,29355,29358,29361,29362,29363,29365,29370,29371,29372,29373,29374,29375,29376,29381,29382,29383,29385,29386,29387,29388,29391,29393,29395,29396,29397,29398,29400,29402,29403,58566,58567,58568,58569,58570,58571,58572,58573,58574,58575,58576,58577,58578,58579,58580,58581,58582,58583,58584,58585,58586,58587,58588,58589,58590,58591,58592,58593,58594,58595,58596,58597,58598,58599,58600,58601,58602,58603,58604,58605,58606,58607,58608,58609,58610,58611,58612,58613,58614,58615,58616,58617,58618,58619,58620,58621,58622,58623,58624,58625,58626,58627,58628,58629,58630,58631,58632,58633,58634,58635,58636,58637,58638,58639,58640,58641,58642,58643,58644,58645,58646,58647,58648,58649,58650,58651,58652,58653,58654,58655,58656,58657,58658,58659,58660,58661,12288,12289,12290,183,713,711,168,12291,12293,8212,65374,8214,8230,8216,8217,8220,8221,12308,12309,12296,12297,12298,12299,12300,12301,12302,12303,12310,12311,12304,12305,177,215,247,8758,8743,8744,8721,8719,8746,8745,8712,8759,8730,8869,8741,8736,8978,8857,8747,8750,8801,8780,8776,8765,8733,8800,8814,8815,8804,8805,8734,8757,8756,9794,9792,176,8242,8243,8451,65284,164,65504,65505,8240,167,8470,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,8251,8594,8592,8593,8595,12307,58662,58663,58664,58665,58666,58667,58668,58669,58670,58671,58672,58673,58674,58675,58676,58677,58678,58679,58680,58681,58682,58683,58684,58685,58686,58687,58688,58689,58690,58691,58692,58693,58694,58695,58696,58697,58698,58699,58700,58701,58702,58703,58704,58705,58706,58707,58708,58709,58710,58711,58712,58713,58714,58715,58716,58717,58718,58719,58720,58721,58722,58723,58724,58725,58726,58727,58728,58729,58730,58731,58732,58733,58734,58735,58736,58737,58738,58739,58740,58741,58742,58743,58744,58745,58746,58747,58748,58749,58750,58751,58752,58753,58754,58755,58756,58757,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,59238,59239,59240,59241,59242,59243,9352,9353,9354,9355,9356,9357,9358,9359,9360,9361,9362,9363,9364,9365,9366,9367,9368,9369,9370,9371,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345,9346,9347,9348,9349,9350,9351,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,8364,59245,12832,12833,12834,12835,12836,12837,12838,12839,12840,12841,59246,59247,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,8554,8555,59248,59249,58758,58759,58760,58761,58762,58763,58764,58765,58766,58767,58768,58769,58770,58771,58772,58773,58774,58775,58776,58777,58778,58779,58780,58781,58782,58783,58784,58785,58786,58787,58788,58789,58790,58791,58792,58793,58794,58795,58796,58797,58798,58799,58800,58801,58802,58803,58804,58805,58806,58807,58808,58809,58810,58811,58812,58813,58814,58815,58816,58817,58818,58819,58820,58821,58822,58823,58824,58825,58826,58827,58828,58829,58830,58831,58832,58833,58834,58835,58836,58837,58838,58839,58840,58841,58842,58843,58844,58845,58846,58847,58848,58849,58850,58851,58852,12288,65281,65282,65283,65509,65285,65286,65287,65288,65289,65290,65291,65292,65293,65294,65295,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,65306,65307,65308,65309,65310,65311,65312,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65339,65340,65341,65342,65343,65344,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,65371,65372,65373,65507,58854,58855,58856,58857,58858,58859,58860,58861,58862,58863,58864,58865,58866,58867,58868,58869,58870,58871,58872,58873,58874,58875,58876,58877,58878,58879,58880,58881,58882,58883,58884,58885,58886,58887,58888,58889,58890,58891,58892,58893,58894,58895,58896,58897,58898,58899,58900,58901,58902,58903,58904,58905,58906,58907,58908,58909,58910,58911,58912,58913,58914,58915,58916,58917,58918,58919,58920,58921,58922,58923,58924,58925,58926,58927,58928,58929,58930,58931,58932,58933,58934,58935,58936,58937,58938,58939,58940,58941,58942,58943,58944,58945,58946,58947,58948,58949,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,59250,59251,59252,59253,59254,59255,59256,59257,59258,59259,59260,58950,58951,58952,58953,58954,58955,58956,58957,58958,58959,58960,58961,58962,58963,58964,58965,58966,58967,58968,58969,58970,58971,58972,58973,58974,58975,58976,58977,58978,58979,58980,58981,58982,58983,58984,58985,58986,58987,58988,58989,58990,58991,58992,58993,58994,58995,58996,58997,58998,58999,59e3,59001,59002,59003,59004,59005,59006,59007,59008,59009,59010,59011,59012,59013,59014,59015,59016,59017,59018,59019,59020,59021,59022,59023,59024,59025,59026,59027,59028,59029,59030,59031,59032,59033,59034,59035,59036,59037,59038,59039,59040,59041,59042,59043,59044,59045,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,59261,59262,59263,59264,59265,59266,59267,59268,59046,59047,59048,59049,59050,59051,59052,59053,59054,59055,59056,59057,59058,59059,59060,59061,59062,59063,59064,59065,59066,59067,59068,59069,59070,59071,59072,59073,59074,59075,59076,59077,59078,59079,59080,59081,59082,59083,59084,59085,59086,59087,59088,59089,59090,59091,59092,59093,59094,59095,59096,59097,59098,59099,59100,59101,59102,59103,59104,59105,59106,59107,59108,59109,59110,59111,59112,59113,59114,59115,59116,59117,59118,59119,59120,59121,59122,59123,59124,59125,59126,59127,59128,59129,59130,59131,59132,59133,59134,59135,59136,59137,59138,59139,59140,59141,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,59269,59270,59271,59272,59273,59274,59275,59276,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,59277,59278,59279,59280,59281,59282,59283,65077,65078,65081,65082,65087,65088,65085,65086,65089,65090,65091,65092,59284,59285,65083,65084,65079,65080,65073,59286,65075,65076,59287,59288,59289,59290,59291,59292,59293,59294,59295,59142,59143,59144,59145,59146,59147,59148,59149,59150,59151,59152,59153,59154,59155,59156,59157,59158,59159,59160,59161,59162,59163,59164,59165,59166,59167,59168,59169,59170,59171,59172,59173,59174,59175,59176,59177,59178,59179,59180,59181,59182,59183,59184,59185,59186,59187,59188,59189,59190,59191,59192,59193,59194,59195,59196,59197,59198,59199,59200,59201,59202,59203,59204,59205,59206,59207,59208,59209,59210,59211,59212,59213,59214,59215,59216,59217,59218,59219,59220,59221,59222,59223,59224,59225,59226,59227,59228,59229,59230,59231,59232,59233,59234,59235,59236,59237,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,59296,59297,59298,59299,59300,59301,59302,59303,59304,59305,59306,59307,59308,59309,59310,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,59311,59312,59313,59314,59315,59316,59317,59318,59319,59320,59321,59322,59323,714,715,729,8211,8213,8229,8245,8453,8457,8598,8599,8600,8601,8725,8735,8739,8786,8806,8807,8895,9552,9553,9554,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,9581,9582,9583,9584,9585,9586,9587,9601,9602,9603,9604,9605,9606,9607,9608,9609,9610,9611,9612,9613,9614,9615,9619,9620,9621,9660,9661,9698,9699,9700,9701,9737,8853,12306,12317,12318,59324,59325,59326,59327,59328,59329,59330,59331,59332,59333,59334,257,225,462,224,275,233,283,232,299,237,464,236,333,243,466,242,363,250,468,249,470,472,474,476,252,234,593,7743,324,328,505,609,59337,59338,59339,59340,12549,12550,12551,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582,12583,12584,12585,59341,59342,59343,59344,59345,59346,59347,59348,59349,59350,59351,59352,59353,59354,59355,59356,59357,59358,59359,59360,59361,12321,12322,12323,12324,12325,12326,12327,12328,12329,12963,13198,13199,13212,13213,13214,13217,13252,13262,13265,13266,13269,65072,65506,65508,59362,8481,12849,59363,8208,59364,59365,59366,12540,12443,12444,12541,12542,12294,12445,12446,65097,65098,65099,65100,65101,65102,65103,65104,65105,65106,65108,65109,65110,65111,65113,65114,65115,65116,65117,65118,65119,65120,65121,65122,65123,65124,65125,65126,65128,65129,65130,65131,12350,12272,12273,12274,12275,12276,12277,12278,12279,12280,12281,12282,12283,12295,59380,59381,59382,59383,59384,59385,59386,59387,59388,59389,59390,59391,59392,9472,9473,9474,9475,9476,9477,9478,9479,9480,9481,9482,9483,9484,9485,9486,9487,9488,9489,9490,9491,9492,9493,9494,9495,9496,9497,9498,9499,9500,9501,9502,9503,9504,9505,9506,9507,9508,9509,9510,9511,9512,9513,9514,9515,9516,9517,9518,9519,9520,9521,9522,9523,9524,9525,9526,9527,9528,9529,9530,9531,9532,9533,9534,9535,9536,9537,9538,9539,9540,9541,9542,9543,9544,9545,9546,9547,59393,59394,59395,59396,59397,59398,59399,59400,59401,59402,59403,59404,59405,59406,59407,29404,29405,29407,29410,29411,29412,29413,29414,29415,29418,29419,29429,29430,29433,29437,29438,29439,29440,29442,29444,29445,29446,29447,29448,29449,29451,29452,29453,29455,29456,29457,29458,29460,29464,29465,29466,29471,29472,29475,29476,29478,29479,29480,29485,29487,29488,29490,29491,29493,29494,29498,29499,29500,29501,29504,29505,29506,29507,29508,29509,29510,29511,29512,29513,29514,29515,29516,29518,29519,29521,29523,29524,29525,29526,29528,29529,29530,29531,29532,29533,29534,29535,29537,29538,29539,29540,29541,29542,29543,29544,29545,29546,29547,29550,29552,29553,57344,57345,57346,57347,57348,57349,57350,57351,57352,57353,57354,57355,57356,57357,57358,57359,57360,57361,57362,57363,57364,57365,57366,57367,57368,57369,57370,57371,57372,57373,57374,57375,57376,57377,57378,57379,57380,57381,57382,57383,57384,57385,57386,57387,57388,57389,57390,57391,57392,57393,57394,57395,57396,57397,57398,57399,57400,57401,57402,57403,57404,57405,57406,57407,57408,57409,57410,57411,57412,57413,57414,57415,57416,57417,57418,57419,57420,57421,57422,57423,57424,57425,57426,57427,57428,57429,57430,57431,57432,57433,57434,57435,57436,57437,29554,29555,29556,29557,29558,29559,29560,29561,29562,29563,29564,29565,29567,29568,29569,29570,29571,29573,29574,29576,29578,29580,29581,29583,29584,29586,29587,29588,29589,29591,29592,29593,29594,29596,29597,29598,29600,29601,29603,29604,29605,29606,29607,29608,29610,29612,29613,29617,29620,29621,29622,29624,29625,29628,29629,29630,29631,29633,29635,29636,29637,29638,29639,29643,29644,29646,29650,29651,29652,29653,29654,29655,29656,29658,29659,29660,29661,29663,29665,29666,29667,29668,29670,29672,29674,29675,29676,29678,29679,29680,29681,29683,29684,29685,29686,29687,57438,57439,57440,57441,57442,57443,57444,57445,57446,57447,57448,57449,57450,57451,57452,57453,57454,57455,57456,57457,57458,57459,57460,57461,57462,57463,57464,57465,57466,57467,57468,57469,57470,57471,57472,57473,57474,57475,57476,57477,57478,57479,57480,57481,57482,57483,57484,57485,57486,57487,57488,57489,57490,57491,57492,57493,57494,57495,57496,57497,57498,57499,57500,57501,57502,57503,57504,57505,57506,57507,57508,57509,57510,57511,57512,57513,57514,57515,57516,57517,57518,57519,57520,57521,57522,57523,57524,57525,57526,57527,57528,57529,57530,57531,29688,29689,29690,29691,29692,29693,29694,29695,29696,29697,29698,29700,29703,29704,29707,29708,29709,29710,29713,29714,29715,29716,29717,29718,29719,29720,29721,29724,29725,29726,29727,29728,29729,29731,29732,29735,29737,29739,29741,29743,29745,29746,29751,29752,29753,29754,29755,29757,29758,29759,29760,29762,29763,29764,29765,29766,29767,29768,29769,29770,29771,29772,29773,29774,29775,29776,29777,29778,29779,29780,29782,29784,29789,29792,29793,29794,29795,29796,29797,29798,29799,29800,29801,29802,29803,29804,29806,29807,29809,29810,29811,29812,29813,29816,29817,29818,57532,57533,57534,57535,57536,57537,57538,57539,57540,57541,57542,57543,57544,57545,57546,57547,57548,57549,57550,57551,57552,57553,57554,57555,57556,57557,57558,57559,57560,57561,57562,57563,57564,57565,57566,57567,57568,57569,57570,57571,57572,57573,57574,57575,57576,57577,57578,57579,57580,57581,57582,57583,57584,57585,57586,57587,57588,57589,57590,57591,57592,57593,57594,57595,57596,57597,57598,57599,57600,57601,57602,57603,57604,57605,57606,57607,57608,57609,57610,57611,57612,57613,57614,57615,57616,57617,57618,57619,57620,57621,57622,57623,57624,57625,29819,29820,29821,29823,29826,29828,29829,29830,29832,29833,29834,29836,29837,29839,29841,29842,29843,29844,29845,29846,29847,29848,29849,29850,29851,29853,29855,29856,29857,29858,29859,29860,29861,29862,29866,29867,29868,29869,29870,29871,29872,29873,29874,29875,29876,29877,29878,29879,29880,29881,29883,29884,29885,29886,29887,29888,29889,29890,29891,29892,29893,29894,29895,29896,29897,29898,29899,29900,29901,29902,29903,29904,29905,29907,29908,29909,29910,29911,29912,29913,29914,29915,29917,29919,29921,29925,29927,29928,29929,29930,29931,29932,29933,29936,29937,29938,57626,57627,57628,57629,57630,57631,57632,57633,57634,57635,57636,57637,57638,57639,57640,57641,57642,57643,57644,57645,57646,57647,57648,57649,57650,57651,57652,57653,57654,57655,57656,57657,57658,57659,57660,57661,57662,57663,57664,57665,57666,57667,57668,57669,57670,57671,57672,57673,57674,57675,57676,57677,57678,57679,57680,57681,57682,57683,57684,57685,57686,57687,57688,57689,57690,57691,57692,57693,57694,57695,57696,57697,57698,57699,57700,57701,57702,57703,57704,57705,57706,57707,57708,57709,57710,57711,57712,57713,57714,57715,57716,57717,57718,57719,29939,29941,29944,29945,29946,29947,29948,29949,29950,29952,29953,29954,29955,29957,29958,29959,29960,29961,29962,29963,29964,29966,29968,29970,29972,29973,29974,29975,29979,29981,29982,29984,29985,29986,29987,29988,29990,29991,29994,29998,30004,30006,30009,30012,30013,30015,30017,30018,30019,30020,30022,30023,30025,30026,30029,30032,30033,30034,30035,30037,30038,30039,30040,30045,30046,30047,30048,30049,30050,30051,30052,30055,30056,30057,30059,30060,30061,30062,30063,30064,30065,30067,30069,30070,30071,30074,30075,30076,30077,30078,30080,30081,30082,30084,30085,30087,57720,57721,57722,57723,57724,57725,57726,57727,57728,57729,57730,57731,57732,57733,57734,57735,57736,57737,57738,57739,57740,57741,57742,57743,57744,57745,57746,57747,57748,57749,57750,57751,57752,57753,57754,57755,57756,57757,57758,57759,57760,57761,57762,57763,57764,57765,57766,57767,57768,57769,57770,57771,57772,57773,57774,57775,57776,57777,57778,57779,57780,57781,57782,57783,57784,57785,57786,57787,57788,57789,57790,57791,57792,57793,57794,57795,57796,57797,57798,57799,57800,57801,57802,57803,57804,57805,57806,57807,57808,57809,57810,57811,57812,57813,30088,30089,30090,30092,30093,30094,30096,30099,30101,30104,30107,30108,30110,30114,30118,30119,30120,30121,30122,30125,30134,30135,30138,30139,30143,30144,30145,30150,30155,30156,30158,30159,30160,30161,30163,30167,30169,30170,30172,30173,30175,30176,30177,30181,30185,30188,30189,30190,30191,30194,30195,30197,30198,30199,30200,30202,30203,30205,30206,30210,30212,30214,30215,30216,30217,30219,30221,30222,30223,30225,30226,30227,30228,30230,30234,30236,30237,30238,30241,30243,30247,30248,30252,30254,30255,30257,30258,30262,30263,30265,30266,30267,30269,30273,30274,30276,57814,57815,57816,57817,57818,57819,57820,57821,57822,57823,57824,57825,57826,57827,57828,57829,57830,57831,57832,57833,57834,57835,57836,57837,57838,57839,57840,57841,57842,57843,57844,57845,57846,57847,57848,57849,57850,57851,57852,57853,57854,57855,57856,57857,57858,57859,57860,57861,57862,57863,57864,57865,57866,57867,57868,57869,57870,57871,57872,57873,57874,57875,57876,57877,57878,57879,57880,57881,57882,57883,57884,57885,57886,57887,57888,57889,57890,57891,57892,57893,57894,57895,57896,57897,57898,57899,57900,57901,57902,57903,57904,57905,57906,57907,30277,30278,30279,30280,30281,30282,30283,30286,30287,30288,30289,30290,30291,30293,30295,30296,30297,30298,30299,30301,30303,30304,30305,30306,30308,30309,30310,30311,30312,30313,30314,30316,30317,30318,30320,30321,30322,30323,30324,30325,30326,30327,30329,30330,30332,30335,30336,30337,30339,30341,30345,30346,30348,30349,30351,30352,30354,30356,30357,30359,30360,30362,30363,30364,30365,30366,30367,30368,30369,30370,30371,30373,30374,30375,30376,30377,30378,30379,30380,30381,30383,30384,30387,30389,30390,30391,30392,30393,30394,30395,30396,30397,30398,30400,30401,30403,21834,38463,22467,25384,21710,21769,21696,30353,30284,34108,30702,33406,30861,29233,38552,38797,27688,23433,20474,25353,26263,23736,33018,26696,32942,26114,30414,20985,25942,29100,32753,34948,20658,22885,25034,28595,33453,25420,25170,21485,21543,31494,20843,30116,24052,25300,36299,38774,25226,32793,22365,38712,32610,29240,30333,26575,30334,25670,20336,36133,25308,31255,26001,29677,25644,25203,33324,39041,26495,29256,25198,25292,20276,29923,21322,21150,32458,37030,24110,26758,27036,33152,32465,26834,30917,34444,38225,20621,35876,33502,32990,21253,35090,21093,30404,30407,30409,30411,30412,30419,30421,30425,30426,30428,30429,30430,30432,30433,30434,30435,30436,30438,30439,30440,30441,30442,30443,30444,30445,30448,30451,30453,30454,30455,30458,30459,30461,30463,30464,30466,30467,30469,30470,30474,30476,30478,30479,30480,30481,30482,30483,30484,30485,30486,30487,30488,30491,30492,30493,30494,30497,30499,30500,30501,30503,30506,30507,30508,30510,30512,30513,30514,30515,30516,30521,30523,30525,30526,30527,30530,30532,30533,30534,30536,30537,30538,30539,30540,30541,30542,30543,30546,30547,30548,30549,30550,30551,30552,30553,30556,34180,38649,20445,22561,39281,23453,25265,25253,26292,35961,40077,29190,26479,30865,24754,21329,21271,36744,32972,36125,38049,20493,29384,22791,24811,28953,34987,22868,33519,26412,31528,23849,32503,29997,27893,36454,36856,36924,40763,27604,37145,31508,24444,30887,34006,34109,27605,27609,27606,24065,24199,30201,38381,25949,24330,24517,36767,22721,33218,36991,38491,38829,36793,32534,36140,25153,20415,21464,21342,36776,36777,36779,36941,26631,24426,33176,34920,40150,24971,21035,30250,24428,25996,28626,28392,23486,25672,20853,20912,26564,19993,31177,39292,28851,30557,30558,30559,30560,30564,30567,30569,30570,30573,30574,30575,30576,30577,30578,30579,30580,30581,30582,30583,30584,30586,30587,30588,30593,30594,30595,30598,30599,30600,30601,30602,30603,30607,30608,30611,30612,30613,30614,30615,30616,30617,30618,30619,30620,30621,30622,30625,30627,30628,30630,30632,30635,30637,30638,30639,30641,30642,30644,30646,30647,30648,30649,30650,30652,30654,30656,30657,30658,30659,30660,30661,30662,30663,30664,30665,30666,30667,30668,30670,30671,30672,30673,30674,30675,30676,30677,30678,30680,30681,30682,30685,30686,30687,30688,30689,30692,30149,24182,29627,33760,25773,25320,38069,27874,21338,21187,25615,38082,31636,20271,24091,33334,33046,33162,28196,27850,39539,25429,21340,21754,34917,22496,19981,24067,27493,31807,37096,24598,25830,29468,35009,26448,25165,36130,30572,36393,37319,24425,33756,34081,39184,21442,34453,27531,24813,24808,28799,33485,33329,20179,27815,34255,25805,31961,27133,26361,33609,21397,31574,20391,20876,27979,23618,36461,25554,21449,33580,33590,26597,30900,25661,23519,23700,24046,35815,25286,26612,35962,25600,25530,34633,39307,35863,32544,38130,20135,38416,39076,26124,29462,30694,30696,30698,30703,30704,30705,30706,30708,30709,30711,30713,30714,30715,30716,30723,30724,30725,30726,30727,30728,30730,30731,30734,30735,30736,30739,30741,30745,30747,30750,30752,30753,30754,30756,30760,30762,30763,30766,30767,30769,30770,30771,30773,30774,30781,30783,30785,30786,30787,30788,30790,30792,30793,30794,30795,30797,30799,30801,30803,30804,30808,30809,30810,30811,30812,30814,30815,30816,30817,30818,30819,30820,30821,30822,30823,30824,30825,30831,30832,30833,30834,30835,30836,30837,30838,30840,30841,30842,30843,30845,30846,30847,30848,30849,30850,30851,22330,23581,24120,38271,20607,32928,21378,25950,30021,21809,20513,36229,25220,38046,26397,22066,28526,24034,21557,28818,36710,25199,25764,25507,24443,28552,37108,33251,36784,23576,26216,24561,27785,38472,36225,34924,25745,31216,22478,27225,25104,21576,20056,31243,24809,28548,35802,25215,36894,39563,31204,21507,30196,25345,21273,27744,36831,24347,39536,32827,40831,20360,23610,36196,32709,26021,28861,20805,20914,34411,23815,23456,25277,37228,30068,36364,31264,24833,31609,20167,32504,30597,19985,33261,21021,20986,27249,21416,36487,38148,38607,28353,38500,26970,30852,30853,30854,30856,30858,30859,30863,30864,30866,30868,30869,30870,30873,30877,30878,30880,30882,30884,30886,30888,30889,30890,30891,30892,30893,30894,30895,30901,30902,30903,30904,30906,30907,30908,30909,30911,30912,30914,30915,30916,30918,30919,30920,30924,30925,30926,30927,30929,30930,30931,30934,30935,30936,30938,30939,30940,30941,30942,30943,30944,30945,30946,30947,30948,30949,30950,30951,30953,30954,30955,30957,30958,30959,30960,30961,30963,30965,30966,30968,30969,30971,30972,30973,30974,30975,30976,30978,30979,30980,30982,30983,30984,30985,30986,30987,30988,30784,20648,30679,25616,35302,22788,25571,24029,31359,26941,20256,33337,21912,20018,30126,31383,24162,24202,38383,21019,21561,28810,25462,38180,22402,26149,26943,37255,21767,28147,32431,34850,25139,32496,30133,33576,30913,38604,36766,24904,29943,35789,27492,21050,36176,27425,32874,33905,22257,21254,20174,19995,20945,31895,37259,31751,20419,36479,31713,31388,25703,23828,20652,33030,30209,31929,28140,32736,26449,23384,23544,30923,25774,25619,25514,25387,38169,25645,36798,31572,30249,25171,22823,21574,27513,20643,25140,24102,27526,20195,36151,34955,24453,36910,30989,30990,30991,30992,30993,30994,30996,30997,30998,30999,31e3,31001,31002,31003,31004,31005,31007,31008,31009,31010,31011,31013,31014,31015,31016,31017,31018,31019,31020,31021,31022,31023,31024,31025,31026,31027,31029,31030,31031,31032,31033,31037,31039,31042,31043,31044,31045,31047,31050,31051,31052,31053,31054,31055,31056,31057,31058,31060,31061,31064,31065,31073,31075,31076,31078,31081,31082,31083,31084,31086,31088,31089,31090,31091,31092,31093,31094,31097,31099,31100,31101,31102,31103,31106,31107,31110,31111,31112,31113,31115,31116,31117,31118,31120,31121,31122,24608,32829,25285,20025,21333,37112,25528,32966,26086,27694,20294,24814,28129,35806,24377,34507,24403,25377,20826,33633,26723,20992,25443,36424,20498,23707,31095,23548,21040,31291,24764,36947,30423,24503,24471,30340,36460,28783,30331,31561,30634,20979,37011,22564,20302,28404,36842,25932,31515,29380,28068,32735,23265,25269,24213,22320,33922,31532,24093,24351,36882,32532,39072,25474,28359,30872,28857,20856,38747,22443,30005,20291,30008,24215,24806,22880,28096,27583,30857,21500,38613,20939,20993,25481,21514,38035,35843,36300,29241,30879,34678,36845,35853,21472,31123,31124,31125,31126,31127,31128,31129,31131,31132,31133,31134,31135,31136,31137,31138,31139,31140,31141,31142,31144,31145,31146,31147,31148,31149,31150,31151,31152,31153,31154,31156,31157,31158,31159,31160,31164,31167,31170,31172,31173,31175,31176,31178,31180,31182,31183,31184,31187,31188,31190,31191,31193,31194,31195,31196,31197,31198,31200,31201,31202,31205,31208,31210,31212,31214,31217,31218,31219,31220,31221,31222,31223,31225,31226,31228,31230,31231,31233,31236,31237,31239,31240,31241,31242,31244,31247,31248,31249,31250,31251,31253,31254,31256,31257,31259,31260,19969,30447,21486,38025,39030,40718,38189,23450,35746,20002,19996,20908,33891,25026,21160,26635,20375,24683,20923,27934,20828,25238,26007,38497,35910,36887,30168,37117,30563,27602,29322,29420,35835,22581,30585,36172,26460,38208,32922,24230,28193,22930,31471,30701,38203,27573,26029,32526,22534,20817,38431,23545,22697,21544,36466,25958,39039,22244,38045,30462,36929,25479,21702,22810,22842,22427,36530,26421,36346,33333,21057,24816,22549,34558,23784,40517,20420,39069,35769,23077,24694,21380,25212,36943,37122,39295,24681,32780,20799,32819,23572,39285,27953,20108,31261,31263,31265,31266,31268,31269,31270,31271,31272,31273,31274,31275,31276,31277,31278,31279,31280,31281,31282,31284,31285,31286,31288,31290,31294,31296,31297,31298,31299,31300,31301,31303,31304,31305,31306,31307,31308,31309,31310,31311,31312,31314,31315,31316,31317,31318,31320,31321,31322,31323,31324,31325,31326,31327,31328,31329,31330,31331,31332,31333,31334,31335,31336,31337,31338,31339,31340,31341,31342,31343,31345,31346,31347,31349,31355,31356,31357,31358,31362,31365,31367,31369,31370,31371,31372,31374,31375,31376,31379,31380,31385,31386,31387,31390,31393,31394,36144,21457,32602,31567,20240,20047,38400,27861,29648,34281,24070,30058,32763,27146,30718,38034,32321,20961,28902,21453,36820,33539,36137,29359,39277,27867,22346,33459,26041,32938,25151,38450,22952,20223,35775,32442,25918,33778,38750,21857,39134,32933,21290,35837,21536,32954,24223,27832,36153,33452,37210,21545,27675,20998,32439,22367,28954,27774,31881,22859,20221,24575,24868,31914,20016,23553,26539,34562,23792,38155,39118,30127,28925,36898,20911,32541,35773,22857,20964,20315,21542,22827,25975,32932,23413,25206,25282,36752,24133,27679,31526,20239,20440,26381,31395,31396,31399,31401,31402,31403,31406,31407,31408,31409,31410,31412,31413,31414,31415,31416,31417,31418,31419,31420,31421,31422,31424,31425,31426,31427,31428,31429,31430,31431,31432,31433,31434,31436,31437,31438,31439,31440,31441,31442,31443,31444,31445,31447,31448,31450,31451,31452,31453,31457,31458,31460,31463,31464,31465,31466,31467,31468,31470,31472,31473,31474,31475,31476,31477,31478,31479,31480,31483,31484,31486,31488,31489,31490,31493,31495,31497,31500,31501,31502,31504,31506,31507,31510,31511,31512,31514,31516,31517,31519,31521,31522,31523,31527,31529,31533,28014,28074,31119,34993,24343,29995,25242,36741,20463,37340,26023,33071,33105,24220,33104,36212,21103,35206,36171,22797,20613,20184,38428,29238,33145,36127,23500,35747,38468,22919,32538,21648,22134,22030,35813,25913,27010,38041,30422,28297,24178,29976,26438,26577,31487,32925,36214,24863,31174,25954,36195,20872,21018,38050,32568,32923,32434,23703,28207,26464,31705,30347,39640,33167,32660,31957,25630,38224,31295,21578,21733,27468,25601,25096,40509,33011,30105,21106,38761,33883,26684,34532,38401,38548,38124,20010,21508,32473,26681,36319,32789,26356,24218,32697,31535,31536,31538,31540,31541,31542,31543,31545,31547,31549,31551,31552,31553,31554,31555,31556,31558,31560,31562,31565,31566,31571,31573,31575,31577,31580,31582,31583,31585,31587,31588,31589,31590,31591,31592,31593,31594,31595,31596,31597,31599,31600,31603,31604,31606,31608,31610,31612,31613,31615,31617,31618,31619,31620,31622,31623,31624,31625,31626,31627,31628,31630,31631,31633,31634,31635,31638,31640,31641,31642,31643,31646,31647,31648,31651,31652,31653,31662,31663,31664,31666,31667,31669,31670,31671,31673,31674,31675,31676,31677,31678,31679,31680,31682,31683,31684,22466,32831,26775,24037,25915,21151,24685,40858,20379,36524,20844,23467,24339,24041,27742,25329,36129,20849,38057,21246,27807,33503,29399,22434,26500,36141,22815,36764,33735,21653,31629,20272,27837,23396,22993,40723,21476,34506,39592,35895,32929,25925,39038,22266,38599,21038,29916,21072,23521,25346,35074,20054,25296,24618,26874,20851,23448,20896,35266,31649,39302,32592,24815,28748,36143,20809,24191,36891,29808,35268,22317,30789,24402,40863,38394,36712,39740,35809,30328,26690,26588,36330,36149,21053,36746,28378,26829,38149,37101,22269,26524,35065,36807,21704,31685,31688,31689,31690,31691,31693,31694,31695,31696,31698,31700,31701,31702,31703,31704,31707,31708,31710,31711,31712,31714,31715,31716,31719,31720,31721,31723,31724,31725,31727,31728,31730,31731,31732,31733,31734,31736,31737,31738,31739,31741,31743,31744,31745,31746,31747,31748,31749,31750,31752,31753,31754,31757,31758,31760,31761,31762,31763,31764,31765,31767,31768,31769,31770,31771,31772,31773,31774,31776,31777,31778,31779,31780,31781,31784,31785,31787,31788,31789,31790,31791,31792,31793,31794,31795,31796,31797,31798,31799,31801,31802,31803,31804,31805,31806,31810,39608,23401,28023,27686,20133,23475,39559,37219,25e3,37039,38889,21547,28085,23506,20989,21898,32597,32752,25788,25421,26097,25022,24717,28938,27735,27721,22831,26477,33322,22741,22158,35946,27627,37085,22909,32791,21495,28009,21621,21917,33655,33743,26680,31166,21644,20309,21512,30418,35977,38402,27827,28088,36203,35088,40548,36154,22079,40657,30165,24456,29408,24680,21756,20136,27178,34913,24658,36720,21700,28888,34425,40511,27946,23439,24344,32418,21897,20399,29492,21564,21402,20505,21518,21628,20046,24573,29786,22774,33899,32993,34676,29392,31946,28246,31811,31812,31813,31814,31815,31816,31817,31818,31819,31820,31822,31823,31824,31825,31826,31827,31828,31829,31830,31831,31832,31833,31834,31835,31836,31837,31838,31839,31840,31841,31842,31843,31844,31845,31846,31847,31848,31849,31850,31851,31852,31853,31854,31855,31856,31857,31858,31861,31862,31863,31864,31865,31866,31870,31871,31872,31873,31874,31875,31876,31877,31878,31879,31880,31882,31883,31884,31885,31886,31887,31888,31891,31892,31894,31897,31898,31899,31904,31905,31907,31910,31911,31912,31913,31915,31916,31917,31919,31920,31924,31925,31926,31927,31928,31930,31931,24359,34382,21804,25252,20114,27818,25143,33457,21719,21326,29502,28369,30011,21010,21270,35805,27088,24458,24576,28142,22351,27426,29615,26707,36824,32531,25442,24739,21796,30186,35938,28949,28067,23462,24187,33618,24908,40644,30970,34647,31783,30343,20976,24822,29004,26179,24140,24653,35854,28784,25381,36745,24509,24674,34516,22238,27585,24724,24935,21321,24800,26214,36159,31229,20250,28905,27719,35763,35826,32472,33636,26127,23130,39746,27985,28151,35905,27963,20249,28779,33719,25110,24785,38669,36135,31096,20987,22334,22522,26426,30072,31293,31215,31637,31935,31936,31938,31939,31940,31942,31945,31947,31950,31951,31952,31953,31954,31955,31956,31960,31962,31963,31965,31966,31969,31970,31971,31972,31973,31974,31975,31977,31978,31979,31980,31981,31982,31984,31985,31986,31987,31988,31989,31990,31991,31993,31994,31996,31997,31998,31999,32e3,32001,32002,32003,32004,32005,32006,32007,32008,32009,32011,32012,32013,32014,32015,32016,32017,32018,32019,32020,32021,32022,32023,32024,32025,32026,32027,32028,32029,32030,32031,32033,32035,32036,32037,32038,32040,32041,32042,32044,32045,32046,32048,32049,32050,32051,32052,32053,32054,32908,39269,36857,28608,35749,40481,23020,32489,32521,21513,26497,26840,36753,31821,38598,21450,24613,30142,27762,21363,23241,32423,25380,20960,33034,24049,34015,25216,20864,23395,20238,31085,21058,24760,27982,23492,23490,35745,35760,26082,24524,38469,22931,32487,32426,22025,26551,22841,20339,23478,21152,33626,39050,36158,30002,38078,20551,31292,20215,26550,39550,23233,27516,30417,22362,23574,31546,38388,29006,20860,32937,33392,22904,32516,33575,26816,26604,30897,30839,25315,25441,31616,20461,21098,20943,33616,27099,37492,36341,36145,35265,38190,31661,20214,32055,32056,32057,32058,32059,32060,32061,32062,32063,32064,32065,32066,32067,32068,32069,32070,32071,32072,32073,32074,32075,32076,32077,32078,32079,32080,32081,32082,32083,32084,32085,32086,32087,32088,32089,32090,32091,32092,32093,32094,32095,32096,32097,32098,32099,32100,32101,32102,32103,32104,32105,32106,32107,32108,32109,32111,32112,32113,32114,32115,32116,32117,32118,32120,32121,32122,32123,32124,32125,32126,32127,32128,32129,32130,32131,32132,32133,32134,32135,32136,32137,32138,32139,32140,32141,32142,32143,32144,32145,32146,32147,32148,32149,32150,32151,32152,20581,33328,21073,39279,28176,28293,28071,24314,20725,23004,23558,27974,27743,30086,33931,26728,22870,35762,21280,37233,38477,34121,26898,30977,28966,33014,20132,37066,27975,39556,23047,22204,25605,38128,30699,20389,33050,29409,35282,39290,32564,32478,21119,25945,37237,36735,36739,21483,31382,25581,25509,30342,31224,34903,38454,25130,21163,33410,26708,26480,25463,30571,31469,27905,32467,35299,22992,25106,34249,33445,30028,20511,20171,30117,35819,23626,24062,31563,26020,37329,20170,27941,35167,32039,38182,20165,35880,36827,38771,26187,31105,36817,28908,28024,32153,32154,32155,32156,32157,32158,32159,32160,32161,32162,32163,32164,32165,32167,32168,32169,32170,32171,32172,32173,32175,32176,32177,32178,32179,32180,32181,32182,32183,32184,32185,32186,32187,32188,32189,32190,32191,32192,32193,32194,32195,32196,32197,32198,32199,32200,32201,32202,32203,32204,32205,32206,32207,32208,32209,32210,32211,32212,32213,32214,32215,32216,32217,32218,32219,32220,32221,32222,32223,32224,32225,32226,32227,32228,32229,32230,32231,32232,32233,32234,32235,32236,32237,32238,32239,32240,32241,32242,32243,32244,32245,32246,32247,32248,32249,32250,23613,21170,33606,20834,33550,30555,26230,40120,20140,24778,31934,31923,32463,20117,35686,26223,39048,38745,22659,25964,38236,24452,30153,38742,31455,31454,20928,28847,31384,25578,31350,32416,29590,38893,20037,28792,20061,37202,21417,25937,26087,33276,33285,21646,23601,30106,38816,25304,29401,30141,23621,39545,33738,23616,21632,30697,20030,27822,32858,25298,25454,24040,20855,36317,36382,38191,20465,21477,24807,28844,21095,25424,40515,23071,20518,30519,21367,32482,25733,25899,25225,25496,20500,29237,35273,20915,35776,32477,22343,33740,38055,20891,21531,23803,32251,32252,32253,32254,32255,32256,32257,32258,32259,32260,32261,32262,32263,32264,32265,32266,32267,32268,32269,32270,32271,32272,32273,32274,32275,32276,32277,32278,32279,32280,32281,32282,32283,32284,32285,32286,32287,32288,32289,32290,32291,32292,32293,32294,32295,32296,32297,32298,32299,32300,32301,32302,32303,32304,32305,32306,32307,32308,32309,32310,32311,32312,32313,32314,32316,32317,32318,32319,32320,32322,32323,32324,32325,32326,32328,32329,32330,32331,32332,32333,32334,32335,32336,32337,32338,32339,32340,32341,32342,32343,32344,32345,32346,32347,32348,32349,20426,31459,27994,37089,39567,21888,21654,21345,21679,24320,25577,26999,20975,24936,21002,22570,21208,22350,30733,30475,24247,24951,31968,25179,25239,20130,28821,32771,25335,28900,38752,22391,33499,26607,26869,30933,39063,31185,22771,21683,21487,28212,20811,21051,23458,35838,32943,21827,22438,24691,22353,21549,31354,24656,23380,25511,25248,21475,25187,23495,26543,21741,31391,33510,37239,24211,35044,22840,22446,25358,36328,33007,22359,31607,20393,24555,23485,27454,21281,31568,29378,26694,30719,30518,26103,20917,20111,30420,23743,31397,33909,22862,39745,20608,32350,32351,32352,32353,32354,32355,32356,32357,32358,32359,32360,32361,32362,32363,32364,32365,32366,32367,32368,32369,32370,32371,32372,32373,32374,32375,32376,32377,32378,32379,32380,32381,32382,32383,32384,32385,32387,32388,32389,32390,32391,32392,32393,32394,32395,32396,32397,32398,32399,32400,32401,32402,32403,32404,32405,32406,32407,32408,32409,32410,32412,32413,32414,32430,32436,32443,32444,32470,32484,32492,32505,32522,32528,32542,32567,32569,32571,32572,32573,32574,32575,32576,32577,32579,32582,32583,32584,32585,32586,32587,32588,32589,32590,32591,32594,32595,39304,24871,28291,22372,26118,25414,22256,25324,25193,24275,38420,22403,25289,21895,34593,33098,36771,21862,33713,26469,36182,34013,23146,26639,25318,31726,38417,20848,28572,35888,25597,35272,25042,32518,28866,28389,29701,27028,29436,24266,37070,26391,28010,25438,21171,29282,32769,20332,23013,37226,28889,28061,21202,20048,38647,38253,34174,30922,32047,20769,22418,25794,32907,31867,27882,26865,26974,20919,21400,26792,29313,40654,31729,29432,31163,28435,29702,26446,37324,40100,31036,33673,33620,21519,26647,20029,21385,21169,30782,21382,21033,20616,20363,20432,32598,32601,32603,32604,32605,32606,32608,32611,32612,32613,32614,32615,32619,32620,32621,32623,32624,32627,32629,32630,32631,32632,32634,32635,32636,32637,32639,32640,32642,32643,32644,32645,32646,32647,32648,32649,32651,32653,32655,32656,32657,32658,32659,32661,32662,32663,32664,32665,32667,32668,32672,32674,32675,32677,32678,32680,32681,32682,32683,32684,32685,32686,32689,32691,32692,32693,32694,32695,32698,32699,32702,32704,32706,32707,32708,32710,32711,32712,32713,32715,32717,32719,32720,32721,32722,32723,32726,32727,32729,32730,32731,32732,32733,32734,32738,32739,30178,31435,31890,27813,38582,21147,29827,21737,20457,32852,33714,36830,38256,24265,24604,28063,24088,25947,33080,38142,24651,28860,32451,31918,20937,26753,31921,33391,20004,36742,37327,26238,20142,35845,25769,32842,20698,30103,29134,23525,36797,28518,20102,25730,38243,24278,26009,21015,35010,28872,21155,29454,29747,26519,30967,38678,20020,37051,40158,28107,20955,36161,21533,25294,29618,33777,38646,40836,38083,20278,32666,20940,28789,38517,23725,39046,21478,20196,28316,29705,27060,30827,39311,30041,21016,30244,27969,26611,20845,40857,32843,21657,31548,31423,32740,32743,32744,32746,32747,32748,32749,32751,32754,32756,32757,32758,32759,32760,32761,32762,32765,32766,32767,32770,32775,32776,32777,32778,32782,32783,32785,32787,32794,32795,32797,32798,32799,32801,32803,32804,32811,32812,32813,32814,32815,32816,32818,32820,32825,32826,32828,32830,32832,32833,32836,32837,32839,32840,32841,32846,32847,32848,32849,32851,32853,32854,32855,32857,32859,32860,32861,32862,32863,32864,32865,32866,32867,32868,32869,32870,32871,32872,32875,32876,32877,32878,32879,32880,32882,32883,32884,32885,32886,32887,32888,32889,32890,32891,32892,32893,38534,22404,25314,38471,27004,23044,25602,31699,28431,38475,33446,21346,39045,24208,28809,25523,21348,34383,40065,40595,30860,38706,36335,36162,40575,28510,31108,24405,38470,25134,39540,21525,38109,20387,26053,23653,23649,32533,34385,27695,24459,29575,28388,32511,23782,25371,23402,28390,21365,20081,25504,30053,25249,36718,20262,20177,27814,32438,35770,33821,34746,32599,36923,38179,31657,39585,35064,33853,27931,39558,32476,22920,40635,29595,30721,34434,39532,39554,22043,21527,22475,20080,40614,21334,36808,33033,30610,39314,34542,28385,34067,26364,24930,28459,32894,32897,32898,32901,32904,32906,32909,32910,32911,32912,32913,32914,32916,32917,32919,32921,32926,32931,32934,32935,32936,32940,32944,32947,32949,32950,32952,32953,32955,32965,32967,32968,32969,32970,32971,32975,32976,32977,32978,32979,32980,32981,32984,32991,32992,32994,32995,32998,33006,33013,33015,33017,33019,33022,33023,33024,33025,33027,33028,33029,33031,33032,33035,33036,33045,33047,33049,33051,33052,33053,33055,33056,33057,33058,33059,33060,33061,33062,33063,33064,33065,33066,33067,33069,33070,33072,33075,33076,33077,33079,33081,33082,33083,33084,33085,33087,35881,33426,33579,30450,27667,24537,33725,29483,33541,38170,27611,30683,38086,21359,33538,20882,24125,35980,36152,20040,29611,26522,26757,37238,38665,29028,27809,30473,23186,38209,27599,32654,26151,23504,22969,23194,38376,38391,20204,33804,33945,27308,30431,38192,29467,26790,23391,30511,37274,38753,31964,36855,35868,24357,31859,31192,35269,27852,34588,23494,24130,26825,30496,32501,20885,20813,21193,23081,32517,38754,33495,25551,30596,34256,31186,28218,24217,22937,34065,28781,27665,25279,30399,25935,24751,38397,26126,34719,40483,38125,21517,21629,35884,25720,33088,33089,33090,33091,33092,33093,33095,33097,33101,33102,33103,33106,33110,33111,33112,33115,33116,33117,33118,33119,33121,33122,33123,33124,33126,33128,33130,33131,33132,33135,33138,33139,33141,33142,33143,33144,33153,33155,33156,33157,33158,33159,33161,33163,33164,33165,33166,33168,33170,33171,33172,33173,33174,33175,33177,33178,33182,33183,33184,33185,33186,33188,33189,33191,33193,33195,33196,33197,33198,33199,33200,33201,33202,33204,33205,33206,33207,33208,33209,33212,33213,33214,33215,33220,33221,33223,33224,33225,33227,33229,33230,33231,33232,33233,33234,33235,25721,34321,27169,33180,30952,25705,39764,25273,26411,33707,22696,40664,27819,28448,23518,38476,35851,29279,26576,25287,29281,20137,22982,27597,22675,26286,24149,21215,24917,26408,30446,30566,29287,31302,25343,21738,21584,38048,37027,23068,32435,27670,20035,22902,32784,22856,21335,30007,38590,22218,25376,33041,24700,38393,28118,21602,39297,20869,23273,33021,22958,38675,20522,27877,23612,25311,20320,21311,33147,36870,28346,34091,25288,24180,30910,25781,25467,24565,23064,37247,40479,23615,25423,32834,23421,21870,38218,38221,28037,24744,26592,29406,20957,23425,33236,33237,33238,33239,33240,33241,33242,33243,33244,33245,33246,33247,33248,33249,33250,33252,33253,33254,33256,33257,33259,33262,33263,33264,33265,33266,33269,33270,33271,33272,33273,33274,33277,33279,33283,33287,33288,33289,33290,33291,33294,33295,33297,33299,33301,33302,33303,33304,33305,33306,33309,33312,33316,33317,33318,33319,33321,33326,33330,33338,33340,33341,33343,33344,33345,33346,33347,33349,33350,33352,33354,33356,33357,33358,33360,33361,33362,33363,33364,33365,33366,33367,33369,33371,33372,33373,33374,33376,33377,33378,33379,33380,33381,33382,33383,33385,25319,27870,29275,25197,38062,32445,33043,27987,20892,24324,22900,21162,24594,22899,26262,34384,30111,25386,25062,31983,35834,21734,27431,40485,27572,34261,21589,20598,27812,21866,36276,29228,24085,24597,29750,25293,25490,29260,24472,28227,27966,25856,28504,30424,30928,30460,30036,21028,21467,20051,24222,26049,32810,32982,25243,21638,21032,28846,34957,36305,27873,21624,32986,22521,35060,36180,38506,37197,20329,27803,21943,30406,30768,25256,28921,28558,24429,34028,26842,30844,31735,33192,26379,40527,25447,30896,22383,30738,38713,25209,25259,21128,29749,27607,33386,33387,33388,33389,33393,33397,33398,33399,33400,33403,33404,33408,33409,33411,33413,33414,33415,33417,33420,33424,33427,33428,33429,33430,33434,33435,33438,33440,33442,33443,33447,33458,33461,33462,33466,33467,33468,33471,33472,33474,33475,33477,33478,33481,33488,33494,33497,33498,33501,33506,33511,33512,33513,33514,33516,33517,33518,33520,33522,33523,33525,33526,33528,33530,33532,33533,33534,33535,33536,33546,33547,33549,33552,33554,33555,33558,33560,33561,33565,33566,33567,33568,33569,33570,33571,33572,33573,33574,33577,33578,33582,33584,33586,33591,33595,33597,21860,33086,30130,30382,21305,30174,20731,23617,35692,31687,20559,29255,39575,39128,28418,29922,31080,25735,30629,25340,39057,36139,21697,32856,20050,22378,33529,33805,24179,20973,29942,35780,23631,22369,27900,39047,23110,30772,39748,36843,31893,21078,25169,38138,20166,33670,33889,33769,33970,22484,26420,22275,26222,28006,35889,26333,28689,26399,27450,26646,25114,22971,19971,20932,28422,26578,27791,20854,26827,22855,27495,30054,23822,33040,40784,26071,31048,31041,39569,36215,23682,20062,20225,21551,22865,30732,22120,27668,36804,24323,27773,27875,35755,25488,33598,33599,33601,33602,33604,33605,33608,33610,33611,33612,33613,33614,33619,33621,33622,33623,33624,33625,33629,33634,33648,33649,33650,33651,33652,33653,33654,33657,33658,33662,33663,33664,33665,33666,33667,33668,33671,33672,33674,33675,33676,33677,33679,33680,33681,33684,33685,33686,33687,33689,33690,33693,33695,33697,33698,33699,33700,33701,33702,33703,33708,33709,33710,33711,33717,33723,33726,33727,33730,33731,33732,33734,33736,33737,33739,33741,33742,33744,33745,33746,33747,33749,33751,33753,33754,33755,33758,33762,33763,33764,33766,33767,33768,33771,33772,33773,24688,27965,29301,25190,38030,38085,21315,36801,31614,20191,35878,20094,40660,38065,38067,21069,28508,36963,27973,35892,22545,23884,27424,27465,26538,21595,33108,32652,22681,34103,24378,25250,27207,38201,25970,24708,26725,30631,20052,20392,24039,38808,25772,32728,23789,20431,31373,20999,33540,19988,24623,31363,38054,20405,20146,31206,29748,21220,33465,25810,31165,23517,27777,38738,36731,27682,20542,21375,28165,25806,26228,27696,24773,39031,35831,24198,29756,31351,31179,19992,37041,29699,27714,22234,37195,27845,36235,21306,34502,26354,36527,23624,39537,28192,33774,33775,33779,33780,33781,33782,33783,33786,33787,33788,33790,33791,33792,33794,33797,33799,33800,33801,33802,33808,33810,33811,33812,33813,33814,33815,33817,33818,33819,33822,33823,33824,33825,33826,33827,33833,33834,33835,33836,33837,33838,33839,33840,33842,33843,33844,33845,33846,33847,33849,33850,33851,33854,33855,33856,33857,33858,33859,33860,33861,33863,33864,33865,33866,33867,33868,33869,33870,33871,33872,33874,33875,33876,33877,33878,33880,33885,33886,33887,33888,33890,33892,33893,33894,33895,33896,33898,33902,33903,33904,33906,33908,33911,33913,33915,33916,21462,23094,40843,36259,21435,22280,39079,26435,37275,27849,20840,30154,25331,29356,21048,21149,32570,28820,30264,21364,40522,27063,30830,38592,35033,32676,28982,29123,20873,26579,29924,22756,25880,22199,35753,39286,25200,32469,24825,28909,22764,20161,20154,24525,38887,20219,35748,20995,22922,32427,25172,20173,26085,25102,33592,33993,33635,34701,29076,28342,23481,32466,20887,25545,26580,32905,33593,34837,20754,23418,22914,36785,20083,27741,20837,35109,36719,38446,34122,29790,38160,38384,28070,33509,24369,25746,27922,33832,33134,40131,22622,36187,19977,21441,33917,33918,33919,33920,33921,33923,33924,33925,33926,33930,33933,33935,33936,33937,33938,33939,33940,33941,33942,33944,33946,33947,33949,33950,33951,33952,33954,33955,33956,33957,33958,33959,33960,33961,33962,33963,33964,33965,33966,33968,33969,33971,33973,33974,33975,33979,33980,33982,33984,33986,33987,33989,33990,33991,33992,33995,33996,33998,33999,34002,34004,34005,34007,34008,34009,34010,34011,34012,34014,34017,34018,34020,34023,34024,34025,34026,34027,34029,34030,34031,34033,34034,34035,34036,34037,34038,34039,34040,34041,34042,34043,34045,34046,34048,34049,34050,20254,25955,26705,21971,20007,25620,39578,25195,23234,29791,33394,28073,26862,20711,33678,30722,26432,21049,27801,32433,20667,21861,29022,31579,26194,29642,33515,26441,23665,21024,29053,34923,38378,38485,25797,36193,33203,21892,27733,25159,32558,22674,20260,21830,36175,26188,19978,23578,35059,26786,25422,31245,28903,33421,21242,38902,23569,21736,37045,32461,22882,36170,34503,33292,33293,36198,25668,23556,24913,28041,31038,35774,30775,30003,21627,20280,36523,28145,23072,32453,31070,27784,23457,23158,29978,32958,24910,28183,22768,29983,29989,29298,21319,32499,34051,34052,34053,34054,34055,34056,34057,34058,34059,34061,34062,34063,34064,34066,34068,34069,34070,34072,34073,34075,34076,34077,34078,34080,34082,34083,34084,34085,34086,34087,34088,34089,34090,34093,34094,34095,34096,34097,34098,34099,34100,34101,34102,34110,34111,34112,34113,34114,34116,34117,34118,34119,34123,34124,34125,34126,34127,34128,34129,34130,34131,34132,34133,34135,34136,34138,34139,34140,34141,34143,34144,34145,34146,34147,34149,34150,34151,34153,34154,34155,34156,34157,34158,34159,34160,34161,34163,34165,34166,34167,34168,34172,34173,34175,34176,34177,30465,30427,21097,32988,22307,24072,22833,29422,26045,28287,35799,23608,34417,21313,30707,25342,26102,20160,39135,34432,23454,35782,21490,30690,20351,23630,39542,22987,24335,31034,22763,19990,26623,20107,25325,35475,36893,21183,26159,21980,22124,36866,20181,20365,37322,39280,27663,24066,24643,23460,35270,35797,25910,25163,39318,23432,23551,25480,21806,21463,30246,20861,34092,26530,26803,27530,25234,36755,21460,33298,28113,30095,20070,36174,23408,29087,34223,26257,26329,32626,34560,40653,40736,23646,26415,36848,26641,26463,25101,31446,22661,24246,25968,28465,34178,34179,34182,34184,34185,34186,34187,34188,34189,34190,34192,34193,34194,34195,34196,34197,34198,34199,34200,34201,34202,34205,34206,34207,34208,34209,34210,34211,34213,34214,34215,34217,34219,34220,34221,34225,34226,34227,34228,34229,34230,34232,34234,34235,34236,34237,34238,34239,34240,34242,34243,34244,34245,34246,34247,34248,34250,34251,34252,34253,34254,34257,34258,34260,34262,34263,34264,34265,34266,34267,34269,34270,34271,34272,34273,34274,34275,34277,34278,34279,34280,34282,34283,34284,34285,34286,34287,34288,34289,34290,34291,34292,34293,34294,34295,34296,24661,21047,32781,25684,34928,29993,24069,26643,25332,38684,21452,29245,35841,27700,30561,31246,21550,30636,39034,33308,35828,30805,26388,28865,26031,25749,22070,24605,31169,21496,19997,27515,32902,23546,21987,22235,20282,20284,39282,24051,26494,32824,24578,39042,36865,23435,35772,35829,25628,33368,25822,22013,33487,37221,20439,32032,36895,31903,20723,22609,28335,23487,35785,32899,37240,33948,31639,34429,38539,38543,32485,39635,30862,23681,31319,36930,38567,31071,23385,25439,31499,34001,26797,21766,32553,29712,32034,38145,25152,22604,20182,23427,22905,22612,34297,34298,34300,34301,34302,34304,34305,34306,34307,34308,34310,34311,34312,34313,34314,34315,34316,34317,34318,34319,34320,34322,34323,34324,34325,34327,34328,34329,34330,34331,34332,34333,34334,34335,34336,34337,34338,34339,34340,34341,34342,34344,34346,34347,34348,34349,34350,34351,34352,34353,34354,34355,34356,34357,34358,34359,34361,34362,34363,34365,34366,34367,34368,34369,34370,34371,34372,34373,34374,34375,34376,34377,34378,34379,34380,34386,34387,34389,34390,34391,34392,34393,34395,34396,34397,34399,34400,34401,34403,34404,34405,34406,34407,34408,34409,34410,29549,25374,36427,36367,32974,33492,25260,21488,27888,37214,22826,24577,27760,22349,25674,36138,30251,28393,22363,27264,30192,28525,35885,35848,22374,27631,34962,30899,25506,21497,28845,27748,22616,25642,22530,26848,33179,21776,31958,20504,36538,28108,36255,28907,25487,28059,28372,32486,33796,26691,36867,28120,38518,35752,22871,29305,34276,33150,30140,35466,26799,21076,36386,38161,25552,39064,36420,21884,20307,26367,22159,24789,28053,21059,23625,22825,28155,22635,3e4,29980,24684,33300,33094,25361,26465,36834,30522,36339,36148,38081,24086,21381,21548,28867,34413,34415,34416,34418,34419,34420,34421,34422,34423,34424,34435,34436,34437,34438,34439,34440,34441,34446,34447,34448,34449,34450,34452,34454,34455,34456,34457,34458,34459,34462,34463,34464,34465,34466,34469,34470,34475,34477,34478,34482,34483,34487,34488,34489,34491,34492,34493,34494,34495,34497,34498,34499,34501,34504,34508,34509,34514,34515,34517,34518,34519,34522,34524,34525,34528,34529,34530,34531,34533,34534,34535,34536,34538,34539,34540,34543,34549,34550,34551,34554,34555,34556,34557,34559,34561,34564,34565,34566,34571,34572,34574,34575,34576,34577,34580,34582,27712,24311,20572,20141,24237,25402,33351,36890,26704,37230,30643,21516,38108,24420,31461,26742,25413,31570,32479,30171,20599,25237,22836,36879,20984,31171,31361,22270,24466,36884,28034,23648,22303,21520,20820,28237,22242,25512,39059,33151,34581,35114,36864,21534,23663,33216,25302,25176,33073,40501,38464,39534,39548,26925,22949,25299,21822,25366,21703,34521,27964,23043,29926,34972,27498,22806,35916,24367,28286,29609,39037,20024,28919,23436,30871,25405,26202,30358,24779,23451,23113,19975,33109,27754,29579,20129,26505,32593,24448,26106,26395,24536,22916,23041,34585,34587,34589,34591,34592,34596,34598,34599,34600,34602,34603,34604,34605,34607,34608,34610,34611,34613,34614,34616,34617,34618,34620,34621,34624,34625,34626,34627,34628,34629,34630,34634,34635,34637,34639,34640,34641,34642,34644,34645,34646,34648,34650,34651,34652,34653,34654,34655,34657,34658,34662,34663,34664,34665,34666,34667,34668,34669,34671,34673,34674,34675,34677,34679,34680,34681,34682,34687,34688,34689,34692,34694,34695,34697,34698,34700,34702,34703,34704,34705,34706,34708,34709,34710,34712,34713,34714,34715,34716,34717,34718,34720,34721,34722,34723,34724,24013,24494,21361,38886,36829,26693,22260,21807,24799,20026,28493,32500,33479,33806,22996,20255,20266,23614,32428,26410,34074,21619,30031,32963,21890,39759,20301,28205,35859,23561,24944,21355,30239,28201,34442,25991,38395,32441,21563,31283,32010,38382,21985,32705,29934,25373,34583,28065,31389,25105,26017,21351,25569,27779,24043,21596,38056,20044,27745,35820,23627,26080,33436,26791,21566,21556,27595,27494,20116,25410,21320,33310,20237,20398,22366,25098,38654,26212,29289,21247,21153,24735,35823,26132,29081,26512,35199,30802,30717,26224,22075,21560,38177,29306,34725,34726,34727,34729,34730,34734,34736,34737,34738,34740,34742,34743,34744,34745,34747,34748,34750,34751,34753,34754,34755,34756,34757,34759,34760,34761,34764,34765,34766,34767,34768,34772,34773,34774,34775,34776,34777,34778,34780,34781,34782,34783,34785,34786,34787,34788,34790,34791,34792,34793,34795,34796,34797,34799,34800,34801,34802,34803,34804,34805,34806,34807,34808,34810,34811,34812,34813,34815,34816,34817,34818,34820,34821,34822,34823,34824,34825,34827,34828,34829,34830,34831,34832,34833,34834,34836,34839,34840,34841,34842,34844,34845,34846,34847,34848,34851,31232,24687,24076,24713,33181,22805,24796,29060,28911,28330,27728,29312,27268,34989,24109,20064,23219,21916,38115,27927,31995,38553,25103,32454,30606,34430,21283,38686,36758,26247,23777,20384,29421,19979,21414,22799,21523,25472,38184,20808,20185,40092,32420,21688,36132,34900,33335,38386,28046,24358,23244,26174,38505,29616,29486,21439,33146,39301,32673,23466,38519,38480,32447,30456,21410,38262,39321,31665,35140,28248,20065,32724,31077,35814,24819,21709,20139,39033,24055,27233,20687,21521,35937,33831,30813,38660,21066,21742,22179,38144,28040,23477,28102,26195,34852,34853,34854,34855,34856,34857,34858,34859,34860,34861,34862,34863,34864,34865,34867,34868,34869,34870,34871,34872,34874,34875,34877,34878,34879,34881,34882,34883,34886,34887,34888,34889,34890,34891,34894,34895,34896,34897,34898,34899,34901,34902,34904,34906,34907,34908,34909,34910,34911,34912,34918,34919,34922,34925,34927,34929,34931,34932,34933,34934,34936,34937,34938,34939,34940,34944,34947,34950,34951,34953,34954,34956,34958,34959,34960,34961,34963,34964,34965,34967,34968,34969,34970,34971,34973,34974,34975,34976,34977,34979,34981,34982,34983,34984,34985,34986,23567,23389,26657,32918,21880,31505,25928,26964,20123,27463,34638,38795,21327,25375,25658,37034,26012,32961,35856,20889,26800,21368,34809,25032,27844,27899,35874,23633,34218,33455,38156,27427,36763,26032,24571,24515,20449,34885,26143,33125,29481,24826,20852,21009,22411,24418,37026,34892,37266,24184,26447,24615,22995,20804,20982,33016,21256,27769,38596,29066,20241,20462,32670,26429,21957,38152,31168,34966,32483,22687,25100,38656,34394,22040,39035,24464,35768,33988,37207,21465,26093,24207,30044,24676,32110,23167,32490,32493,36713,21927,23459,24748,26059,29572,34988,34990,34991,34992,34994,34995,34996,34997,34998,35e3,35001,35002,35003,35005,35006,35007,35008,35011,35012,35015,35016,35018,35019,35020,35021,35023,35024,35025,35027,35030,35031,35034,35035,35036,35037,35038,35040,35041,35046,35047,35049,35050,35051,35052,35053,35054,35055,35058,35061,35062,35063,35066,35067,35069,35071,35072,35073,35075,35076,35077,35078,35079,35080,35081,35083,35084,35085,35086,35087,35089,35092,35093,35094,35095,35096,35100,35101,35102,35103,35104,35106,35107,35108,35110,35111,35112,35113,35116,35117,35118,35119,35121,35122,35123,35125,35127,36873,30307,30505,32474,38772,34203,23398,31348,38634,34880,21195,29071,24490,26092,35810,23547,39535,24033,27529,27739,35757,35759,36874,36805,21387,25276,40486,40493,21568,20011,33469,29273,34460,23830,34905,28079,38597,21713,20122,35766,28937,21693,38409,28895,28153,30416,20005,30740,34578,23721,24310,35328,39068,38414,28814,27839,22852,25513,30524,34893,28436,33395,22576,29141,21388,30746,38593,21761,24422,28976,23476,35866,39564,27523,22830,40495,31207,26472,25196,20335,30113,32650,27915,38451,27687,20208,30162,20859,26679,28478,36992,33136,22934,29814,35128,35129,35130,35131,35132,35133,35134,35135,35136,35138,35139,35141,35142,35143,35144,35145,35146,35147,35148,35149,35150,35151,35152,35153,35154,35155,35156,35157,35158,35159,35160,35161,35162,35163,35164,35165,35168,35169,35170,35171,35172,35173,35175,35176,35177,35178,35179,35180,35181,35182,35183,35184,35185,35186,35187,35188,35189,35190,35191,35192,35193,35194,35196,35197,35198,35200,35202,35204,35205,35207,35208,35209,35210,35211,35212,35213,35214,35215,35216,35217,35218,35219,35220,35221,35222,35223,35224,35225,35226,35227,35228,35229,35230,35231,35232,35233,25671,23591,36965,31377,35875,23002,21676,33280,33647,35201,32768,26928,22094,32822,29239,37326,20918,20063,39029,25494,19994,21494,26355,33099,22812,28082,19968,22777,21307,25558,38129,20381,20234,34915,39056,22839,36951,31227,20202,33008,30097,27778,23452,23016,24413,26885,34433,20506,24050,20057,30691,20197,33402,25233,26131,37009,23673,20159,24441,33222,36920,32900,30123,20134,35028,24847,27589,24518,20041,30410,28322,35811,35758,35850,35793,24322,32764,32716,32462,33589,33643,22240,27575,38899,38452,23035,21535,38134,28139,23493,39278,23609,24341,38544,35234,35235,35236,35237,35238,35239,35240,35241,35242,35243,35244,35245,35246,35247,35248,35249,35250,35251,35252,35253,35254,35255,35256,35257,35258,35259,35260,35261,35262,35263,35264,35267,35277,35283,35284,35285,35287,35288,35289,35291,35293,35295,35296,35297,35298,35300,35303,35304,35305,35306,35308,35309,35310,35312,35313,35314,35316,35317,35318,35319,35320,35321,35322,35323,35324,35325,35326,35327,35329,35330,35331,35332,35333,35334,35336,35337,35338,35339,35340,35341,35342,35343,35344,35345,35346,35347,35348,35349,35350,35351,35352,35353,35354,35355,35356,35357,21360,33521,27185,23156,40560,24212,32552,33721,33828,33829,33639,34631,36814,36194,30408,24433,39062,30828,26144,21727,25317,20323,33219,30152,24248,38605,36362,34553,21647,27891,28044,27704,24703,21191,29992,24189,20248,24736,24551,23588,30001,37038,38080,29369,27833,28216,37193,26377,21451,21491,20305,37321,35825,21448,24188,36802,28132,20110,30402,27014,34398,24858,33286,20313,20446,36926,40060,24841,28189,28180,38533,20104,23089,38632,19982,23679,31161,23431,35821,32701,29577,22495,33419,37057,21505,36935,21947,23786,24481,24840,27442,29425,32946,35465,35358,35359,35360,35361,35362,35363,35364,35365,35366,35367,35368,35369,35370,35371,35372,35373,35374,35375,35376,35377,35378,35379,35380,35381,35382,35383,35384,35385,35386,35387,35388,35389,35391,35392,35393,35394,35395,35396,35397,35398,35399,35401,35402,35403,35404,35405,35406,35407,35408,35409,35410,35411,35412,35413,35414,35415,35416,35417,35418,35419,35420,35421,35422,35423,35424,35425,35426,35427,35428,35429,35430,35431,35432,35433,35434,35435,35436,35437,35438,35439,35440,35441,35442,35443,35444,35445,35446,35447,35448,35450,35451,35452,35453,35454,35455,35456,28020,23507,35029,39044,35947,39533,40499,28170,20900,20803,22435,34945,21407,25588,36757,22253,21592,22278,29503,28304,32536,36828,33489,24895,24616,38498,26352,32422,36234,36291,38053,23731,31908,26376,24742,38405,32792,20113,37095,21248,38504,20801,36816,34164,37213,26197,38901,23381,21277,30776,26434,26685,21705,28798,23472,36733,20877,22312,21681,25874,26242,36190,36163,33039,33900,36973,31967,20991,34299,26531,26089,28577,34468,36481,22122,36896,30338,28790,29157,36131,25321,21017,27901,36156,24590,22686,24974,26366,36192,25166,21939,28195,26413,36711,35457,35458,35459,35460,35461,35462,35463,35464,35467,35468,35469,35470,35471,35472,35473,35474,35476,35477,35478,35479,35480,35481,35482,35483,35484,35485,35486,35487,35488,35489,35490,35491,35492,35493,35494,35495,35496,35497,35498,35499,35500,35501,35502,35503,35504,35505,35506,35507,35508,35509,35510,35511,35512,35513,35514,35515,35516,35517,35518,35519,35520,35521,35522,35523,35524,35525,35526,35527,35528,35529,35530,35531,35532,35533,35534,35535,35536,35537,35538,35539,35540,35541,35542,35543,35544,35545,35546,35547,35548,35549,35550,35551,35552,35553,35554,35555,38113,38392,30504,26629,27048,21643,20045,28856,35784,25688,25995,23429,31364,20538,23528,30651,27617,35449,31896,27838,30415,26025,36759,23853,23637,34360,26632,21344,25112,31449,28251,32509,27167,31456,24432,28467,24352,25484,28072,26454,19976,24080,36134,20183,32960,30260,38556,25307,26157,25214,27836,36213,29031,32617,20806,32903,21484,36974,25240,21746,34544,36761,32773,38167,34071,36825,27993,29645,26015,30495,29956,30759,33275,36126,38024,20390,26517,30137,35786,38663,25391,38215,38453,33976,25379,30529,24449,29424,20105,24596,25972,25327,27491,25919,35556,35557,35558,35559,35560,35561,35562,35563,35564,35565,35566,35567,35568,35569,35570,35571,35572,35573,35574,35575,35576,35577,35578,35579,35580,35581,35582,35583,35584,35585,35586,35587,35588,35589,35590,35592,35593,35594,35595,35596,35597,35598,35599,35600,35601,35602,35603,35604,35605,35606,35607,35608,35609,35610,35611,35612,35613,35614,35615,35616,35617,35618,35619,35620,35621,35623,35624,35625,35626,35627,35628,35629,35630,35631,35632,35633,35634,35635,35636,35637,35638,35639,35640,35641,35642,35643,35644,35645,35646,35647,35648,35649,35650,35651,35652,35653,24103,30151,37073,35777,33437,26525,25903,21553,34584,30693,32930,33026,27713,20043,32455,32844,30452,26893,27542,25191,20540,20356,22336,25351,27490,36286,21482,26088,32440,24535,25370,25527,33267,33268,32622,24092,23769,21046,26234,31209,31258,36136,28825,30164,28382,27835,31378,20013,30405,24544,38047,34935,32456,31181,32959,37325,20210,20247,33311,21608,24030,27954,35788,31909,36724,32920,24090,21650,30385,23449,26172,39588,29664,26666,34523,26417,29482,35832,35803,36880,31481,28891,29038,25284,30633,22065,20027,33879,26609,21161,34496,36142,38136,31569,35654,35655,35656,35657,35658,35659,35660,35661,35662,35663,35664,35665,35666,35667,35668,35669,35670,35671,35672,35673,35674,35675,35676,35677,35678,35679,35680,35681,35682,35683,35684,35685,35687,35688,35689,35690,35691,35693,35694,35695,35696,35697,35698,35699,35700,35701,35702,35703,35704,35705,35706,35707,35708,35709,35710,35711,35712,35713,35714,35715,35716,35717,35718,35719,35720,35721,35722,35723,35724,35725,35726,35727,35728,35729,35730,35731,35732,35733,35734,35735,35736,35737,35738,35739,35740,35741,35742,35743,35756,35761,35771,35783,35792,35818,35849,35870,20303,27880,31069,39547,25235,29226,25341,19987,30742,36716,25776,36186,31686,26729,24196,35013,22918,25758,22766,29366,26894,38181,36861,36184,22368,32512,35846,20934,25417,25305,21331,26700,29730,33537,37196,21828,30528,28796,27978,20857,21672,36164,23039,28363,28100,23388,32043,20180,31869,28371,23376,33258,28173,23383,39683,26837,36394,23447,32508,24635,32437,37049,36208,22863,25549,31199,36275,21330,26063,31062,35781,38459,32452,38075,32386,22068,37257,26368,32618,23562,36981,26152,24038,20304,26590,20570,20316,22352,24231,59408,59409,59410,59411,59412,35896,35897,35898,35899,35900,35901,35902,35903,35904,35906,35907,35908,35909,35912,35914,35915,35917,35918,35919,35920,35921,35922,35923,35924,35926,35927,35928,35929,35931,35932,35933,35934,35935,35936,35939,35940,35941,35942,35943,35944,35945,35948,35949,35950,35951,35952,35953,35954,35956,35957,35958,35959,35963,35964,35965,35966,35967,35968,35969,35971,35972,35974,35975,35976,35979,35981,35982,35983,35984,35985,35986,35987,35989,35990,35991,35993,35994,35995,35996,35997,35998,35999,36e3,36001,36002,36003,36004,36005,36006,36007,36008,36009,36010,36011,36012,36013,20109,19980,20800,19984,24319,21317,19989,20120,19998,39730,23404,22121,20008,31162,20031,21269,20039,22829,29243,21358,27664,22239,32996,39319,27603,30590,40727,20022,20127,40720,20060,20073,20115,33416,23387,21868,22031,20164,21389,21405,21411,21413,21422,38757,36189,21274,21493,21286,21294,21310,36188,21350,21347,20994,21e3,21006,21037,21043,21055,21056,21068,21086,21089,21084,33967,21117,21122,21121,21136,21139,20866,32596,20155,20163,20169,20162,20200,20193,20203,20190,20251,20211,20258,20324,20213,20261,20263,20233,20267,20318,20327,25912,20314,20317,36014,36015,36016,36017,36018,36019,36020,36021,36022,36023,36024,36025,36026,36027,36028,36029,36030,36031,36032,36033,36034,36035,36036,36037,36038,36039,36040,36041,36042,36043,36044,36045,36046,36047,36048,36049,36050,36051,36052,36053,36054,36055,36056,36057,36058,36059,36060,36061,36062,36063,36064,36065,36066,36067,36068,36069,36070,36071,36072,36073,36074,36075,36076,36077,36078,36079,36080,36081,36082,36083,36084,36085,36086,36087,36088,36089,36090,36091,36092,36093,36094,36095,36096,36097,36098,36099,36100,36101,36102,36103,36104,36105,36106,36107,36108,36109,20319,20311,20274,20285,20342,20340,20369,20361,20355,20367,20350,20347,20394,20348,20396,20372,20454,20456,20458,20421,20442,20451,20444,20433,20447,20472,20521,20556,20467,20524,20495,20526,20525,20478,20508,20492,20517,20520,20606,20547,20565,20552,20558,20588,20603,20645,20647,20649,20666,20694,20742,20717,20716,20710,20718,20743,20747,20189,27709,20312,20325,20430,40864,27718,31860,20846,24061,40649,39320,20865,22804,21241,21261,35335,21264,20971,22809,20821,20128,20822,20147,34926,34980,20149,33044,35026,31104,23348,34819,32696,20907,20913,20925,20924,36110,36111,36112,36113,36114,36115,36116,36117,36118,36119,36120,36121,36122,36123,36124,36128,36177,36178,36183,36191,36197,36200,36201,36202,36204,36206,36207,36209,36210,36216,36217,36218,36219,36220,36221,36222,36223,36224,36226,36227,36230,36231,36232,36233,36236,36237,36238,36239,36240,36242,36243,36245,36246,36247,36248,36249,36250,36251,36252,36253,36254,36256,36257,36258,36260,36261,36262,36263,36264,36265,36266,36267,36268,36269,36270,36271,36272,36274,36278,36279,36281,36283,36285,36288,36289,36290,36293,36295,36296,36297,36298,36301,36304,36306,36307,36308,20935,20886,20898,20901,35744,35750,35751,35754,35764,35765,35767,35778,35779,35787,35791,35790,35794,35795,35796,35798,35800,35801,35804,35807,35808,35812,35816,35817,35822,35824,35827,35830,35833,35836,35839,35840,35842,35844,35847,35852,35855,35857,35858,35860,35861,35862,35865,35867,35864,35869,35871,35872,35873,35877,35879,35882,35883,35886,35887,35890,35891,35893,35894,21353,21370,38429,38434,38433,38449,38442,38461,38460,38466,38473,38484,38495,38503,38508,38514,38516,38536,38541,38551,38576,37015,37019,37021,37017,37036,37025,37044,37043,37046,37050,36309,36312,36313,36316,36320,36321,36322,36325,36326,36327,36329,36333,36334,36336,36337,36338,36340,36342,36348,36350,36351,36352,36353,36354,36355,36356,36358,36359,36360,36363,36365,36366,36368,36369,36370,36371,36373,36374,36375,36376,36377,36378,36379,36380,36384,36385,36388,36389,36390,36391,36392,36395,36397,36400,36402,36403,36404,36406,36407,36408,36411,36412,36414,36415,36419,36421,36422,36428,36429,36430,36431,36432,36435,36436,36437,36438,36439,36440,36442,36443,36444,36445,36446,36447,36448,36449,36450,36451,36452,36453,36455,36456,36458,36459,36462,36465,37048,37040,37071,37061,37054,37072,37060,37063,37075,37094,37090,37084,37079,37083,37099,37103,37118,37124,37154,37150,37155,37169,37167,37177,37187,37190,21005,22850,21154,21164,21165,21182,21759,21200,21206,21232,21471,29166,30669,24308,20981,20988,39727,21430,24321,30042,24047,22348,22441,22433,22654,22716,22725,22737,22313,22316,22314,22323,22329,22318,22319,22364,22331,22338,22377,22405,22379,22406,22396,22395,22376,22381,22390,22387,22445,22436,22412,22450,22479,22439,22452,22419,22432,22485,22488,22490,22489,22482,22456,22516,22511,22520,22500,22493,36467,36469,36471,36472,36473,36474,36475,36477,36478,36480,36482,36483,36484,36486,36488,36489,36490,36491,36492,36493,36494,36497,36498,36499,36501,36502,36503,36504,36505,36506,36507,36509,36511,36512,36513,36514,36515,36516,36517,36518,36519,36520,36521,36522,36525,36526,36528,36529,36531,36532,36533,36534,36535,36536,36537,36539,36540,36541,36542,36543,36544,36545,36546,36547,36548,36549,36550,36551,36552,36553,36554,36555,36556,36557,36559,36560,36561,36562,36563,36564,36565,36566,36567,36568,36569,36570,36571,36572,36573,36574,36575,36576,36577,36578,36579,36580,22539,22541,22525,22509,22528,22558,22553,22596,22560,22629,22636,22657,22665,22682,22656,39336,40729,25087,33401,33405,33407,33423,33418,33448,33412,33422,33425,33431,33433,33451,33464,33470,33456,33480,33482,33507,33432,33463,33454,33483,33484,33473,33449,33460,33441,33450,33439,33476,33486,33444,33505,33545,33527,33508,33551,33543,33500,33524,33490,33496,33548,33531,33491,33553,33562,33542,33556,33557,33504,33493,33564,33617,33627,33628,33544,33682,33596,33588,33585,33691,33630,33583,33615,33607,33603,33631,33600,33559,33632,33581,33594,33587,33638,33637,36581,36582,36583,36584,36585,36586,36587,36588,36589,36590,36591,36592,36593,36594,36595,36596,36597,36598,36599,36600,36601,36602,36603,36604,36605,36606,36607,36608,36609,36610,36611,36612,36613,36614,36615,36616,36617,36618,36619,36620,36621,36622,36623,36624,36625,36626,36627,36628,36629,36630,36631,36632,36633,36634,36635,36636,36637,36638,36639,36640,36641,36642,36643,36644,36645,36646,36647,36648,36649,36650,36651,36652,36653,36654,36655,36656,36657,36658,36659,36660,36661,36662,36663,36664,36665,36666,36667,36668,36669,36670,36671,36672,36673,36674,36675,36676,33640,33563,33641,33644,33642,33645,33646,33712,33656,33715,33716,33696,33706,33683,33692,33669,33660,33718,33705,33661,33720,33659,33688,33694,33704,33722,33724,33729,33793,33765,33752,22535,33816,33803,33757,33789,33750,33820,33848,33809,33798,33748,33759,33807,33795,33784,33785,33770,33733,33728,33830,33776,33761,33884,33873,33882,33881,33907,33927,33928,33914,33929,33912,33852,33862,33897,33910,33932,33934,33841,33901,33985,33997,34e3,34022,33981,34003,33994,33983,33978,34016,33953,33977,33972,33943,34021,34019,34060,29965,34104,34032,34105,34079,34106,36677,36678,36679,36680,36681,36682,36683,36684,36685,36686,36687,36688,36689,36690,36691,36692,36693,36694,36695,36696,36697,36698,36699,36700,36701,36702,36703,36704,36705,36706,36707,36708,36709,36714,36736,36748,36754,36765,36768,36769,36770,36772,36773,36774,36775,36778,36780,36781,36782,36783,36786,36787,36788,36789,36791,36792,36794,36795,36796,36799,36800,36803,36806,36809,36810,36811,36812,36813,36815,36818,36822,36823,36826,36832,36833,36835,36839,36844,36847,36849,36850,36852,36853,36854,36858,36859,36860,36862,36863,36871,36872,36876,36878,36883,36885,36888,34134,34107,34047,34044,34137,34120,34152,34148,34142,34170,30626,34115,34162,34171,34212,34216,34183,34191,34169,34222,34204,34181,34233,34231,34224,34259,34241,34268,34303,34343,34309,34345,34326,34364,24318,24328,22844,22849,32823,22869,22874,22872,21263,23586,23589,23596,23604,25164,25194,25247,25275,25290,25306,25303,25326,25378,25334,25401,25419,25411,25517,25590,25457,25466,25486,25524,25453,25516,25482,25449,25518,25532,25586,25592,25568,25599,25540,25566,25550,25682,25542,25534,25669,25665,25611,25627,25632,25612,25638,25633,25694,25732,25709,25750,36889,36892,36899,36900,36901,36903,36904,36905,36906,36907,36908,36912,36913,36914,36915,36916,36919,36921,36922,36925,36927,36928,36931,36933,36934,36936,36937,36938,36939,36940,36942,36948,36949,36950,36953,36954,36956,36957,36958,36959,36960,36961,36964,36966,36967,36969,36970,36971,36972,36975,36976,36977,36978,36979,36982,36983,36984,36985,36986,36987,36988,36990,36993,36996,36997,36998,36999,37001,37002,37004,37005,37006,37007,37008,37010,37012,37014,37016,37018,37020,37022,37023,37024,37028,37029,37031,37032,37033,37035,37037,37042,37047,37052,37053,37055,37056,25722,25783,25784,25753,25786,25792,25808,25815,25828,25826,25865,25893,25902,24331,24530,29977,24337,21343,21489,21501,21481,21480,21499,21522,21526,21510,21579,21586,21587,21588,21590,21571,21537,21591,21593,21539,21554,21634,21652,21623,21617,21604,21658,21659,21636,21622,21606,21661,21712,21677,21698,21684,21714,21671,21670,21715,21716,21618,21667,21717,21691,21695,21708,21721,21722,21724,21673,21674,21668,21725,21711,21726,21787,21735,21792,21757,21780,21747,21794,21795,21775,21777,21799,21802,21863,21903,21941,21833,21869,21825,21845,21823,21840,21820,37058,37059,37062,37064,37065,37067,37068,37069,37074,37076,37077,37078,37080,37081,37082,37086,37087,37088,37091,37092,37093,37097,37098,37100,37102,37104,37105,37106,37107,37109,37110,37111,37113,37114,37115,37116,37119,37120,37121,37123,37125,37126,37127,37128,37129,37130,37131,37132,37133,37134,37135,37136,37137,37138,37139,37140,37141,37142,37143,37144,37146,37147,37148,37149,37151,37152,37153,37156,37157,37158,37159,37160,37161,37162,37163,37164,37165,37166,37168,37170,37171,37172,37173,37174,37175,37176,37178,37179,37180,37181,37182,37183,37184,37185,37186,37188,21815,21846,21877,21878,21879,21811,21808,21852,21899,21970,21891,21937,21945,21896,21889,21919,21886,21974,21905,21883,21983,21949,21950,21908,21913,21994,22007,21961,22047,21969,21995,21996,21972,21990,21981,21956,21999,21989,22002,22003,21964,21965,21992,22005,21988,36756,22046,22024,22028,22017,22052,22051,22014,22016,22055,22061,22104,22073,22103,22060,22093,22114,22105,22108,22092,22100,22150,22116,22129,22123,22139,22140,22149,22163,22191,22228,22231,22237,22241,22261,22251,22265,22271,22276,22282,22281,22300,24079,24089,24084,24081,24113,24123,24124,37189,37191,37192,37201,37203,37204,37205,37206,37208,37209,37211,37212,37215,37216,37222,37223,37224,37227,37229,37235,37242,37243,37244,37248,37249,37250,37251,37252,37254,37256,37258,37262,37263,37267,37268,37269,37270,37271,37272,37273,37276,37277,37278,37279,37280,37281,37284,37285,37286,37287,37288,37289,37291,37292,37296,37297,37298,37299,37302,37303,37304,37305,37307,37308,37309,37310,37311,37312,37313,37314,37315,37316,37317,37318,37320,37323,37328,37330,37331,37332,37333,37334,37335,37336,37337,37338,37339,37341,37342,37343,37344,37345,37346,37347,37348,37349,24119,24132,24148,24155,24158,24161,23692,23674,23693,23696,23702,23688,23704,23705,23697,23706,23708,23733,23714,23741,23724,23723,23729,23715,23745,23735,23748,23762,23780,23755,23781,23810,23811,23847,23846,23854,23844,23838,23814,23835,23896,23870,23860,23869,23916,23899,23919,23901,23915,23883,23882,23913,23924,23938,23961,23965,35955,23991,24005,24435,24439,24450,24455,24457,24460,24469,24473,24476,24488,24493,24501,24508,34914,24417,29357,29360,29364,29367,29368,29379,29377,29390,29389,29394,29416,29423,29417,29426,29428,29431,29441,29427,29443,29434,37350,37351,37352,37353,37354,37355,37356,37357,37358,37359,37360,37361,37362,37363,37364,37365,37366,37367,37368,37369,37370,37371,37372,37373,37374,37375,37376,37377,37378,37379,37380,37381,37382,37383,37384,37385,37386,37387,37388,37389,37390,37391,37392,37393,37394,37395,37396,37397,37398,37399,37400,37401,37402,37403,37404,37405,37406,37407,37408,37409,37410,37411,37412,37413,37414,37415,37416,37417,37418,37419,37420,37421,37422,37423,37424,37425,37426,37427,37428,37429,37430,37431,37432,37433,37434,37435,37436,37437,37438,37439,37440,37441,37442,37443,37444,37445,29435,29463,29459,29473,29450,29470,29469,29461,29474,29497,29477,29484,29496,29489,29520,29517,29527,29536,29548,29551,29566,33307,22821,39143,22820,22786,39267,39271,39272,39273,39274,39275,39276,39284,39287,39293,39296,39300,39303,39306,39309,39312,39313,39315,39316,39317,24192,24209,24203,24214,24229,24224,24249,24245,24254,24243,36179,24274,24273,24283,24296,24298,33210,24516,24521,24534,24527,24579,24558,24580,24545,24548,24574,24581,24582,24554,24557,24568,24601,24629,24614,24603,24591,24589,24617,24619,24586,24639,24609,24696,24697,24699,24698,24642,37446,37447,37448,37449,37450,37451,37452,37453,37454,37455,37456,37457,37458,37459,37460,37461,37462,37463,37464,37465,37466,37467,37468,37469,37470,37471,37472,37473,37474,37475,37476,37477,37478,37479,37480,37481,37482,37483,37484,37485,37486,37487,37488,37489,37490,37491,37493,37494,37495,37496,37497,37498,37499,37500,37501,37502,37503,37504,37505,37506,37507,37508,37509,37510,37511,37512,37513,37514,37515,37516,37517,37519,37520,37521,37522,37523,37524,37525,37526,37527,37528,37529,37530,37531,37532,37533,37534,37535,37536,37537,37538,37539,37540,37541,37542,37543,24682,24701,24726,24730,24749,24733,24707,24722,24716,24731,24812,24763,24753,24797,24792,24774,24794,24756,24864,24870,24853,24867,24820,24832,24846,24875,24906,24949,25004,24980,24999,25015,25044,25077,24541,38579,38377,38379,38385,38387,38389,38390,38396,38398,38403,38404,38406,38408,38410,38411,38412,38413,38415,38418,38421,38422,38423,38425,38426,20012,29247,25109,27701,27732,27740,27722,27811,27781,27792,27796,27788,27752,27753,27764,27766,27782,27817,27856,27860,27821,27895,27896,27889,27863,27826,27872,27862,27898,27883,27886,27825,27859,27887,27902,37544,37545,37546,37547,37548,37549,37551,37552,37553,37554,37555,37556,37557,37558,37559,37560,37561,37562,37563,37564,37565,37566,37567,37568,37569,37570,37571,37572,37573,37574,37575,37577,37578,37579,37580,37581,37582,37583,37584,37585,37586,37587,37588,37589,37590,37591,37592,37593,37594,37595,37596,37597,37598,37599,37600,37601,37602,37603,37604,37605,37606,37607,37608,37609,37610,37611,37612,37613,37614,37615,37616,37617,37618,37619,37620,37621,37622,37623,37624,37625,37626,37627,37628,37629,37630,37631,37632,37633,37634,37635,37636,37637,37638,37639,37640,37641,27961,27943,27916,27971,27976,27911,27908,27929,27918,27947,27981,27950,27957,27930,27983,27986,27988,27955,28049,28015,28062,28064,27998,28051,28052,27996,28e3,28028,28003,28186,28103,28101,28126,28174,28095,28128,28177,28134,28125,28121,28182,28075,28172,28078,28203,28270,28238,28267,28338,28255,28294,28243,28244,28210,28197,28228,28383,28337,28312,28384,28461,28386,28325,28327,28349,28347,28343,28375,28340,28367,28303,28354,28319,28514,28486,28487,28452,28437,28409,28463,28470,28491,28532,28458,28425,28457,28553,28557,28556,28536,28530,28540,28538,28625,37642,37643,37644,37645,37646,37647,37648,37649,37650,37651,37652,37653,37654,37655,37656,37657,37658,37659,37660,37661,37662,37663,37664,37665,37666,37667,37668,37669,37670,37671,37672,37673,37674,37675,37676,37677,37678,37679,37680,37681,37682,37683,37684,37685,37686,37687,37688,37689,37690,37691,37692,37693,37695,37696,37697,37698,37699,37700,37701,37702,37703,37704,37705,37706,37707,37708,37709,37710,37711,37712,37713,37714,37715,37716,37717,37718,37719,37720,37721,37722,37723,37724,37725,37726,37727,37728,37729,37730,37731,37732,37733,37734,37735,37736,37737,37739,28617,28583,28601,28598,28610,28641,28654,28638,28640,28655,28698,28707,28699,28729,28725,28751,28766,23424,23428,23445,23443,23461,23480,29999,39582,25652,23524,23534,35120,23536,36423,35591,36790,36819,36821,36837,36846,36836,36841,36838,36851,36840,36869,36868,36875,36902,36881,36877,36886,36897,36917,36918,36909,36911,36932,36945,36946,36944,36968,36952,36962,36955,26297,36980,36989,36994,37e3,36995,37003,24400,24407,24406,24408,23611,21675,23632,23641,23409,23651,23654,32700,24362,24361,24365,33396,24380,39739,23662,22913,22915,22925,22953,22954,22947,37740,37741,37742,37743,37744,37745,37746,37747,37748,37749,37750,37751,37752,37753,37754,37755,37756,37757,37758,37759,37760,37761,37762,37763,37764,37765,37766,37767,37768,37769,37770,37771,37772,37773,37774,37776,37777,37778,37779,37780,37781,37782,37783,37784,37785,37786,37787,37788,37789,37790,37791,37792,37793,37794,37795,37796,37797,37798,37799,37800,37801,37802,37803,37804,37805,37806,37807,37808,37809,37810,37811,37812,37813,37814,37815,37816,37817,37818,37819,37820,37821,37822,37823,37824,37825,37826,37827,37828,37829,37830,37831,37832,37833,37835,37836,37837,22935,22986,22955,22942,22948,22994,22962,22959,22999,22974,23045,23046,23005,23048,23011,23e3,23033,23052,23049,23090,23092,23057,23075,23059,23104,23143,23114,23125,23100,23138,23157,33004,23210,23195,23159,23162,23230,23275,23218,23250,23252,23224,23264,23267,23281,23254,23270,23256,23260,23305,23319,23318,23346,23351,23360,23573,23580,23386,23397,23411,23377,23379,23394,39541,39543,39544,39546,39551,39549,39552,39553,39557,39560,39562,39568,39570,39571,39574,39576,39579,39580,39581,39583,39584,39586,39587,39589,39591,32415,32417,32419,32421,32424,32425,37838,37839,37840,37841,37842,37843,37844,37845,37847,37848,37849,37850,37851,37852,37853,37854,37855,37856,37857,37858,37859,37860,37861,37862,37863,37864,37865,37866,37867,37868,37869,37870,37871,37872,37873,37874,37875,37876,37877,37878,37879,37880,37881,37882,37883,37884,37885,37886,37887,37888,37889,37890,37891,37892,37893,37894,37895,37896,37897,37898,37899,37900,37901,37902,37903,37904,37905,37906,37907,37908,37909,37910,37911,37912,37913,37914,37915,37916,37917,37918,37919,37920,37921,37922,37923,37924,37925,37926,37927,37928,37929,37930,37931,37932,37933,37934,32429,32432,32446,32448,32449,32450,32457,32459,32460,32464,32468,32471,32475,32480,32481,32488,32491,32494,32495,32497,32498,32525,32502,32506,32507,32510,32513,32514,32515,32519,32520,32523,32524,32527,32529,32530,32535,32537,32540,32539,32543,32545,32546,32547,32548,32549,32550,32551,32554,32555,32556,32557,32559,32560,32561,32562,32563,32565,24186,30079,24027,30014,37013,29582,29585,29614,29602,29599,29647,29634,29649,29623,29619,29632,29641,29640,29669,29657,39036,29706,29673,29671,29662,29626,29682,29711,29738,29787,29734,29733,29736,29744,29742,29740,37935,37936,37937,37938,37939,37940,37941,37942,37943,37944,37945,37946,37947,37948,37949,37951,37952,37953,37954,37955,37956,37957,37958,37959,37960,37961,37962,37963,37964,37965,37966,37967,37968,37969,37970,37971,37972,37973,37974,37975,37976,37977,37978,37979,37980,37981,37982,37983,37984,37985,37986,37987,37988,37989,37990,37991,37992,37993,37994,37996,37997,37998,37999,38e3,38001,38002,38003,38004,38005,38006,38007,38008,38009,38010,38011,38012,38013,38014,38015,38016,38017,38018,38019,38020,38033,38038,38040,38087,38095,38099,38100,38106,38118,38139,38172,38176,29723,29722,29761,29788,29783,29781,29785,29815,29805,29822,29852,29838,29824,29825,29831,29835,29854,29864,29865,29840,29863,29906,29882,38890,38891,38892,26444,26451,26462,26440,26473,26533,26503,26474,26483,26520,26535,26485,26536,26526,26541,26507,26487,26492,26608,26633,26584,26634,26601,26544,26636,26585,26549,26586,26547,26589,26624,26563,26552,26594,26638,26561,26621,26674,26675,26720,26721,26702,26722,26692,26724,26755,26653,26709,26726,26689,26727,26688,26686,26698,26697,26665,26805,26767,26740,26743,26771,26731,26818,26990,26876,26911,26912,26873,38183,38195,38205,38211,38216,38219,38229,38234,38240,38254,38260,38261,38263,38264,38265,38266,38267,38268,38269,38270,38272,38273,38274,38275,38276,38277,38278,38279,38280,38281,38282,38283,38284,38285,38286,38287,38288,38289,38290,38291,38292,38293,38294,38295,38296,38297,38298,38299,38300,38301,38302,38303,38304,38305,38306,38307,38308,38309,38310,38311,38312,38313,38314,38315,38316,38317,38318,38319,38320,38321,38322,38323,38324,38325,38326,38327,38328,38329,38330,38331,38332,38333,38334,38335,38336,38337,38338,38339,38340,38341,38342,38343,38344,38345,38346,38347,26916,26864,26891,26881,26967,26851,26896,26993,26937,26976,26946,26973,27012,26987,27008,27032,27e3,26932,27084,27015,27016,27086,27017,26982,26979,27001,27035,27047,27067,27051,27053,27092,27057,27073,27082,27103,27029,27104,27021,27135,27183,27117,27159,27160,27237,27122,27204,27198,27296,27216,27227,27189,27278,27257,27197,27176,27224,27260,27281,27280,27305,27287,27307,29495,29522,27521,27522,27527,27524,27538,27539,27533,27546,27547,27553,27562,36715,36717,36721,36722,36723,36725,36726,36728,36727,36729,36730,36732,36734,36737,36738,36740,36743,36747,38348,38349,38350,38351,38352,38353,38354,38355,38356,38357,38358,38359,38360,38361,38362,38363,38364,38365,38366,38367,38368,38369,38370,38371,38372,38373,38374,38375,38380,38399,38407,38419,38424,38427,38430,38432,38435,38436,38437,38438,38439,38440,38441,38443,38444,38445,38447,38448,38455,38456,38457,38458,38462,38465,38467,38474,38478,38479,38481,38482,38483,38486,38487,38488,38489,38490,38492,38493,38494,38496,38499,38501,38502,38507,38509,38510,38511,38512,38513,38515,38520,38521,38522,38523,38524,38525,38526,38527,38528,38529,38530,38531,38532,38535,38537,38538,36749,36750,36751,36760,36762,36558,25099,25111,25115,25119,25122,25121,25125,25124,25132,33255,29935,29940,29951,29967,29969,29971,25908,26094,26095,26096,26122,26137,26482,26115,26133,26112,28805,26359,26141,26164,26161,26166,26165,32774,26207,26196,26177,26191,26198,26209,26199,26231,26244,26252,26279,26269,26302,26331,26332,26342,26345,36146,36147,36150,36155,36157,36160,36165,36166,36168,36169,36167,36173,36181,36185,35271,35274,35275,35276,35278,35279,35280,35281,29294,29343,29277,29286,29295,29310,29311,29316,29323,29325,29327,29330,25352,25394,25520,38540,38542,38545,38546,38547,38549,38550,38554,38555,38557,38558,38559,38560,38561,38562,38563,38564,38565,38566,38568,38569,38570,38571,38572,38573,38574,38575,38577,38578,38580,38581,38583,38584,38586,38587,38591,38594,38595,38600,38602,38603,38608,38609,38611,38612,38614,38615,38616,38617,38618,38619,38620,38621,38622,38623,38625,38626,38627,38628,38629,38630,38631,38635,38636,38637,38638,38640,38641,38642,38644,38645,38648,38650,38651,38652,38653,38655,38658,38659,38661,38666,38667,38668,38672,38673,38674,38676,38677,38679,38680,38681,38682,38683,38685,38687,38688,25663,25816,32772,27626,27635,27645,27637,27641,27653,27655,27654,27661,27669,27672,27673,27674,27681,27689,27684,27690,27698,25909,25941,25963,29261,29266,29270,29232,34402,21014,32927,32924,32915,32956,26378,32957,32945,32939,32941,32948,32951,32999,33e3,33001,33002,32987,32962,32964,32985,32973,32983,26384,32989,33003,33009,33012,33005,33037,33038,33010,33020,26389,33042,35930,33078,33054,33068,33048,33074,33096,33100,33107,33140,33113,33114,33137,33120,33129,33148,33149,33133,33127,22605,23221,33160,33154,33169,28373,33187,33194,33228,26406,33226,33211,38689,38690,38691,38692,38693,38694,38695,38696,38697,38699,38700,38702,38703,38705,38707,38708,38709,38710,38711,38714,38715,38716,38717,38719,38720,38721,38722,38723,38724,38725,38726,38727,38728,38729,38730,38731,38732,38733,38734,38735,38736,38737,38740,38741,38743,38744,38746,38748,38749,38751,38755,38756,38758,38759,38760,38762,38763,38764,38765,38766,38767,38768,38769,38770,38773,38775,38776,38777,38778,38779,38781,38782,38783,38784,38785,38786,38787,38788,38790,38791,38792,38793,38794,38796,38798,38799,38800,38803,38805,38806,38807,38809,38810,38811,38812,38813,33217,33190,27428,27447,27449,27459,27462,27481,39121,39122,39123,39125,39129,39130,27571,24384,27586,35315,26e3,40785,26003,26044,26054,26052,26051,26060,26062,26066,26070,28800,28828,28822,28829,28859,28864,28855,28843,28849,28904,28874,28944,28947,28950,28975,28977,29043,29020,29032,28997,29042,29002,29048,29050,29080,29107,29109,29096,29088,29152,29140,29159,29177,29213,29224,28780,28952,29030,29113,25150,25149,25155,25160,25161,31035,31040,31046,31049,31067,31068,31059,31066,31074,31063,31072,31087,31079,31098,31109,31114,31130,31143,31155,24529,24528,38814,38815,38817,38818,38820,38821,38822,38823,38824,38825,38826,38828,38830,38832,38833,38835,38837,38838,38839,38840,38841,38842,38843,38844,38845,38846,38847,38848,38849,38850,38851,38852,38853,38854,38855,38856,38857,38858,38859,38860,38861,38862,38863,38864,38865,38866,38867,38868,38869,38870,38871,38872,38873,38874,38875,38876,38877,38878,38879,38880,38881,38882,38883,38884,38885,38888,38894,38895,38896,38897,38898,38900,38903,38904,38905,38906,38907,38908,38909,38910,38911,38912,38913,38914,38915,38916,38917,38918,38919,38920,38921,38922,38923,38924,38925,38926,24636,24669,24666,24679,24641,24665,24675,24747,24838,24845,24925,25001,24989,25035,25041,25094,32896,32895,27795,27894,28156,30710,30712,30720,30729,30743,30744,30737,26027,30765,30748,30749,30777,30778,30779,30751,30780,30757,30764,30755,30761,30798,30829,30806,30807,30758,30800,30791,30796,30826,30875,30867,30874,30855,30876,30881,30883,30898,30905,30885,30932,30937,30921,30956,30962,30981,30964,30995,31012,31006,31028,40859,40697,40699,40700,30449,30468,30477,30457,30471,30472,30490,30498,30489,30509,30502,30517,30520,30544,30545,30535,30531,30554,30568,38927,38928,38929,38930,38931,38932,38933,38934,38935,38936,38937,38938,38939,38940,38941,38942,38943,38944,38945,38946,38947,38948,38949,38950,38951,38952,38953,38954,38955,38956,38957,38958,38959,38960,38961,38962,38963,38964,38965,38966,38967,38968,38969,38970,38971,38972,38973,38974,38975,38976,38977,38978,38979,38980,38981,38982,38983,38984,38985,38986,38987,38988,38989,38990,38991,38992,38993,38994,38995,38996,38997,38998,38999,39e3,39001,39002,39003,39004,39005,39006,39007,39008,39009,39010,39011,39012,39013,39014,39015,39016,39017,39018,39019,39020,39021,39022,30562,30565,30591,30605,30589,30592,30604,30609,30623,30624,30640,30645,30653,30010,30016,30030,30027,30024,30043,30066,30073,30083,32600,32609,32607,35400,32616,32628,32625,32633,32641,32638,30413,30437,34866,38021,38022,38023,38027,38026,38028,38029,38031,38032,38036,38039,38037,38042,38043,38044,38051,38052,38059,38058,38061,38060,38063,38064,38066,38068,38070,38071,38072,38073,38074,38076,38077,38079,38084,38088,38089,38090,38091,38092,38093,38094,38096,38097,38098,38101,38102,38103,38105,38104,38107,38110,38111,38112,38114,38116,38117,38119,38120,38122,39023,39024,39025,39026,39027,39028,39051,39054,39058,39061,39065,39075,39080,39081,39082,39083,39084,39085,39086,39087,39088,39089,39090,39091,39092,39093,39094,39095,39096,39097,39098,39099,39100,39101,39102,39103,39104,39105,39106,39107,39108,39109,39110,39111,39112,39113,39114,39115,39116,39117,39119,39120,39124,39126,39127,39131,39132,39133,39136,39137,39138,39139,39140,39141,39142,39145,39146,39147,39148,39149,39150,39151,39152,39153,39154,39155,39156,39157,39158,39159,39160,39161,39162,39163,39164,39165,39166,39167,39168,39169,39170,39171,39172,39173,39174,39175,38121,38123,38126,38127,38131,38132,38133,38135,38137,38140,38141,38143,38147,38146,38150,38151,38153,38154,38157,38158,38159,38162,38163,38164,38165,38166,38168,38171,38173,38174,38175,38178,38186,38187,38185,38188,38193,38194,38196,38198,38199,38200,38204,38206,38207,38210,38197,38212,38213,38214,38217,38220,38222,38223,38226,38227,38228,38230,38231,38232,38233,38235,38238,38239,38237,38241,38242,38244,38245,38246,38247,38248,38249,38250,38251,38252,38255,38257,38258,38259,38202,30695,30700,38601,31189,31213,31203,31211,31238,23879,31235,31234,31262,31252,39176,39177,39178,39179,39180,39182,39183,39185,39186,39187,39188,39189,39190,39191,39192,39193,39194,39195,39196,39197,39198,39199,39200,39201,39202,39203,39204,39205,39206,39207,39208,39209,39210,39211,39212,39213,39215,39216,39217,39218,39219,39220,39221,39222,39223,39224,39225,39226,39227,39228,39229,39230,39231,39232,39233,39234,39235,39236,39237,39238,39239,39240,39241,39242,39243,39244,39245,39246,39247,39248,39249,39250,39251,39254,39255,39256,39257,39258,39259,39260,39261,39262,39263,39264,39265,39266,39268,39270,39283,39288,39289,39291,39294,39298,39299,39305,31289,31287,31313,40655,39333,31344,30344,30350,30355,30361,30372,29918,29920,29996,40480,40482,40488,40489,40490,40491,40492,40498,40497,40502,40504,40503,40505,40506,40510,40513,40514,40516,40518,40519,40520,40521,40523,40524,40526,40529,40533,40535,40538,40539,40540,40542,40547,40550,40551,40552,40553,40554,40555,40556,40561,40557,40563,30098,30100,30102,30112,30109,30124,30115,30131,30132,30136,30148,30129,30128,30147,30146,30166,30157,30179,30184,30182,30180,30187,30183,30211,30193,30204,30207,30224,30208,30213,30220,30231,30218,30245,30232,30229,30233,39308,39310,39322,39323,39324,39325,39326,39327,39328,39329,39330,39331,39332,39334,39335,39337,39338,39339,39340,39341,39342,39343,39344,39345,39346,39347,39348,39349,39350,39351,39352,39353,39354,39355,39356,39357,39358,39359,39360,39361,39362,39363,39364,39365,39366,39367,39368,39369,39370,39371,39372,39373,39374,39375,39376,39377,39378,39379,39380,39381,39382,39383,39384,39385,39386,39387,39388,39389,39390,39391,39392,39393,39394,39395,39396,39397,39398,39399,39400,39401,39402,39403,39404,39405,39406,39407,39408,39409,39410,39411,39412,39413,39414,39415,39416,39417,30235,30268,30242,30240,30272,30253,30256,30271,30261,30275,30270,30259,30285,30302,30292,30300,30294,30315,30319,32714,31462,31352,31353,31360,31366,31368,31381,31398,31392,31404,31400,31405,31411,34916,34921,34930,34941,34943,34946,34978,35014,34999,35004,35017,35042,35022,35043,35045,35057,35098,35068,35048,35070,35056,35105,35097,35091,35099,35082,35124,35115,35126,35137,35174,35195,30091,32997,30386,30388,30684,32786,32788,32790,32796,32800,32802,32805,32806,32807,32809,32808,32817,32779,32821,32835,32838,32845,32850,32873,32881,35203,39032,39040,39043,39418,39419,39420,39421,39422,39423,39424,39425,39426,39427,39428,39429,39430,39431,39432,39433,39434,39435,39436,39437,39438,39439,39440,39441,39442,39443,39444,39445,39446,39447,39448,39449,39450,39451,39452,39453,39454,39455,39456,39457,39458,39459,39460,39461,39462,39463,39464,39465,39466,39467,39468,39469,39470,39471,39472,39473,39474,39475,39476,39477,39478,39479,39480,39481,39482,39483,39484,39485,39486,39487,39488,39489,39490,39491,39492,39493,39494,39495,39496,39497,39498,39499,39500,39501,39502,39503,39504,39505,39506,39507,39508,39509,39510,39511,39512,39513,39049,39052,39053,39055,39060,39066,39067,39070,39071,39073,39074,39077,39078,34381,34388,34412,34414,34431,34426,34428,34427,34472,34445,34443,34476,34461,34471,34467,34474,34451,34473,34486,34500,34485,34510,34480,34490,34481,34479,34505,34511,34484,34537,34545,34546,34541,34547,34512,34579,34526,34548,34527,34520,34513,34563,34567,34552,34568,34570,34573,34569,34595,34619,34590,34597,34606,34586,34622,34632,34612,34609,34601,34615,34623,34690,34594,34685,34686,34683,34656,34672,34636,34670,34699,34643,34659,34684,34660,34649,34661,34707,34735,34728,34770,39514,39515,39516,39517,39518,39519,39520,39521,39522,39523,39524,39525,39526,39527,39528,39529,39530,39531,39538,39555,39561,39565,39566,39572,39573,39577,39590,39593,39594,39595,39596,39597,39598,39599,39602,39603,39604,39605,39609,39611,39613,39614,39615,39619,39620,39622,39623,39624,39625,39626,39629,39630,39631,39632,39634,39636,39637,39638,39639,39641,39642,39643,39644,39645,39646,39648,39650,39651,39652,39653,39655,39656,39657,39658,39660,39662,39664,39665,39666,39667,39668,39669,39670,39671,39672,39674,39676,39677,39678,39679,39680,39681,39682,39684,39685,39686,34758,34696,34693,34733,34711,34691,34731,34789,34732,34741,34739,34763,34771,34749,34769,34752,34762,34779,34794,34784,34798,34838,34835,34814,34826,34843,34849,34873,34876,32566,32578,32580,32581,33296,31482,31485,31496,31491,31492,31509,31498,31531,31503,31559,31544,31530,31513,31534,31537,31520,31525,31524,31539,31550,31518,31576,31578,31557,31605,31564,31581,31584,31598,31611,31586,31602,31601,31632,31654,31655,31672,31660,31645,31656,31621,31658,31644,31650,31659,31668,31697,31681,31692,31709,31706,31717,31718,31722,31756,31742,31740,31759,31766,31755,39687,39689,39690,39691,39692,39693,39694,39696,39697,39698,39700,39701,39702,39703,39704,39705,39706,39707,39708,39709,39710,39712,39713,39714,39716,39717,39718,39719,39720,39721,39722,39723,39724,39725,39726,39728,39729,39731,39732,39733,39734,39735,39736,39737,39738,39741,39742,39743,39744,39750,39754,39755,39756,39758,39760,39762,39763,39765,39766,39767,39768,39769,39770,39771,39772,39773,39774,39775,39776,39777,39778,39779,39780,39781,39782,39783,39784,39785,39786,39787,39788,39789,39790,39791,39792,39793,39794,39795,39796,39797,39798,39799,39800,39801,39802,39803,31775,31786,31782,31800,31809,31808,33278,33281,33282,33284,33260,34884,33313,33314,33315,33325,33327,33320,33323,33336,33339,33331,33332,33342,33348,33353,33355,33359,33370,33375,33384,34942,34949,34952,35032,35039,35166,32669,32671,32679,32687,32688,32690,31868,25929,31889,31901,31900,31902,31906,31922,31932,31933,31937,31943,31948,31949,31944,31941,31959,31976,33390,26280,32703,32718,32725,32741,32737,32742,32745,32750,32755,31992,32119,32166,32174,32327,32411,40632,40628,36211,36228,36244,36241,36273,36199,36205,35911,35913,37194,37200,37198,37199,37220,39804,39805,39806,39807,39808,39809,39810,39811,39812,39813,39814,39815,39816,39817,39818,39819,39820,39821,39822,39823,39824,39825,39826,39827,39828,39829,39830,39831,39832,39833,39834,39835,39836,39837,39838,39839,39840,39841,39842,39843,39844,39845,39846,39847,39848,39849,39850,39851,39852,39853,39854,39855,39856,39857,39858,39859,39860,39861,39862,39863,39864,39865,39866,39867,39868,39869,39870,39871,39872,39873,39874,39875,39876,39877,39878,39879,39880,39881,39882,39883,39884,39885,39886,39887,39888,39889,39890,39891,39892,39893,39894,39895,39896,39897,39898,39899,37218,37217,37232,37225,37231,37245,37246,37234,37236,37241,37260,37253,37264,37261,37265,37282,37283,37290,37293,37294,37295,37301,37300,37306,35925,40574,36280,36331,36357,36441,36457,36277,36287,36284,36282,36292,36310,36311,36314,36318,36302,36303,36315,36294,36332,36343,36344,36323,36345,36347,36324,36361,36349,36372,36381,36383,36396,36398,36387,36399,36410,36416,36409,36405,36413,36401,36425,36417,36418,36433,36434,36426,36464,36470,36476,36463,36468,36485,36495,36500,36496,36508,36510,35960,35970,35978,35973,35992,35988,26011,35286,35294,35290,35292,39900,39901,39902,39903,39904,39905,39906,39907,39908,39909,39910,39911,39912,39913,39914,39915,39916,39917,39918,39919,39920,39921,39922,39923,39924,39925,39926,39927,39928,39929,39930,39931,39932,39933,39934,39935,39936,39937,39938,39939,39940,39941,39942,39943,39944,39945,39946,39947,39948,39949,39950,39951,39952,39953,39954,39955,39956,39957,39958,39959,39960,39961,39962,39963,39964,39965,39966,39967,39968,39969,39970,39971,39972,39973,39974,39975,39976,39977,39978,39979,39980,39981,39982,39983,39984,39985,39986,39987,39988,39989,39990,39991,39992,39993,39994,39995,35301,35307,35311,35390,35622,38739,38633,38643,38639,38662,38657,38664,38671,38670,38698,38701,38704,38718,40832,40835,40837,40838,40839,40840,40841,40842,40844,40702,40715,40717,38585,38588,38589,38606,38610,30655,38624,37518,37550,37576,37694,37738,37834,37775,37950,37995,40063,40066,40069,40070,40071,40072,31267,40075,40078,40080,40081,40082,40084,40085,40090,40091,40094,40095,40096,40097,40098,40099,40101,40102,40103,40104,40105,40107,40109,40110,40112,40113,40114,40115,40116,40117,40118,40119,40122,40123,40124,40125,40132,40133,40134,40135,40138,40139,39996,39997,39998,39999,4e4,40001,40002,40003,40004,40005,40006,40007,40008,40009,40010,40011,40012,40013,40014,40015,40016,40017,40018,40019,40020,40021,40022,40023,40024,40025,40026,40027,40028,40029,40030,40031,40032,40033,40034,40035,40036,40037,40038,40039,40040,40041,40042,40043,40044,40045,40046,40047,40048,40049,40050,40051,40052,40053,40054,40055,40056,40057,40058,40059,40061,40062,40064,40067,40068,40073,40074,40076,40079,40083,40086,40087,40088,40089,40093,40106,40108,40111,40121,40126,40127,40128,40129,40130,40136,40137,40145,40146,40154,40155,40160,40161,40140,40141,40142,40143,40144,40147,40148,40149,40151,40152,40153,40156,40157,40159,40162,38780,38789,38801,38802,38804,38831,38827,38819,38834,38836,39601,39600,39607,40536,39606,39610,39612,39617,39616,39621,39618,39627,39628,39633,39749,39747,39751,39753,39752,39757,39761,39144,39181,39214,39253,39252,39647,39649,39654,39663,39659,39675,39661,39673,39688,39695,39699,39711,39715,40637,40638,32315,40578,40583,40584,40587,40594,37846,40605,40607,40667,40668,40669,40672,40671,40674,40681,40679,40677,40682,40687,40738,40748,40751,40761,40759,40765,40766,40772,40163,40164,40165,40166,40167,40168,40169,40170,40171,40172,40173,40174,40175,40176,40177,40178,40179,40180,40181,40182,40183,40184,40185,40186,40187,40188,40189,40190,40191,40192,40193,40194,40195,40196,40197,40198,40199,40200,40201,40202,40203,40204,40205,40206,40207,40208,40209,40210,40211,40212,40213,40214,40215,40216,40217,40218,40219,40220,40221,40222,40223,40224,40225,40226,40227,40228,40229,40230,40231,40232,40233,40234,40235,40236,40237,40238,40239,40240,40241,40242,40243,40244,40245,40246,40247,40248,40249,40250,40251,40252,40253,40254,40255,40256,40257,40258,57908,57909,57910,57911,57912,57913,57914,57915,57916,57917,57918,57919,57920,57921,57922,57923,57924,57925,57926,57927,57928,57929,57930,57931,57932,57933,57934,57935,57936,57937,57938,57939,57940,57941,57942,57943,57944,57945,57946,57947,57948,57949,57950,57951,57952,57953,57954,57955,57956,57957,57958,57959,57960,57961,57962,57963,57964,57965,57966,57967,57968,57969,57970,57971,57972,57973,57974,57975,57976,57977,57978,57979,57980,57981,57982,57983,57984,57985,57986,57987,57988,57989,57990,57991,57992,57993,57994,57995,57996,57997,57998,57999,58e3,58001,40259,40260,40261,40262,40263,40264,40265,40266,40267,40268,40269,40270,40271,40272,40273,40274,40275,40276,40277,40278,40279,40280,40281,40282,40283,40284,40285,40286,40287,40288,40289,40290,40291,40292,40293,40294,40295,40296,40297,40298,40299,40300,40301,40302,40303,40304,40305,40306,40307,40308,40309,40310,40311,40312,40313,40314,40315,40316,40317,40318,40319,40320,40321,40322,40323,40324,40325,40326,40327,40328,40329,40330,40331,40332,40333,40334,40335,40336,40337,40338,40339,40340,40341,40342,40343,40344,40345,40346,40347,40348,40349,40350,40351,40352,40353,40354,58002,58003,58004,58005,58006,58007,58008,58009,58010,58011,58012,58013,58014,58015,58016,58017,58018,58019,58020,58021,58022,58023,58024,58025,58026,58027,58028,58029,58030,58031,58032,58033,58034,58035,58036,58037,58038,58039,58040,58041,58042,58043,58044,58045,58046,58047,58048,58049,58050,58051,58052,58053,58054,58055,58056,58057,58058,58059,58060,58061,58062,58063,58064,58065,58066,58067,58068,58069,58070,58071,58072,58073,58074,58075,58076,58077,58078,58079,58080,58081,58082,58083,58084,58085,58086,58087,58088,58089,58090,58091,58092,58093,58094,58095,40355,40356,40357,40358,40359,40360,40361,40362,40363,40364,40365,40366,40367,40368,40369,40370,40371,40372,40373,40374,40375,40376,40377,40378,40379,40380,40381,40382,40383,40384,40385,40386,40387,40388,40389,40390,40391,40392,40393,40394,40395,40396,40397,40398,40399,40400,40401,40402,40403,40404,40405,40406,40407,40408,40409,40410,40411,40412,40413,40414,40415,40416,40417,40418,40419,40420,40421,40422,40423,40424,40425,40426,40427,40428,40429,40430,40431,40432,40433,40434,40435,40436,40437,40438,40439,40440,40441,40442,40443,40444,40445,40446,40447,40448,40449,40450,58096,58097,58098,58099,58100,58101,58102,58103,58104,58105,58106,58107,58108,58109,58110,58111,58112,58113,58114,58115,58116,58117,58118,58119,58120,58121,58122,58123,58124,58125,58126,58127,58128,58129,58130,58131,58132,58133,58134,58135,58136,58137,58138,58139,58140,58141,58142,58143,58144,58145,58146,58147,58148,58149,58150,58151,58152,58153,58154,58155,58156,58157,58158,58159,58160,58161,58162,58163,58164,58165,58166,58167,58168,58169,58170,58171,58172,58173,58174,58175,58176,58177,58178,58179,58180,58181,58182,58183,58184,58185,58186,58187,58188,58189,40451,40452,40453,40454,40455,40456,40457,40458,40459,40460,40461,40462,40463,40464,40465,40466,40467,40468,40469,40470,40471,40472,40473,40474,40475,40476,40477,40478,40484,40487,40494,40496,40500,40507,40508,40512,40525,40528,40530,40531,40532,40534,40537,40541,40543,40544,40545,40546,40549,40558,40559,40562,40564,40565,40566,40567,40568,40569,40570,40571,40572,40573,40576,40577,40579,40580,40581,40582,40585,40586,40588,40589,40590,40591,40592,40593,40596,40597,40598,40599,40600,40601,40602,40603,40604,40606,40608,40609,40610,40611,40612,40613,40615,40616,40617,40618,58190,58191,58192,58193,58194,58195,58196,58197,58198,58199,58200,58201,58202,58203,58204,58205,58206,58207,58208,58209,58210,58211,58212,58213,58214,58215,58216,58217,58218,58219,58220,58221,58222,58223,58224,58225,58226,58227,58228,58229,58230,58231,58232,58233,58234,58235,58236,58237,58238,58239,58240,58241,58242,58243,58244,58245,58246,58247,58248,58249,58250,58251,58252,58253,58254,58255,58256,58257,58258,58259,58260,58261,58262,58263,58264,58265,58266,58267,58268,58269,58270,58271,58272,58273,58274,58275,58276,58277,58278,58279,58280,58281,58282,58283,40619,40620,40621,40622,40623,40624,40625,40626,40627,40629,40630,40631,40633,40634,40636,40639,40640,40641,40642,40643,40645,40646,40647,40648,40650,40651,40652,40656,40658,40659,40661,40662,40663,40665,40666,40670,40673,40675,40676,40678,40680,40683,40684,40685,40686,40688,40689,40690,40691,40692,40693,40694,40695,40696,40698,40701,40703,40704,40705,40706,40707,40708,40709,40710,40711,40712,40713,40714,40716,40719,40721,40722,40724,40725,40726,40728,40730,40731,40732,40733,40734,40735,40737,40739,40740,40741,40742,40743,40744,40745,40746,40747,40749,40750,40752,40753,58284,58285,58286,58287,58288,58289,58290,58291,58292,58293,58294,58295,58296,58297,58298,58299,58300,58301,58302,58303,58304,58305,58306,58307,58308,58309,58310,58311,58312,58313,58314,58315,58316,58317,58318,58319,58320,58321,58322,58323,58324,58325,58326,58327,58328,58329,58330,58331,58332,58333,58334,58335,58336,58337,58338,58339,58340,58341,58342,58343,58344,58345,58346,58347,58348,58349,58350,58351,58352,58353,58354,58355,58356,58357,58358,58359,58360,58361,58362,58363,58364,58365,58366,58367,58368,58369,58370,58371,58372,58373,58374,58375,58376,58377,40754,40755,40756,40757,40758,40760,40762,40764,40767,40768,40769,40770,40771,40773,40774,40775,40776,40777,40778,40779,40780,40781,40782,40783,40786,40787,40788,40789,40790,40791,40792,40793,40794,40795,40796,40797,40798,40799,40800,40801,40802,40803,40804,40805,40806,40807,40808,40809,40810,40811,40812,40813,40814,40815,40816,40817,40818,40819,40820,40821,40822,40823,40824,40825,40826,40827,40828,40829,40830,40833,40834,40845,40846,40847,40848,40849,40850,40851,40852,40853,40854,40855,40856,40860,40861,40862,40865,40866,40867,40868,40869,63788,63865,63893,63975,63985,58378,58379,58380,58381,58382,58383,58384,58385,58386,58387,58388,58389,58390,58391,58392,58393,58394,58395,58396,58397,58398,58399,58400,58401,58402,58403,58404,58405,58406,58407,58408,58409,58410,58411,58412,58413,58414,58415,58416,58417,58418,58419,58420,58421,58422,58423,58424,58425,58426,58427,58428,58429,58430,58431,58432,58433,58434,58435,58436,58437,58438,58439,58440,58441,58442,58443,58444,58445,58446,58447,58448,58449,58450,58451,58452,58453,58454,58455,58456,58457,58458,58459,58460,58461,58462,58463,58464,58465,58466,58467,58468,58469,58470,58471,64012,64013,64014,64015,64017,64019,64020,64024,64031,64032,64033,64035,64036,64039,64040,64041,11905,59414,59415,59416,11908,13427,13383,11912,11915,59422,13726,13850,13838,11916,11927,14702,14616,59430,14799,14815,14963,14800,59435,59436,15182,15470,15584,11943,59441,59442,11946,16470,16735,11950,17207,11955,11958,11959,59451,17329,17324,11963,17373,17622,18017,17996,59459,18211,18217,18300,18317,11978,18759,18810,18813,18818,18819,18821,18822,18847,18843,18871,18870,59476,59477,19619,19615,19616,19617,19575,19618,19731,19732,19733,19734,19735,19736,19737,19886,59492,58472,58473,58474,58475,58476,58477,58478,58479,58480,58481,58482,58483,58484,58485,58486,58487,58488,58489,58490,58491,58492,58493,58494,58495,58496,58497,58498,58499,58500,58501,58502,58503,58504,58505,58506,58507,58508,58509,58510,58511,58512,58513,58514,58515,58516,58517,58518,58519,58520,58521,58522,58523,58524,58525,58526,58527,58528,58529,58530,58531,58532,58533,58534,58535,58536,58537,58538,58539,58540,58541,58542,58543,58544,58545,58546,58547,58548,58549,58550,58551,58552,58553,58554,58555,58556,58557,58558,58559,58560,58561,58562,58563,58564,58565],"gb18030-ranges":[[0,128],[36,165],[38,169],[45,178],[50,184],[81,216],[89,226],[95,235],[96,238],[100,244],[103,248],[104,251],[105,253],[109,258],[126,276],[133,284],[148,300],[172,325],[175,329],[179,334],[208,364],[306,463],[307,465],[308,467],[309,469],[310,471],[311,473],[312,475],[313,477],[341,506],[428,594],[443,610],[544,712],[545,716],[558,730],[741,930],[742,938],[749,962],[750,970],[805,1026],[819,1104],[820,1106],[7922,8209],[7924,8215],[7925,8218],[7927,8222],[7934,8231],[7943,8241],[7944,8244],[7945,8246],[7950,8252],[8062,8365],[8148,8452],[8149,8454],[8152,8458],[8164,8471],[8174,8482],[8236,8556],[8240,8570],[8262,8596],[8264,8602],[8374,8713],[8380,8720],[8381,8722],[8384,8726],[8388,8731],[8390,8737],[8392,8740],[8393,8742],[8394,8748],[8396,8751],[8401,8760],[8406,8766],[8416,8777],[8419,8781],[8424,8787],[8437,8802],[8439,8808],[8445,8816],[8482,8854],[8485,8858],[8496,8870],[8521,8896],[8603,8979],[8936,9322],[8946,9372],[9046,9548],[9050,9588],[9063,9616],[9066,9622],[9076,9634],[9092,9652],[9100,9662],[9108,9672],[9111,9676],[9113,9680],[9131,9702],[9162,9735],[9164,9738],[9218,9793],[9219,9795],[11329,11906],[11331,11909],[11334,11913],[11336,11917],[11346,11928],[11361,11944],[11363,11947],[11366,11951],[11370,11956],[11372,11960],[11375,11964],[11389,11979],[11682,12284],[11686,12292],[11687,12312],[11692,12319],[11694,12330],[11714,12351],[11716,12436],[11723,12447],[11725,12535],[11730,12543],[11736,12586],[11982,12842],[11989,12850],[12102,12964],[12336,13200],[12348,13215],[12350,13218],[12384,13253],[12393,13263],[12395,13267],[12397,13270],[12510,13384],[12553,13428],[12851,13727],[12962,13839],[12973,13851],[13738,14617],[13823,14703],[13919,14801],[13933,14816],[14080,14964],[14298,15183],[14585,15471],[14698,15585],[15583,16471],[15847,16736],[16318,17208],[16434,17325],[16438,17330],[16481,17374],[16729,17623],[17102,17997],[17122,18018],[17315,18212],[17320,18218],[17402,18301],[17418,18318],[17859,18760],[17909,18811],[17911,18814],[17915,18820],[17916,18823],[17936,18844],[17939,18848],[17961,18872],[18664,19576],[18703,19620],[18814,19738],[18962,19887],[19043,40870],[33469,59244],[33470,59336],[33471,59367],[33484,59413],[33485,59417],[33490,59423],[33497,59431],[33501,59437],[33505,59443],[33513,59452],[33520,59460],[33536,59478],[33550,59493],[37845,63789],[37921,63866],[37948,63894],[38029,63976],[38038,63986],[38064,64016],[38065,64018],[38066,64021],[38069,64025],[38075,64034],[38076,64037],[38078,64042],[39108,65074],[39109,65093],[39113,65107],[39114,65112],[39115,65127],[39116,65132],[39265,65375],[39394,65510],[189e3,65536]],jis0208:[12288,12289,12290,65292,65294,12539,65306,65307,65311,65281,12443,12444,180,65344,168,65342,65507,65343,12541,12542,12445,12446,12291,20189,12293,12294,12295,12540,8213,8208,65295,65340,65374,8741,65372,8230,8229,8216,8217,8220,8221,65288,65289,12308,12309,65339,65341,65371,65373,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,65291,65293,177,215,247,65309,8800,65308,65310,8806,8807,8734,8756,9794,9792,176,8242,8243,8451,65509,65284,65504,65505,65285,65283,65286,65290,65312,167,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8251,12306,8594,8592,8593,8595,12307,null,null,null,null,null,null,null,null,null,null,null,8712,8715,8838,8839,8834,8835,8746,8745,null,null,null,null,null,null,null,null,8743,8744,65506,8658,8660,8704,8707,null,null,null,null,null,null,null,null,null,null,null,8736,8869,8978,8706,8711,8801,8786,8810,8811,8730,8765,8733,8757,8747,8748,null,null,null,null,null,null,null,8491,8240,9839,9837,9834,8224,8225,182,null,null,null,null,9711,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,null,null,null,null,null,null,null,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,null,null,null,null,null,null,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,null,null,null,null,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,null,null,null,null,null,null,null,null,null,null,null,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,null,null,null,null,null,null,null,null,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,null,null,null,null,null,null,null,null,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,null,null,null,null,null,null,null,null,null,null,null,null,null,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,9327,9328,9329,9330,9331,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,null,13129,13076,13090,13133,13080,13095,13059,13110,13137,13143,13069,13094,13091,13099,13130,13115,13212,13213,13214,13198,13199,13252,13217,null,null,null,null,null,null,null,null,13179,12317,12319,8470,13261,8481,12964,12965,12966,12967,12968,12849,12850,12857,13182,13181,13180,8786,8801,8747,8750,8721,8730,8869,8736,8735,8895,8757,8745,8746,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20124,21782,23043,38463,21696,24859,25384,23030,36898,33909,33564,31312,24746,25569,28197,26093,33894,33446,39925,26771,22311,26017,25201,23451,22992,34427,39156,32098,32190,39822,25110,31903,34999,23433,24245,25353,26263,26696,38343,38797,26447,20197,20234,20301,20381,20553,22258,22839,22996,23041,23561,24799,24847,24944,26131,26885,28858,30031,30064,31227,32173,32239,32963,33806,34915,35586,36949,36986,21307,20117,20133,22495,32946,37057,30959,19968,22769,28322,36920,31282,33576,33419,39983,20801,21360,21693,21729,22240,23035,24341,39154,28139,32996,34093,38498,38512,38560,38907,21515,21491,23431,28879,32701,36802,38632,21359,40284,31418,19985,30867,33276,28198,22040,21764,27421,34074,39995,23013,21417,28006,29916,38287,22082,20113,36939,38642,33615,39180,21473,21942,23344,24433,26144,26355,26628,27704,27891,27945,29787,30408,31310,38964,33521,34907,35424,37613,28082,30123,30410,39365,24742,35585,36234,38322,27022,21421,20870,22290,22576,22852,23476,24310,24616,25513,25588,27839,28436,28814,28948,29017,29141,29503,32257,33398,33489,34199,36960,37467,40219,22633,26044,27738,29989,20985,22830,22885,24448,24540,25276,26106,27178,27431,27572,29579,32705,35158,40236,40206,40644,23713,27798,33659,20740,23627,25014,33222,26742,29281,20057,20474,21368,24681,28201,31311,38899,19979,21270,20206,20309,20285,20385,20339,21152,21487,22025,22799,23233,23478,23521,31185,26247,26524,26550,27468,27827,28779,29634,31117,31166,31292,31623,33457,33499,33540,33655,33775,33747,34662,35506,22057,36008,36838,36942,38686,34442,20420,23784,25105,29273,30011,33253,33469,34558,36032,38597,39187,39381,20171,20250,35299,22238,22602,22730,24315,24555,24618,24724,24674,25040,25106,25296,25913,39745,26214,26800,28023,28784,30028,30342,32117,33445,34809,38283,38542,35997,20977,21182,22806,21683,23475,23830,24936,27010,28079,30861,33995,34903,35442,37799,39608,28012,39336,34521,22435,26623,34510,37390,21123,22151,21508,24275,25313,25785,26684,26680,27579,29554,30906,31339,35226,35282,36203,36611,37101,38307,38548,38761,23398,23731,27005,38989,38990,25499,31520,27179,27263,26806,39949,28511,21106,21917,24688,25324,27963,28167,28369,33883,35088,36676,19988,39993,21494,26907,27194,38788,26666,20828,31427,33970,37340,37772,22107,40232,26658,33541,33841,31909,21e3,33477,29926,20094,20355,20896,23506,21002,21208,21223,24059,21914,22570,23014,23436,23448,23515,24178,24185,24739,24863,24931,25022,25563,25954,26577,26707,26874,27454,27475,27735,28450,28567,28485,29872,29976,30435,30475,31487,31649,31777,32233,32566,32752,32925,33382,33694,35251,35532,36011,36996,37969,38291,38289,38306,38501,38867,39208,33304,20024,21547,23736,24012,29609,30284,30524,23721,32747,36107,38593,38929,38996,39e3,20225,20238,21361,21916,22120,22522,22855,23305,23492,23696,24076,24190,24524,25582,26426,26071,26082,26399,26827,26820,27231,24112,27589,27671,27773,30079,31048,23395,31232,32e3,24509,35215,35352,36020,36215,36556,36637,39138,39438,39740,20096,20605,20736,22931,23452,25135,25216,25836,27450,29344,30097,31047,32681,34811,35516,35696,25516,33738,38816,21513,21507,21931,26708,27224,35440,30759,26485,40653,21364,23458,33050,34384,36870,19992,20037,20167,20241,21450,21560,23470,24339,24613,25937,26429,27714,27762,27875,28792,29699,31350,31406,31496,32026,31998,32102,26087,29275,21435,23621,24040,25298,25312,25369,28192,34394,35377,36317,37624,28417,31142,39770,20136,20139,20140,20379,20384,20689,20807,31478,20849,20982,21332,21281,21375,21483,21932,22659,23777,24375,24394,24623,24656,24685,25375,25945,27211,27841,29378,29421,30703,33016,33029,33288,34126,37111,37857,38911,39255,39514,20208,20957,23597,26241,26989,23616,26354,26997,29577,26704,31873,20677,21220,22343,24062,37670,26020,27427,27453,29748,31105,31165,31563,32202,33465,33740,34943,35167,35641,36817,37329,21535,37504,20061,20534,21477,21306,29399,29590,30697,33510,36527,39366,39368,39378,20855,24858,34398,21936,31354,20598,23507,36935,38533,20018,27355,37351,23633,23624,25496,31391,27795,38772,36705,31402,29066,38536,31874,26647,32368,26705,37740,21234,21531,34219,35347,32676,36557,37089,21350,34952,31041,20418,20670,21009,20804,21843,22317,29674,22411,22865,24418,24452,24693,24950,24935,25001,25522,25658,25964,26223,26690,28179,30054,31293,31995,32076,32153,32331,32619,33550,33610,34509,35336,35427,35686,36605,38938,40335,33464,36814,39912,21127,25119,25731,28608,38553,26689,20625,27424,27770,28500,31348,32080,34880,35363,26376,20214,20537,20518,20581,20860,21048,21091,21927,22287,22533,23244,24314,25010,25080,25331,25458,26908,27177,29309,29356,29486,30740,30831,32121,30476,32937,35211,35609,36066,36562,36963,37749,38522,38997,39443,40568,20803,21407,21427,24187,24358,28187,28304,29572,29694,32067,33335,35328,35578,38480,20046,20491,21476,21628,22266,22993,23396,24049,24235,24359,25144,25925,26543,28246,29392,31946,34996,32929,32993,33776,34382,35463,36328,37431,38599,39015,40723,20116,20114,20237,21320,21577,21566,23087,24460,24481,24735,26791,27278,29786,30849,35486,35492,35703,37264,20062,39881,20132,20348,20399,20505,20502,20809,20844,21151,21177,21246,21402,21475,21521,21518,21897,22353,22434,22909,23380,23389,23439,24037,24039,24055,24184,24195,24218,24247,24344,24658,24908,25239,25304,25511,25915,26114,26179,26356,26477,26657,26775,27083,27743,27946,28009,28207,28317,30002,30343,30828,31295,31968,32005,32024,32094,32177,32789,32771,32943,32945,33108,33167,33322,33618,34892,34913,35611,36002,36092,37066,37237,37489,30783,37628,38308,38477,38917,39321,39640,40251,21083,21163,21495,21512,22741,25335,28640,35946,36703,40633,20811,21051,21578,22269,31296,37239,40288,40658,29508,28425,33136,29969,24573,24794,39592,29403,36796,27492,38915,20170,22256,22372,22718,23130,24680,25031,26127,26118,26681,26801,28151,30165,32058,33390,39746,20123,20304,21449,21766,23919,24038,24046,26619,27801,29811,30722,35408,37782,35039,22352,24231,25387,20661,20652,20877,26368,21705,22622,22971,23472,24425,25165,25505,26685,27507,28168,28797,37319,29312,30741,30758,31085,25998,32048,33756,35009,36617,38555,21092,22312,26448,32618,36001,20916,22338,38442,22586,27018,32948,21682,23822,22524,30869,40442,20316,21066,21643,25662,26152,26388,26613,31364,31574,32034,37679,26716,39853,31545,21273,20874,21047,23519,25334,25774,25830,26413,27578,34217,38609,30352,39894,25420,37638,39851,30399,26194,19977,20632,21442,23665,24808,25746,25955,26719,29158,29642,29987,31639,32386,34453,35715,36059,37240,39184,26028,26283,27531,20181,20180,20282,20351,21050,21496,21490,21987,22235,22763,22987,22985,23039,23376,23629,24066,24107,24535,24605,25351,25903,23388,26031,26045,26088,26525,27490,27515,27663,29509,31049,31169,31992,32025,32043,32930,33026,33267,35222,35422,35433,35430,35468,35566,36039,36060,38604,39164,27503,20107,20284,20365,20816,23383,23546,24904,25345,26178,27425,28363,27835,29246,29885,30164,30913,31034,32780,32819,33258,33940,36766,27728,40575,24335,35672,40235,31482,36600,23437,38635,19971,21489,22519,22833,23241,23460,24713,28287,28422,30142,36074,23455,34048,31712,20594,26612,33437,23649,34122,32286,33294,20889,23556,25448,36198,26012,29038,31038,32023,32773,35613,36554,36974,34503,37034,20511,21242,23610,26451,28796,29237,37196,37320,37675,33509,23490,24369,24825,20027,21462,23432,25163,26417,27530,29417,29664,31278,33131,36259,37202,39318,20754,21463,21610,23551,25480,27193,32172,38656,22234,21454,21608,23447,23601,24030,20462,24833,25342,27954,31168,31179,32066,32333,32722,33261,33311,33936,34886,35186,35728,36468,36655,36913,37195,37228,38598,37276,20160,20303,20805,21313,24467,25102,26580,27713,28171,29539,32294,37325,37507,21460,22809,23487,28113,31069,32302,31899,22654,29087,20986,34899,36848,20426,23803,26149,30636,31459,33308,39423,20934,24490,26092,26991,27529,28147,28310,28516,30462,32020,24033,36981,37255,38918,20966,21021,25152,26257,26329,28186,24246,32210,32626,26360,34223,34295,35576,21161,21465,22899,24207,24464,24661,37604,38500,20663,20767,21213,21280,21319,21484,21736,21830,21809,22039,22888,22974,23100,23477,23558,23567,23569,23578,24196,24202,24288,24432,25215,25220,25307,25484,25463,26119,26124,26157,26230,26494,26786,27167,27189,27836,28040,28169,28248,28988,28966,29031,30151,30465,30813,30977,31077,31216,31456,31505,31911,32057,32918,33750,33931,34121,34909,35059,35359,35388,35412,35443,35937,36062,37284,37478,37758,37912,38556,38808,19978,19976,19998,20055,20887,21104,22478,22580,22732,23330,24120,24773,25854,26465,26454,27972,29366,30067,31331,33976,35698,37304,37664,22065,22516,39166,25325,26893,27542,29165,32340,32887,33394,35302,39135,34645,36785,23611,20280,20449,20405,21767,23072,23517,23529,24515,24910,25391,26032,26187,26862,27035,28024,28145,30003,30137,30495,31070,31206,32051,33251,33455,34218,35242,35386,36523,36763,36914,37341,38663,20154,20161,20995,22645,22764,23563,29978,23613,33102,35338,36805,38499,38765,31525,35535,38920,37218,22259,21416,36887,21561,22402,24101,25512,27700,28810,30561,31883,32736,34928,36930,37204,37648,37656,38543,29790,39620,23815,23913,25968,26530,36264,38619,25454,26441,26905,33733,38935,38592,35070,28548,25722,23544,19990,28716,30045,26159,20932,21046,21218,22995,24449,24615,25104,25919,25972,26143,26228,26866,26646,27491,28165,29298,29983,30427,31934,32854,22768,35069,35199,35488,35475,35531,36893,37266,38738,38745,25993,31246,33030,38587,24109,24796,25114,26021,26132,26512,30707,31309,31821,32318,33034,36012,36196,36321,36447,30889,20999,25305,25509,25666,25240,35373,31363,31680,35500,38634,32118,33292,34633,20185,20808,21315,21344,23459,23554,23574,24029,25126,25159,25776,26643,26676,27849,27973,27927,26579,28508,29006,29053,26059,31359,31661,32218,32330,32680,33146,33307,33337,34214,35438,36046,36341,36984,36983,37549,37521,38275,39854,21069,21892,28472,28982,20840,31109,32341,33203,31950,22092,22609,23720,25514,26366,26365,26970,29401,30095,30094,30990,31062,31199,31895,32032,32068,34311,35380,38459,36961,40736,20711,21109,21452,21474,20489,21930,22766,22863,29245,23435,23652,21277,24803,24819,25436,25475,25407,25531,25805,26089,26361,24035,27085,27133,28437,29157,20105,30185,30456,31379,31967,32207,32156,32865,33609,33624,33900,33980,34299,35013,36208,36865,36973,37783,38684,39442,20687,22679,24974,33235,34101,36104,36896,20419,20596,21063,21363,24687,25417,26463,28204,36275,36895,20439,23646,36042,26063,32154,21330,34966,20854,25539,23384,23403,23562,25613,26449,36956,20182,22810,22826,27760,35409,21822,22549,22949,24816,25171,26561,33333,26965,38464,39364,39464,20307,22534,23550,32784,23729,24111,24453,24608,24907,25140,26367,27888,28382,32974,33151,33492,34955,36024,36864,36910,38538,40667,39899,20195,21488,22823,31532,37261,38988,40441,28381,28711,21331,21828,23429,25176,25246,25299,27810,28655,29730,35351,37944,28609,35582,33592,20967,34552,21482,21481,20294,36948,36784,22890,33073,24061,31466,36799,26842,35895,29432,40008,27197,35504,20025,21336,22022,22374,25285,25506,26086,27470,28129,28251,28845,30701,31471,31658,32187,32829,32966,34507,35477,37723,22243,22727,24382,26029,26262,27264,27573,30007,35527,20516,30693,22320,24347,24677,26234,27744,30196,31258,32622,33268,34584,36933,39347,31689,30044,31481,31569,33988,36880,31209,31378,33590,23265,30528,20013,20210,23449,24544,25277,26172,26609,27880,34411,34935,35387,37198,37619,39376,27159,28710,29482,33511,33879,36015,19969,20806,20939,21899,23541,24086,24115,24193,24340,24373,24427,24500,25074,25361,26274,26397,28526,29266,30010,30522,32884,33081,33144,34678,35519,35548,36229,36339,37530,38263,38914,40165,21189,25431,30452,26389,27784,29645,36035,37806,38515,27941,22684,26894,27084,36861,37786,30171,36890,22618,26626,25524,27131,20291,28460,26584,36795,34086,32180,37716,26943,28528,22378,22775,23340,32044,29226,21514,37347,40372,20141,20302,20572,20597,21059,35998,21576,22564,23450,24093,24213,24237,24311,24351,24716,25269,25402,25552,26799,27712,30855,31118,31243,32224,33351,35330,35558,36420,36883,37048,37165,37336,40718,27877,25688,25826,25973,28404,30340,31515,36969,37841,28346,21746,24505,25764,36685,36845,37444,20856,22635,22825,23637,24215,28155,32399,29980,36028,36578,39003,28857,20253,27583,28593,3e4,38651,20814,21520,22581,22615,22956,23648,24466,26007,26460,28193,30331,33759,36077,36884,37117,37709,30757,30778,21162,24230,22303,22900,24594,20498,20826,20908,20941,20992,21776,22612,22616,22871,23445,23798,23947,24764,25237,25645,26481,26691,26812,26847,30423,28120,28271,28059,28783,29128,24403,30168,31095,31561,31572,31570,31958,32113,21040,33891,34153,34276,35342,35588,35910,36367,36867,36879,37913,38518,38957,39472,38360,20685,21205,21516,22530,23566,24999,25758,27934,30643,31461,33012,33796,36947,37509,23776,40199,21311,24471,24499,28060,29305,30563,31167,31716,27602,29420,35501,26627,27233,20984,31361,26932,23626,40182,33515,23493,37193,28702,22136,23663,24775,25958,27788,35930,36929,38931,21585,26311,37389,22856,37027,20869,20045,20970,34201,35598,28760,25466,37707,26978,39348,32260,30071,21335,26976,36575,38627,27741,20108,23612,24336,36841,21250,36049,32905,34425,24319,26085,20083,20837,22914,23615,38894,20219,22922,24525,35469,28641,31152,31074,23527,33905,29483,29105,24180,24565,25467,25754,29123,31896,20035,24316,20043,22492,22178,24745,28611,32013,33021,33075,33215,36786,35223,34468,24052,25226,25773,35207,26487,27874,27966,29750,30772,23110,32629,33453,39340,20467,24259,25309,25490,25943,26479,30403,29260,32972,32954,36649,37197,20493,22521,23186,26757,26995,29028,29437,36023,22770,36064,38506,36889,34687,31204,30695,33833,20271,21093,21338,25293,26575,27850,30333,31636,31893,33334,34180,36843,26333,28448,29190,32283,33707,39361,40614,20989,31665,30834,31672,32903,31560,27368,24161,32908,30033,30048,20843,37474,28300,30330,37271,39658,20240,32624,25244,31567,38309,40169,22138,22617,34532,38588,20276,21028,21322,21453,21467,24070,25644,26001,26495,27710,27726,29256,29359,29677,30036,32321,33324,34281,36009,31684,37318,29033,38930,39151,25405,26217,30058,30436,30928,34115,34542,21290,21329,21542,22915,24199,24444,24754,25161,25209,25259,26e3,27604,27852,30130,30382,30865,31192,32203,32631,32933,34987,35513,36027,36991,38750,39131,27147,31800,20633,23614,24494,26503,27608,29749,30473,32654,40763,26570,31255,21305,30091,39661,24422,33181,33777,32920,24380,24517,30050,31558,36924,26727,23019,23195,32016,30334,35628,20469,24426,27161,27703,28418,29922,31080,34920,35413,35961,24287,25551,30149,31186,33495,37672,37618,33948,34541,39981,21697,24428,25996,27996,28693,36007,36051,38971,25935,29942,19981,20184,22496,22827,23142,23500,20904,24067,24220,24598,25206,25975,26023,26222,28014,29238,31526,33104,33178,33433,35676,36e3,36070,36212,38428,38468,20398,25771,27494,33310,33889,34154,37096,23553,26963,39080,33914,34135,20239,21103,24489,24133,26381,31119,33145,35079,35206,28149,24343,25173,27832,20175,29289,39826,20998,21563,22132,22707,24996,25198,28954,22894,31881,31966,32027,38640,25991,32862,19993,20341,20853,22592,24163,24179,24330,26564,20006,34109,38281,38491,31859,38913,20731,22721,30294,30887,21029,30629,34065,31622,20559,22793,29255,31687,32232,36794,36820,36941,20415,21193,23081,24321,38829,20445,33303,37610,22275,25429,27497,29995,35036,36628,31298,21215,22675,24917,25098,26286,27597,31807,33769,20515,20472,21253,21574,22577,22857,23453,23792,23791,23849,24214,25265,25447,25918,26041,26379,27861,27873,28921,30770,32299,32990,33459,33804,34028,34562,35090,35370,35914,37030,37586,39165,40179,40300,20047,20129,20621,21078,22346,22952,24125,24536,24537,25151,26292,26395,26576,26834,20882,32033,32938,33192,35584,35980,36031,37502,38450,21536,38956,21271,20693,21340,22696,25778,26420,29287,30566,31302,37350,21187,27809,27526,22528,24140,22868,26412,32763,20961,30406,25705,30952,39764,40635,22475,22969,26151,26522,27598,21737,27097,24149,33180,26517,39850,26622,40018,26717,20134,20451,21448,25273,26411,27819,36804,20397,32365,40639,19975,24930,28288,28459,34067,21619,26410,39749,24051,31637,23724,23494,34588,28234,34001,31252,33032,22937,31885,27665,30496,21209,22818,28961,29279,30683,38695,40289,26891,23167,23064,20901,21517,21629,26126,30431,36855,37528,40180,23018,29277,28357,20813,26825,32191,32236,38754,40634,25720,27169,33538,22916,23391,27611,29467,30450,32178,32791,33945,20786,26408,40665,30446,26466,21247,39173,23588,25147,31870,36016,21839,24758,32011,38272,21249,20063,20918,22812,29242,32822,37326,24357,30690,21380,24441,32004,34220,35379,36493,38742,26611,34222,37971,24841,24840,27833,30290,35565,36664,21807,20305,20778,21191,21451,23461,24189,24736,24962,25558,26377,26586,28263,28044,29494,29495,30001,31056,35029,35480,36938,37009,37109,38596,34701,22805,20104,20313,19982,35465,36671,38928,20653,24188,22934,23481,24248,25562,25594,25793,26332,26954,27096,27915,28342,29076,29992,31407,32650,32768,33865,33993,35201,35617,36362,36965,38525,39178,24958,25233,27442,27779,28020,32716,32764,28096,32645,34746,35064,26469,33713,38972,38647,27931,32097,33853,37226,20081,21365,23888,27396,28651,34253,34349,35239,21033,21519,23653,26446,26792,29702,29827,30178,35023,35041,37324,38626,38520,24459,29575,31435,33870,25504,30053,21129,27969,28316,29705,30041,30827,31890,38534,31452,40845,20406,24942,26053,34396,20102,20142,20698,20001,20940,23534,26009,26753,28092,29471,30274,30637,31260,31975,33391,35538,36988,37327,38517,38936,21147,32209,20523,21400,26519,28107,29136,29747,33256,36650,38563,40023,40607,29792,22593,28057,32047,39006,20196,20278,20363,20919,21169,23994,24604,29618,31036,33491,37428,38583,38646,38666,40599,40802,26278,27508,21015,21155,28872,35010,24265,24651,24976,28451,29001,31806,32244,32879,34030,36899,37676,21570,39791,27347,28809,36034,36335,38706,21172,23105,24266,24324,26391,27004,27028,28010,28431,29282,29436,31725,32769,32894,34635,37070,20845,40595,31108,32907,37682,35542,20525,21644,35441,27498,36036,33031,24785,26528,40434,20121,20120,39952,35435,34241,34152,26880,28286,30871,33109,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,24332,19984,19989,20010,20017,20022,20028,20031,20034,20054,20056,20098,20101,35947,20106,33298,24333,20110,20126,20127,20128,20130,20144,20147,20150,20174,20173,20164,20166,20162,20183,20190,20205,20191,20215,20233,20314,20272,20315,20317,20311,20295,20342,20360,20367,20376,20347,20329,20336,20369,20335,20358,20374,20760,20436,20447,20430,20440,20443,20433,20442,20432,20452,20453,20506,20520,20500,20522,20517,20485,20252,20470,20513,20521,20524,20478,20463,20497,20486,20547,20551,26371,20565,20560,20552,20570,20566,20588,20600,20608,20634,20613,20660,20658,20681,20682,20659,20674,20694,20702,20709,20717,20707,20718,20729,20725,20745,20737,20738,20758,20757,20756,20762,20769,20794,20791,20796,20795,20799,20800,20818,20812,20820,20834,31480,20841,20842,20846,20864,20866,22232,20876,20873,20879,20881,20883,20885,20886,20900,20902,20898,20905,20906,20907,20915,20913,20914,20912,20917,20925,20933,20937,20955,20960,34389,20969,20973,20976,20981,20990,20996,21003,21012,21006,21031,21034,21038,21043,21049,21071,21060,21067,21068,21086,21076,21098,21108,21097,21107,21119,21117,21133,21140,21138,21105,21128,21137,36776,36775,21164,21165,21180,21173,21185,21197,21207,21214,21219,21222,39149,21216,21235,21237,21240,21241,21254,21256,30008,21261,21264,21263,21269,21274,21283,21295,21297,21299,21304,21312,21318,21317,19991,21321,21325,20950,21342,21353,21358,22808,21371,21367,21378,21398,21408,21414,21413,21422,21424,21430,21443,31762,38617,21471,26364,29166,21486,21480,21485,21498,21505,21565,21568,21548,21549,21564,21550,21558,21545,21533,21582,21647,21621,21646,21599,21617,21623,21616,21650,21627,21632,21622,21636,21648,21638,21703,21666,21688,21669,21676,21700,21704,21672,21675,21698,21668,21694,21692,21720,21733,21734,21775,21780,21757,21742,21741,21754,21730,21817,21824,21859,21836,21806,21852,21829,21846,21847,21816,21811,21853,21913,21888,21679,21898,21919,21883,21886,21912,21918,21934,21884,21891,21929,21895,21928,21978,21957,21983,21956,21980,21988,21972,22036,22007,22038,22014,22013,22043,22009,22094,22096,29151,22068,22070,22066,22072,22123,22116,22063,22124,22122,22150,22144,22154,22176,22164,22159,22181,22190,22198,22196,22210,22204,22209,22211,22208,22216,22222,22225,22227,22231,22254,22265,22272,22271,22276,22281,22280,22283,22285,22291,22296,22294,21959,22300,22310,22327,22328,22350,22331,22336,22351,22377,22464,22408,22369,22399,22409,22419,22432,22451,22436,22442,22448,22467,22470,22484,22482,22483,22538,22486,22499,22539,22553,22557,22642,22561,22626,22603,22640,27584,22610,22589,22649,22661,22713,22687,22699,22714,22750,22715,22712,22702,22725,22739,22737,22743,22745,22744,22757,22748,22756,22751,22767,22778,22777,22779,22780,22781,22786,22794,22800,22811,26790,22821,22828,22829,22834,22840,22846,31442,22869,22864,22862,22874,22872,22882,22880,22887,22892,22889,22904,22913,22941,20318,20395,22947,22962,22982,23016,23004,22925,23001,23002,23077,23071,23057,23068,23049,23066,23104,23148,23113,23093,23094,23138,23146,23194,23228,23230,23243,23234,23229,23267,23255,23270,23273,23254,23290,23291,23308,23307,23318,23346,23248,23338,23350,23358,23363,23365,23360,23377,23381,23386,23387,23397,23401,23408,23411,23413,23416,25992,23418,23424,23427,23462,23480,23491,23495,23497,23508,23504,23524,23526,23522,23518,23525,23531,23536,23542,23539,23557,23559,23560,23565,23571,23584,23586,23592,23608,23609,23617,23622,23630,23635,23632,23631,23409,23660,23662,20066,23670,23673,23692,23697,23700,22939,23723,23739,23734,23740,23735,23749,23742,23751,23769,23785,23805,23802,23789,23948,23786,23819,23829,23831,23900,23839,23835,23825,23828,23842,23834,23833,23832,23884,23890,23886,23883,23916,23923,23926,23943,23940,23938,23970,23965,23980,23982,23997,23952,23991,23996,24009,24013,24019,24018,24022,24027,24043,24050,24053,24075,24090,24089,24081,24091,24118,24119,24132,24131,24128,24142,24151,24148,24159,24162,24164,24135,24181,24182,24186,40636,24191,24224,24257,24258,24264,24272,24271,24278,24291,24285,24282,24283,24290,24289,24296,24297,24300,24305,24307,24304,24308,24312,24318,24323,24329,24413,24412,24331,24337,24342,24361,24365,24376,24385,24392,24396,24398,24367,24401,24406,24407,24409,24417,24429,24435,24439,24451,24450,24447,24458,24456,24465,24455,24478,24473,24472,24480,24488,24493,24508,24534,24571,24548,24568,24561,24541,24755,24575,24609,24672,24601,24592,24617,24590,24625,24603,24597,24619,24614,24591,24634,24666,24641,24682,24695,24671,24650,24646,24653,24675,24643,24676,24642,24684,24683,24665,24705,24717,24807,24707,24730,24708,24731,24726,24727,24722,24743,24715,24801,24760,24800,24787,24756,24560,24765,24774,24757,24792,24909,24853,24838,24822,24823,24832,24820,24826,24835,24865,24827,24817,24845,24846,24903,24894,24872,24871,24906,24895,24892,24876,24884,24893,24898,24900,24947,24951,24920,24921,24922,24939,24948,24943,24933,24945,24927,24925,24915,24949,24985,24982,24967,25004,24980,24986,24970,24977,25003,25006,25036,25034,25033,25079,25032,25027,25030,25018,25035,32633,25037,25062,25059,25078,25082,25076,25087,25085,25084,25086,25088,25096,25097,25101,25100,25108,25115,25118,25121,25130,25134,25136,25138,25139,25153,25166,25182,25187,25179,25184,25192,25212,25218,25225,25214,25234,25235,25238,25300,25219,25236,25303,25297,25275,25295,25343,25286,25812,25288,25308,25292,25290,25282,25287,25243,25289,25356,25326,25329,25383,25346,25352,25327,25333,25424,25406,25421,25628,25423,25494,25486,25472,25515,25462,25507,25487,25481,25503,25525,25451,25449,25534,25577,25536,25542,25571,25545,25554,25590,25540,25622,25652,25606,25619,25638,25654,25885,25623,25640,25615,25703,25711,25718,25678,25898,25749,25747,25765,25769,25736,25788,25818,25810,25797,25799,25787,25816,25794,25841,25831,33289,25824,25825,25260,25827,25839,25900,25846,25844,25842,25850,25856,25853,25880,25884,25861,25892,25891,25899,25908,25909,25911,25910,25912,30027,25928,25942,25941,25933,25944,25950,25949,25970,25976,25986,25987,35722,26011,26015,26027,26039,26051,26054,26049,26052,26060,26066,26075,26073,26080,26081,26097,26482,26122,26115,26107,26483,26165,26166,26164,26140,26191,26180,26185,26177,26206,26205,26212,26215,26216,26207,26210,26224,26243,26248,26254,26249,26244,26264,26269,26305,26297,26313,26302,26300,26308,26296,26326,26330,26336,26175,26342,26345,26352,26357,26359,26383,26390,26398,26406,26407,38712,26414,26431,26422,26433,26424,26423,26438,26462,26464,26457,26467,26468,26505,26480,26537,26492,26474,26508,26507,26534,26529,26501,26551,26607,26548,26604,26547,26601,26552,26596,26590,26589,26594,26606,26553,26574,26566,26599,27292,26654,26694,26665,26688,26701,26674,26702,26803,26667,26713,26723,26743,26751,26783,26767,26797,26772,26781,26779,26755,27310,26809,26740,26805,26784,26810,26895,26765,26750,26881,26826,26888,26840,26914,26918,26849,26892,26829,26836,26855,26837,26934,26898,26884,26839,26851,26917,26873,26848,26863,26920,26922,26906,26915,26913,26822,27001,26999,26972,27e3,26987,26964,27006,26990,26937,26996,26941,26969,26928,26977,26974,26973,27009,26986,27058,27054,27088,27071,27073,27091,27070,27086,23528,27082,27101,27067,27075,27047,27182,27025,27040,27036,27029,27060,27102,27112,27138,27163,27135,27402,27129,27122,27111,27141,27057,27166,27117,27156,27115,27146,27154,27329,27171,27155,27204,27148,27250,27190,27256,27207,27234,27225,27238,27208,27192,27170,27280,27277,27296,27268,27298,27299,27287,34327,27323,27331,27330,27320,27315,27308,27358,27345,27359,27306,27354,27370,27387,27397,34326,27386,27410,27414,39729,27423,27448,27447,30428,27449,39150,27463,27459,27465,27472,27481,27476,27483,27487,27489,27512,27513,27519,27520,27524,27523,27533,27544,27541,27550,27556,27562,27563,27567,27570,27569,27571,27575,27580,27590,27595,27603,27615,27628,27627,27635,27631,40638,27656,27667,27668,27675,27684,27683,27742,27733,27746,27754,27778,27789,27802,27777,27803,27774,27752,27763,27794,27792,27844,27889,27859,27837,27863,27845,27869,27822,27825,27838,27834,27867,27887,27865,27882,27935,34893,27958,27947,27965,27960,27929,27957,27955,27922,27916,28003,28051,28004,27994,28025,27993,28046,28053,28644,28037,28153,28181,28170,28085,28103,28134,28088,28102,28140,28126,28108,28136,28114,28101,28154,28121,28132,28117,28138,28142,28205,28270,28206,28185,28274,28255,28222,28195,28267,28203,28278,28237,28191,28227,28218,28238,28196,28415,28189,28216,28290,28330,28312,28361,28343,28371,28349,28335,28356,28338,28372,28373,28303,28325,28354,28319,28481,28433,28748,28396,28408,28414,28479,28402,28465,28399,28466,28364,28478,28435,28407,28550,28538,28536,28545,28544,28527,28507,28659,28525,28546,28540,28504,28558,28561,28610,28518,28595,28579,28577,28580,28601,28614,28586,28639,28629,28652,28628,28632,28657,28654,28635,28681,28683,28666,28689,28673,28687,28670,28699,28698,28532,28701,28696,28703,28720,28734,28722,28753,28771,28825,28818,28847,28913,28844,28856,28851,28846,28895,28875,28893,28889,28937,28925,28956,28953,29029,29013,29064,29030,29026,29004,29014,29036,29071,29179,29060,29077,29096,29100,29143,29113,29118,29138,29129,29140,29134,29152,29164,29159,29173,29180,29177,29183,29197,29200,29211,29224,29229,29228,29232,29234,29243,29244,29247,29248,29254,29259,29272,29300,29310,29314,29313,29319,29330,29334,29346,29351,29369,29362,29379,29382,29380,29390,29394,29410,29408,29409,29433,29431,20495,29463,29450,29468,29462,29469,29492,29487,29481,29477,29502,29518,29519,40664,29527,29546,29544,29552,29560,29557,29563,29562,29640,29619,29646,29627,29632,29669,29678,29662,29858,29701,29807,29733,29688,29746,29754,29781,29759,29791,29785,29761,29788,29801,29808,29795,29802,29814,29822,29835,29854,29863,29898,29903,29908,29681,29920,29923,29927,29929,29934,29938,29936,29937,29944,29943,29956,29955,29957,29964,29966,29965,29973,29971,29982,29990,29996,30012,30020,30029,30026,30025,30043,30022,30042,30057,30052,30055,30059,30061,30072,30070,30086,30087,30068,30090,30089,30082,30100,30106,30109,30117,30115,30146,30131,30147,30133,30141,30136,30140,30129,30157,30154,30162,30169,30179,30174,30206,30207,30204,30209,30192,30202,30194,30195,30219,30221,30217,30239,30247,30240,30241,30242,30244,30260,30256,30267,30279,30280,30278,30300,30296,30305,30306,30312,30313,30314,30311,30316,30320,30322,30326,30328,30332,30336,30339,30344,30347,30350,30358,30355,30361,30362,30384,30388,30392,30393,30394,30402,30413,30422,30418,30430,30433,30437,30439,30442,34351,30459,30472,30471,30468,30505,30500,30494,30501,30502,30491,30519,30520,30535,30554,30568,30571,30555,30565,30591,30590,30585,30606,30603,30609,30624,30622,30640,30646,30649,30655,30652,30653,30651,30663,30669,30679,30682,30684,30691,30702,30716,30732,30738,31014,30752,31018,30789,30862,30836,30854,30844,30874,30860,30883,30901,30890,30895,30929,30918,30923,30932,30910,30908,30917,30922,30956,30951,30938,30973,30964,30983,30994,30993,31001,31020,31019,31040,31072,31063,31071,31066,31061,31059,31098,31103,31114,31133,31143,40779,31146,31150,31155,31161,31162,31177,31189,31207,31212,31201,31203,31240,31245,31256,31257,31264,31263,31104,31281,31291,31294,31287,31299,31319,31305,31329,31330,31337,40861,31344,31353,31357,31368,31383,31381,31384,31382,31401,31432,31408,31414,31429,31428,31423,36995,31431,31434,31437,31439,31445,31443,31449,31450,31453,31457,31458,31462,31469,31472,31490,31503,31498,31494,31539,31512,31513,31518,31541,31528,31542,31568,31610,31492,31565,31499,31564,31557,31605,31589,31604,31591,31600,31601,31596,31598,31645,31640,31647,31629,31644,31642,31627,31634,31631,31581,31641,31691,31681,31692,31695,31668,31686,31709,31721,31761,31764,31718,31717,31840,31744,31751,31763,31731,31735,31767,31757,31734,31779,31783,31786,31775,31799,31787,31805,31820,31811,31828,31823,31808,31824,31832,31839,31844,31830,31845,31852,31861,31875,31888,31908,31917,31906,31915,31905,31912,31923,31922,31921,31918,31929,31933,31936,31941,31938,31960,31954,31964,31970,39739,31983,31986,31988,31990,31994,32006,32002,32028,32021,32010,32069,32075,32046,32050,32063,32053,32070,32115,32086,32078,32114,32104,32110,32079,32099,32147,32137,32091,32143,32125,32155,32186,32174,32163,32181,32199,32189,32171,32317,32162,32175,32220,32184,32159,32176,32216,32221,32228,32222,32251,32242,32225,32261,32266,32291,32289,32274,32305,32287,32265,32267,32290,32326,32358,32315,32309,32313,32323,32311,32306,32314,32359,32349,32342,32350,32345,32346,32377,32362,32361,32380,32379,32387,32213,32381,36782,32383,32392,32393,32396,32402,32400,32403,32404,32406,32398,32411,32412,32568,32570,32581,32588,32589,32590,32592,32593,32597,32596,32600,32607,32608,32616,32617,32615,32632,32642,32646,32643,32648,32647,32652,32660,32670,32669,32666,32675,32687,32690,32697,32686,32694,32696,35697,32709,32710,32714,32725,32724,32737,32742,32745,32755,32761,39132,32774,32772,32779,32786,32792,32793,32796,32801,32808,32831,32827,32842,32838,32850,32856,32858,32863,32866,32872,32883,32882,32880,32886,32889,32893,32895,32900,32902,32901,32923,32915,32922,32941,20880,32940,32987,32997,32985,32989,32964,32986,32982,33033,33007,33009,33051,33065,33059,33071,33099,38539,33094,33086,33107,33105,33020,33137,33134,33125,33126,33140,33155,33160,33162,33152,33154,33184,33173,33188,33187,33119,33171,33193,33200,33205,33214,33208,33213,33216,33218,33210,33225,33229,33233,33241,33240,33224,33242,33247,33248,33255,33274,33275,33278,33281,33282,33285,33287,33290,33293,33296,33302,33321,33323,33336,33331,33344,33369,33368,33373,33370,33375,33380,33378,33384,33386,33387,33326,33393,33399,33400,33406,33421,33426,33451,33439,33467,33452,33505,33507,33503,33490,33524,33523,33530,33683,33539,33531,33529,33502,33542,33500,33545,33497,33589,33588,33558,33586,33585,33600,33593,33616,33605,33583,33579,33559,33560,33669,33690,33706,33695,33698,33686,33571,33678,33671,33674,33660,33717,33651,33653,33696,33673,33704,33780,33811,33771,33742,33789,33795,33752,33803,33729,33783,33799,33760,33778,33805,33826,33824,33725,33848,34054,33787,33901,33834,33852,34138,33924,33911,33899,33965,33902,33922,33897,33862,33836,33903,33913,33845,33994,33890,33977,33983,33951,34009,33997,33979,34010,34e3,33985,33990,34006,33953,34081,34047,34036,34071,34072,34092,34079,34069,34068,34044,34112,34147,34136,34120,34113,34306,34123,34133,34176,34212,34184,34193,34186,34216,34157,34196,34203,34282,34183,34204,34167,34174,34192,34249,34234,34255,34233,34256,34261,34269,34277,34268,34297,34314,34323,34315,34302,34298,34310,34338,34330,34352,34367,34381,20053,34388,34399,34407,34417,34451,34467,34473,34474,34443,34444,34486,34479,34500,34502,34480,34505,34851,34475,34516,34526,34537,34540,34527,34523,34543,34578,34566,34568,34560,34563,34555,34577,34569,34573,34553,34570,34612,34623,34615,34619,34597,34601,34586,34656,34655,34680,34636,34638,34676,34647,34664,34670,34649,34643,34659,34666,34821,34722,34719,34690,34735,34763,34749,34752,34768,38614,34731,34756,34739,34759,34758,34747,34799,34802,34784,34831,34829,34814,34806,34807,34830,34770,34833,34838,34837,34850,34849,34865,34870,34873,34855,34875,34884,34882,34898,34905,34910,34914,34923,34945,34942,34974,34933,34941,34997,34930,34946,34967,34962,34990,34969,34978,34957,34980,34992,35007,34993,35011,35012,35028,35032,35033,35037,35065,35074,35068,35060,35048,35058,35076,35084,35082,35091,35139,35102,35109,35114,35115,35137,35140,35131,35126,35128,35148,35101,35168,35166,35174,35172,35181,35178,35183,35188,35191,35198,35203,35208,35210,35219,35224,35233,35241,35238,35244,35247,35250,35258,35261,35263,35264,35290,35292,35293,35303,35316,35320,35331,35350,35344,35340,35355,35357,35365,35382,35393,35419,35410,35398,35400,35452,35437,35436,35426,35461,35458,35460,35496,35489,35473,35493,35494,35482,35491,35524,35533,35522,35546,35563,35571,35559,35556,35569,35604,35552,35554,35575,35550,35547,35596,35591,35610,35553,35606,35600,35607,35616,35635,38827,35622,35627,35646,35624,35649,35660,35663,35662,35657,35670,35675,35674,35691,35679,35692,35695,35700,35709,35712,35724,35726,35730,35731,35734,35737,35738,35898,35905,35903,35912,35916,35918,35920,35925,35938,35948,35960,35962,35970,35977,35973,35978,35981,35982,35988,35964,35992,25117,36013,36010,36029,36018,36019,36014,36022,36040,36033,36068,36067,36058,36093,36090,36091,36100,36101,36106,36103,36111,36109,36112,40782,36115,36045,36116,36118,36199,36205,36209,36211,36225,36249,36290,36286,36282,36303,36314,36310,36300,36315,36299,36330,36331,36319,36323,36348,36360,36361,36351,36381,36382,36368,36383,36418,36405,36400,36404,36426,36423,36425,36428,36432,36424,36441,36452,36448,36394,36451,36437,36470,36466,36476,36481,36487,36485,36484,36491,36490,36499,36497,36500,36505,36522,36513,36524,36528,36550,36529,36542,36549,36552,36555,36571,36579,36604,36603,36587,36606,36618,36613,36629,36626,36633,36627,36636,36639,36635,36620,36646,36659,36667,36665,36677,36674,36670,36684,36681,36678,36686,36695,36700,36706,36707,36708,36764,36767,36771,36781,36783,36791,36826,36837,36834,36842,36847,36999,36852,36869,36857,36858,36881,36885,36897,36877,36894,36886,36875,36903,36918,36917,36921,36856,36943,36944,36945,36946,36878,36937,36926,36950,36952,36958,36968,36975,36982,38568,36978,36994,36989,36993,36992,37002,37001,37007,37032,37039,37041,37045,37090,37092,25160,37083,37122,37138,37145,37170,37168,37194,37206,37208,37219,37221,37225,37235,37234,37259,37257,37250,37282,37291,37295,37290,37301,37300,37306,37312,37313,37321,37323,37328,37334,37343,37345,37339,37372,37365,37366,37406,37375,37396,37420,37397,37393,37470,37463,37445,37449,37476,37448,37525,37439,37451,37456,37532,37526,37523,37531,37466,37583,37561,37559,37609,37647,37626,37700,37678,37657,37666,37658,37667,37690,37685,37691,37724,37728,37756,37742,37718,37808,37804,37805,37780,37817,37846,37847,37864,37861,37848,37827,37853,37840,37832,37860,37914,37908,37907,37891,37895,37904,37942,37931,37941,37921,37946,37953,37970,37956,37979,37984,37986,37982,37994,37417,38e3,38005,38007,38013,37978,38012,38014,38017,38015,38274,38279,38282,38292,38294,38296,38297,38304,38312,38311,38317,38332,38331,38329,38334,38346,28662,38339,38349,38348,38357,38356,38358,38364,38369,38373,38370,38433,38440,38446,38447,38466,38476,38479,38475,38519,38492,38494,38493,38495,38502,38514,38508,38541,38552,38549,38551,38570,38567,38577,38578,38576,38580,38582,38584,38585,38606,38603,38601,38605,35149,38620,38669,38613,38649,38660,38662,38664,38675,38670,38673,38671,38678,38681,38692,38698,38704,38713,38717,38718,38724,38726,38728,38722,38729,38748,38752,38756,38758,38760,21202,38763,38769,38777,38789,38780,38785,38778,38790,38795,38799,38800,38812,38824,38822,38819,38835,38836,38851,38854,38856,38859,38876,38893,40783,38898,31455,38902,38901,38927,38924,38968,38948,38945,38967,38973,38982,38991,38987,39019,39023,39024,39025,39028,39027,39082,39087,39089,39094,39108,39107,39110,39145,39147,39171,39177,39186,39188,39192,39201,39197,39198,39204,39200,39212,39214,39229,39230,39234,39241,39237,39248,39243,39249,39250,39244,39253,39319,39320,39333,39341,39342,39356,39391,39387,39389,39384,39377,39405,39406,39409,39410,39419,39416,39425,39439,39429,39394,39449,39467,39479,39493,39490,39488,39491,39486,39509,39501,39515,39511,39519,39522,39525,39524,39529,39531,39530,39597,39600,39612,39616,39631,39633,39635,39636,39646,39647,39650,39651,39654,39663,39659,39662,39668,39665,39671,39675,39686,39704,39706,39711,39714,39715,39717,39719,39720,39721,39722,39726,39727,39730,39748,39747,39759,39757,39758,39761,39768,39796,39827,39811,39825,39830,39831,39839,39840,39848,39860,39872,39882,39865,39878,39887,39889,39890,39907,39906,39908,39892,39905,39994,39922,39921,39920,39957,39956,39945,39955,39948,39942,39944,39954,39946,39940,39982,39963,39973,39972,39969,39984,40007,39986,40006,39998,40026,40032,40039,40054,40056,40167,40172,40176,40201,40200,40171,40195,40198,40234,40230,40367,40227,40223,40260,40213,40210,40257,40255,40254,40262,40264,40285,40286,40292,40273,40272,40281,40306,40329,40327,40363,40303,40314,40346,40356,40361,40370,40388,40385,40379,40376,40378,40390,40399,40386,40409,40403,40440,40422,40429,40431,40445,40474,40475,40478,40565,40569,40573,40577,40584,40587,40588,40594,40597,40593,40605,40613,40617,40632,40618,40621,38753,40652,40654,40655,40656,40660,40668,40670,40669,40672,40677,40680,40687,40692,40694,40695,40697,40699,40700,40701,40711,40712,30391,40725,40737,40748,40766,40778,40786,40788,40803,40799,40800,40801,40806,40807,40812,40810,40823,40818,40822,40853,40860,40864,22575,27079,36953,29796,20956,29081,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32394,35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,20008,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,21255,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,64016,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,23532,23582,23718,23738,23797,23847,23891,64017,23874,23917,23992,23993,24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26171,26121,26158,26142,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,63785,26470,26555,26706,26560,26625,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,28712,28805,28843,28943,28932,29020,28998,28999,64021,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,29794,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,64024,64025,64026,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,32092,32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,64032,64033,34823,35061,35346,35383,35449,35495,35518,35551,64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,64036,64037,36967,37086,64038,37141,37159,37338,37335,37342,37357,37358,37348,37349,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,37495,37496,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,63964,64041,38557,38575,38707,38715,38723,38733,38735,38737,38741,38999,39013,64042,64043,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,39936,40304,40299,64045,40473,40657,null,null,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,65506,65508,65287,65282,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,65506,65508,65287,65282,12849,8470,8481,8757,32394,35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,20008,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,21255,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,64016,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,23532,23582,23718,23738,23797,23847,23891,64017,23874,23917,23992,23993,24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26171,26121,26158,26142,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,63785,26470,26555,26706,26560,26625,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,28712,28805,28843,28943,28932,29020,28998,28999,64021,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,29794,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,64024,64025,64026,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,32092,32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,64032,64033,34823,35061,35346,35383,35449,35495,35518,35551,64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,64036,64037,36967,37086,64038,37141,37159,37338,37335,37342,37357,37358,37348,37349,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,37495,37496,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,63964,64041,38557,38575,38707,38715,38723,38733,38735,38737,38741,38999,39013,64042,64043,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,39936,40304,40299,64045,40473,40657,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],jis0212:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,728,711,184,729,733,175,731,730,65374,900,901,null,null,null,null,null,null,null,null,161,166,191,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,186,170,169,174,8482,164,8470,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,902,904,905,906,938,null,908,null,910,939,null,911,null,null,null,null,940,941,942,943,970,912,972,962,973,971,944,974,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1038,1039,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1118,1119,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,198,272,null,294,null,306,null,321,319,null,330,216,338,null,358,222,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,230,273,240,295,305,307,312,322,320,329,331,248,339,223,359,254,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,193,192,196,194,258,461,256,260,197,195,262,264,268,199,266,270,201,200,203,202,282,278,274,280,null,284,286,290,288,292,205,204,207,206,463,304,298,302,296,308,310,313,317,315,323,327,325,209,211,210,214,212,465,336,332,213,340,344,342,346,348,352,350,356,354,218,217,220,219,364,467,368,362,370,366,360,471,475,473,469,372,221,376,374,377,381,379,null,null,null,null,null,null,null,225,224,228,226,259,462,257,261,229,227,263,265,269,231,267,271,233,232,235,234,283,279,275,281,501,285,287,null,289,293,237,236,239,238,464,null,299,303,297,309,311,314,318,316,324,328,326,241,243,242,246,244,466,337,333,245,341,345,343,347,349,353,351,357,355,250,249,252,251,365,468,369,363,371,367,361,472,476,474,470,373,253,255,375,378,382,380,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,19970,19972,19973,19980,19986,19999,20003,20004,20008,20011,20014,20015,20016,20021,20032,20033,20036,20039,20049,20058,20060,20067,20072,20073,20084,20085,20089,20095,20109,20118,20119,20125,20143,20153,20163,20176,20186,20187,20192,20193,20194,20200,20207,20209,20211,20213,20221,20222,20223,20224,20226,20227,20232,20235,20236,20242,20245,20246,20247,20249,20270,20273,20320,20275,20277,20279,20281,20283,20286,20288,20290,20296,20297,20299,20300,20306,20308,20310,20312,20319,20323,20330,20332,20334,20337,20343,20344,20345,20346,20349,20350,20353,20354,20356,20357,20361,20362,20364,20366,20368,20370,20371,20372,20375,20377,20378,20382,20383,20402,20407,20409,20411,20412,20413,20414,20416,20417,20421,20422,20424,20425,20427,20428,20429,20431,20434,20444,20448,20450,20464,20466,20476,20477,20479,20480,20481,20484,20487,20490,20492,20494,20496,20499,20503,20504,20507,20508,20509,20510,20514,20519,20526,20528,20530,20531,20533,20544,20545,20546,20549,20550,20554,20556,20558,20561,20562,20563,20567,20569,20575,20576,20578,20579,20582,20583,20586,20589,20592,20593,20539,20609,20611,20612,20614,20618,20622,20623,20624,20626,20627,20628,20630,20635,20636,20638,20639,20640,20641,20642,20650,20655,20656,20665,20666,20669,20672,20675,20676,20679,20684,20686,20688,20691,20692,20696,20700,20701,20703,20706,20708,20710,20712,20713,20719,20721,20726,20730,20734,20739,20742,20743,20744,20747,20748,20749,20750,20722,20752,20759,20761,20763,20764,20765,20766,20771,20775,20776,20780,20781,20783,20785,20787,20788,20789,20792,20793,20802,20810,20815,20819,20821,20823,20824,20831,20836,20838,20862,20867,20868,20875,20878,20888,20893,20897,20899,20909,20920,20922,20924,20926,20927,20930,20936,20943,20945,20946,20947,20949,20952,20958,20962,20965,20974,20978,20979,20980,20983,20993,20994,20997,21010,21011,21013,21014,21016,21026,21032,21041,21042,21045,21052,21061,21065,21077,21079,21080,21082,21084,21087,21088,21089,21094,21102,21111,21112,21113,21120,21122,21125,21130,21132,21139,21141,21142,21143,21144,21146,21148,21156,21157,21158,21159,21167,21168,21174,21175,21176,21178,21179,21181,21184,21188,21190,21192,21196,21199,21201,21204,21206,21211,21212,21217,21221,21224,21225,21226,21228,21232,21233,21236,21238,21239,21248,21251,21258,21259,21260,21265,21267,21272,21275,21276,21278,21279,21285,21287,21288,21289,21291,21292,21293,21296,21298,21301,21308,21309,21310,21314,21324,21323,21337,21339,21345,21347,21349,21356,21357,21362,21369,21374,21379,21383,21384,21390,21395,21396,21401,21405,21409,21412,21418,21419,21423,21426,21428,21429,21431,21432,21434,21437,21440,21445,21455,21458,21459,21461,21466,21469,21470,21472,21478,21479,21493,21506,21523,21530,21537,21543,21544,21546,21551,21553,21556,21557,21571,21572,21575,21581,21583,21598,21602,21604,21606,21607,21609,21611,21613,21614,21620,21631,21633,21635,21637,21640,21641,21645,21649,21653,21654,21660,21663,21665,21670,21671,21673,21674,21677,21678,21681,21687,21689,21690,21691,21695,21702,21706,21709,21710,21728,21738,21740,21743,21750,21756,21758,21759,21760,21761,21765,21768,21769,21772,21773,21774,21781,21802,21803,21810,21813,21814,21819,21820,21821,21825,21831,21833,21834,21837,21840,21841,21848,21850,21851,21854,21856,21857,21860,21862,21887,21889,21890,21894,21896,21902,21903,21905,21906,21907,21908,21911,21923,21924,21933,21938,21951,21953,21955,21958,21961,21963,21964,21966,21969,21970,21971,21975,21976,21979,21982,21986,21993,22006,22015,22021,22024,22026,22029,22030,22031,22032,22033,22034,22041,22060,22064,22067,22069,22071,22073,22075,22076,22077,22079,22080,22081,22083,22084,22086,22089,22091,22093,22095,22100,22110,22112,22113,22114,22115,22118,22121,22125,22127,22129,22130,22133,22148,22149,22152,22155,22156,22165,22169,22170,22173,22174,22175,22182,22183,22184,22185,22187,22188,22189,22193,22195,22199,22206,22213,22217,22218,22219,22223,22224,22220,22221,22233,22236,22237,22239,22241,22244,22245,22246,22247,22248,22257,22251,22253,22262,22263,22273,22274,22279,22282,22284,22289,22293,22298,22299,22301,22304,22306,22307,22308,22309,22313,22314,22316,22318,22319,22323,22324,22333,22334,22335,22341,22342,22348,22349,22354,22370,22373,22375,22376,22379,22381,22382,22383,22384,22385,22387,22388,22389,22391,22393,22394,22395,22396,22398,22401,22403,22412,22420,22423,22425,22426,22428,22429,22430,22431,22433,22421,22439,22440,22441,22444,22456,22461,22471,22472,22476,22479,22485,22493,22494,22500,22502,22503,22505,22509,22512,22517,22518,22520,22525,22526,22527,22531,22532,22536,22537,22497,22540,22541,22555,22558,22559,22560,22566,22567,22573,22578,22585,22591,22601,22604,22605,22607,22608,22613,22623,22625,22628,22631,22632,22648,22652,22655,22656,22657,22663,22664,22665,22666,22668,22669,22671,22672,22676,22678,22685,22688,22689,22690,22694,22697,22705,22706,22724,22716,22722,22728,22733,22734,22736,22738,22740,22742,22746,22749,22753,22754,22761,22771,22789,22790,22795,22796,22802,22803,22804,34369,22813,22817,22819,22820,22824,22831,22832,22835,22837,22838,22847,22851,22854,22866,22867,22873,22875,22877,22878,22879,22881,22883,22891,22893,22895,22898,22901,22902,22905,22907,22908,22923,22924,22926,22930,22933,22935,22943,22948,22951,22957,22958,22959,22960,22963,22967,22970,22972,22977,22979,22980,22984,22986,22989,22994,23005,23006,23007,23011,23012,23015,23022,23023,23025,23026,23028,23031,23040,23044,23052,23053,23054,23058,23059,23070,23075,23076,23079,23080,23082,23085,23088,23108,23109,23111,23112,23116,23120,23125,23134,23139,23141,23143,23149,23159,23162,23163,23166,23179,23184,23187,23190,23193,23196,23198,23199,23200,23202,23207,23212,23217,23218,23219,23221,23224,23226,23227,23231,23236,23238,23240,23247,23258,23260,23264,23269,23274,23278,23285,23286,23293,23296,23297,23304,23319,23348,23321,23323,23325,23329,23333,23341,23352,23361,23371,23372,23378,23382,23390,23400,23406,23407,23420,23421,23422,23423,23425,23428,23430,23434,23438,23440,23441,23443,23444,23446,23464,23465,23468,23469,23471,23473,23474,23479,23482,23484,23488,23489,23501,23503,23510,23511,23512,23513,23514,23520,23535,23537,23540,23549,23564,23575,23582,23583,23587,23590,23593,23595,23596,23598,23600,23602,23605,23606,23641,23642,23644,23650,23651,23655,23656,23657,23661,23664,23668,23669,23674,23675,23676,23677,23687,23688,23690,23695,23698,23709,23711,23712,23714,23715,23718,23722,23730,23732,23733,23738,23753,23755,23762,23773,23767,23790,23793,23794,23796,23809,23814,23821,23826,23851,23843,23844,23846,23847,23857,23860,23865,23869,23871,23874,23875,23878,23880,23893,23889,23897,23882,23903,23904,23905,23906,23908,23914,23917,23920,23929,23930,23934,23935,23937,23939,23944,23946,23954,23955,23956,23957,23961,23963,23967,23968,23975,23979,23984,23988,23992,23993,24003,24007,24011,24016,24014,24024,24025,24032,24036,24041,24056,24057,24064,24071,24077,24082,24084,24085,24088,24095,24096,24110,24104,24114,24117,24126,24139,24144,24137,24145,24150,24152,24155,24156,24158,24168,24170,24171,24172,24173,24174,24176,24192,24203,24206,24226,24228,24229,24232,24234,24236,24241,24243,24253,24254,24255,24262,24268,24267,24270,24273,24274,24276,24277,24284,24286,24293,24299,24322,24326,24327,24328,24334,24345,24348,24349,24353,24354,24355,24356,24360,24363,24364,24366,24368,24372,24374,24379,24381,24383,24384,24388,24389,24391,24397,24400,24404,24408,24411,24416,24419,24420,24423,24431,24434,24436,24437,24440,24442,24445,24446,24457,24461,24463,24470,24476,24477,24482,24487,24491,24484,24492,24495,24496,24497,24504,24516,24519,24520,24521,24523,24528,24529,24530,24531,24532,24542,24545,24546,24552,24553,24554,24556,24557,24558,24559,24562,24563,24566,24570,24572,24583,24586,24589,24595,24596,24599,24600,24602,24607,24612,24621,24627,24629,24640,24647,24648,24649,24652,24657,24660,24662,24663,24669,24673,24679,24689,24702,24703,24706,24710,24712,24714,24718,24721,24723,24725,24728,24733,24734,24738,24740,24741,24744,24752,24753,24759,24763,24766,24770,24772,24776,24777,24778,24779,24782,24783,24788,24789,24793,24795,24797,24798,24802,24805,24818,24821,24824,24828,24829,24834,24839,24842,24844,24848,24849,24850,24851,24852,24854,24855,24857,24860,24862,24866,24874,24875,24880,24881,24885,24886,24887,24889,24897,24901,24902,24905,24926,24928,24940,24946,24952,24955,24956,24959,24960,24961,24963,24964,24971,24973,24978,24979,24983,24984,24988,24989,24991,24992,24997,25e3,25002,25005,25016,25017,25020,25024,25025,25026,25038,25039,25045,25052,25053,25054,25055,25057,25058,25063,25065,25061,25068,25069,25071,25089,25091,25092,25095,25107,25109,25116,25120,25122,25123,25127,25129,25131,25145,25149,25154,25155,25156,25158,25164,25168,25169,25170,25172,25174,25178,25180,25188,25197,25199,25203,25210,25213,25229,25230,25231,25232,25254,25256,25267,25270,25271,25274,25278,25279,25284,25294,25301,25302,25306,25322,25330,25332,25340,25341,25347,25348,25354,25355,25357,25360,25363,25366,25368,25385,25386,25389,25397,25398,25401,25404,25409,25410,25411,25412,25414,25418,25419,25422,25426,25427,25428,25432,25435,25445,25446,25452,25453,25457,25460,25461,25464,25468,25469,25471,25474,25476,25479,25482,25488,25492,25493,25497,25498,25502,25508,25510,25517,25518,25519,25533,25537,25541,25544,25550,25553,25555,25556,25557,25564,25568,25573,25578,25580,25586,25587,25589,25592,25593,25609,25610,25616,25618,25620,25624,25630,25632,25634,25636,25637,25641,25642,25647,25648,25653,25661,25663,25675,25679,25681,25682,25683,25684,25690,25691,25692,25693,25695,25696,25697,25699,25709,25715,25716,25723,25725,25733,25735,25743,25744,25745,25752,25753,25755,25757,25759,25761,25763,25766,25768,25772,25779,25789,25790,25791,25796,25801,25802,25803,25804,25806,25808,25809,25813,25815,25828,25829,25833,25834,25837,25840,25845,25847,25851,25855,25857,25860,25864,25865,25866,25871,25875,25876,25878,25881,25883,25886,25887,25890,25894,25897,25902,25905,25914,25916,25917,25923,25927,25929,25936,25938,25940,25951,25952,25959,25963,25978,25981,25985,25989,25994,26002,26005,26008,26013,26016,26019,26022,26030,26034,26035,26036,26047,26050,26056,26057,26062,26064,26068,26070,26072,26079,26096,26098,26100,26101,26105,26110,26111,26112,26116,26120,26121,26125,26129,26130,26133,26134,26141,26142,26145,26146,26147,26148,26150,26153,26154,26155,26156,26158,26160,26161,26163,26169,26167,26176,26181,26182,26186,26188,26193,26190,26199,26200,26201,26203,26204,26208,26209,26363,26218,26219,26220,26238,26227,26229,26239,26231,26232,26233,26235,26240,26236,26251,26252,26253,26256,26258,26265,26266,26267,26268,26271,26272,26276,26285,26289,26290,26293,26299,26303,26304,26306,26307,26312,26316,26318,26319,26324,26331,26335,26344,26347,26348,26350,26362,26373,26375,26382,26387,26393,26396,26400,26402,26419,26430,26437,26439,26440,26444,26452,26453,26461,26470,26476,26478,26484,26486,26491,26497,26500,26510,26511,26513,26515,26518,26520,26521,26523,26544,26545,26546,26549,26555,26556,26557,26617,26560,26562,26563,26565,26568,26569,26578,26583,26585,26588,26593,26598,26608,26610,26614,26615,26706,26644,26649,26653,26655,26664,26663,26668,26669,26671,26672,26673,26675,26683,26687,26692,26693,26698,26700,26709,26711,26712,26715,26731,26734,26735,26736,26737,26738,26741,26745,26746,26747,26748,26754,26756,26758,26760,26774,26776,26778,26780,26785,26787,26789,26793,26794,26798,26802,26811,26821,26824,26828,26831,26832,26833,26835,26838,26841,26844,26845,26853,26856,26858,26859,26860,26861,26864,26865,26869,26870,26875,26876,26877,26886,26889,26890,26896,26897,26899,26902,26903,26929,26931,26933,26936,26939,26946,26949,26953,26958,26967,26971,26979,26980,26981,26982,26984,26985,26988,26992,26993,26994,27002,27003,27007,27008,27021,27026,27030,27032,27041,27045,27046,27048,27051,27053,27055,27063,27064,27066,27068,27077,27080,27089,27094,27095,27106,27109,27118,27119,27121,27123,27125,27134,27136,27137,27139,27151,27153,27157,27162,27165,27168,27172,27176,27184,27186,27188,27191,27195,27198,27199,27205,27206,27209,27210,27214,27216,27217,27218,27221,27222,27227,27236,27239,27242,27249,27251,27262,27265,27267,27270,27271,27273,27275,27281,27291,27293,27294,27295,27301,27307,27311,27312,27313,27316,27325,27326,27327,27334,27337,27336,27340,27344,27348,27349,27350,27356,27357,27364,27367,27372,27376,27377,27378,27388,27389,27394,27395,27398,27399,27401,27407,27408,27409,27415,27419,27422,27428,27432,27435,27436,27439,27445,27446,27451,27455,27462,27466,27469,27474,27478,27480,27485,27488,27495,27499,27502,27504,27509,27517,27518,27522,27525,27543,27547,27551,27552,27554,27555,27560,27561,27564,27565,27566,27568,27576,27577,27581,27582,27587,27588,27593,27596,27606,27610,27617,27619,27622,27623,27630,27633,27639,27641,27647,27650,27652,27653,27657,27661,27662,27664,27666,27673,27679,27686,27687,27688,27692,27694,27699,27701,27702,27706,27707,27711,27722,27723,27725,27727,27730,27732,27737,27739,27740,27755,27757,27759,27764,27766,27768,27769,27771,27781,27782,27783,27785,27796,27797,27799,27800,27804,27807,27824,27826,27828,27842,27846,27853,27855,27856,27857,27858,27860,27862,27866,27868,27872,27879,27881,27883,27884,27886,27890,27892,27908,27911,27914,27918,27919,27921,27923,27930,27942,27943,27944,27751,27950,27951,27953,27961,27964,27967,27991,27998,27999,28001,28005,28007,28015,28016,28028,28034,28039,28049,28050,28052,28054,28055,28056,28074,28076,28084,28087,28089,28093,28095,28100,28104,28106,28110,28111,28118,28123,28125,28127,28128,28130,28133,28137,28143,28144,28148,28150,28156,28160,28164,28190,28194,28199,28210,28214,28217,28219,28220,28228,28229,28232,28233,28235,28239,28241,28242,28243,28244,28247,28252,28253,28254,28258,28259,28264,28275,28283,28285,28301,28307,28313,28320,28327,28333,28334,28337,28339,28347,28351,28352,28353,28355,28359,28360,28362,28365,28366,28367,28395,28397,28398,28409,28411,28413,28420,28424,28426,28428,28429,28438,28440,28442,28443,28454,28457,28458,28463,28464,28467,28470,28475,28476,28461,28495,28497,28498,28499,28503,28505,28506,28509,28510,28513,28514,28520,28524,28541,28542,28547,28551,28552,28555,28556,28557,28560,28562,28563,28564,28566,28570,28575,28576,28581,28582,28583,28584,28590,28591,28592,28597,28598,28604,28613,28615,28616,28618,28634,28638,28648,28649,28656,28661,28665,28668,28669,28672,28677,28678,28679,28685,28695,28704,28707,28719,28724,28727,28729,28732,28739,28740,28744,28745,28746,28747,28756,28757,28765,28766,28750,28772,28773,28780,28782,28789,28790,28798,28801,28805,28806,28820,28821,28822,28823,28824,28827,28836,28843,28848,28849,28852,28855,28874,28881,28883,28884,28885,28886,28888,28892,28900,28922,28931,28932,28933,28934,28935,28939,28940,28943,28958,28960,28971,28973,28975,28976,28977,28984,28993,28997,28998,28999,29002,29003,29008,29010,29015,29018,29020,29022,29024,29032,29049,29056,29061,29063,29068,29074,29082,29083,29088,29090,29103,29104,29106,29107,29114,29119,29120,29121,29124,29131,29132,29139,29142,29145,29146,29148,29176,29182,29184,29191,29192,29193,29203,29207,29210,29213,29215,29220,29227,29231,29236,29240,29241,29249,29250,29251,29253,29262,29263,29264,29267,29269,29270,29274,29276,29278,29280,29283,29288,29291,29294,29295,29297,29303,29304,29307,29308,29311,29316,29321,29325,29326,29331,29339,29352,29357,29358,29361,29364,29374,29377,29383,29385,29388,29397,29398,29400,29407,29413,29427,29428,29434,29435,29438,29442,29444,29445,29447,29451,29453,29458,29459,29464,29465,29470,29474,29476,29479,29480,29484,29489,29490,29493,29498,29499,29501,29507,29517,29520,29522,29526,29528,29533,29534,29535,29536,29542,29543,29545,29547,29548,29550,29551,29553,29559,29561,29564,29568,29569,29571,29573,29574,29582,29584,29587,29589,29591,29592,29596,29598,29599,29600,29602,29605,29606,29610,29611,29613,29621,29623,29625,29628,29629,29631,29637,29638,29641,29643,29644,29647,29650,29651,29654,29657,29661,29665,29667,29670,29671,29673,29684,29685,29687,29689,29690,29691,29693,29695,29696,29697,29700,29703,29706,29713,29722,29723,29732,29734,29736,29737,29738,29739,29740,29741,29742,29743,29744,29745,29753,29760,29763,29764,29766,29767,29771,29773,29777,29778,29783,29789,29794,29798,29799,29800,29803,29805,29806,29809,29810,29824,29825,29829,29830,29831,29833,29839,29840,29841,29842,29848,29849,29850,29852,29855,29856,29857,29859,29862,29864,29865,29866,29867,29870,29871,29873,29874,29877,29881,29883,29887,29896,29897,29900,29904,29907,29912,29914,29915,29918,29919,29924,29928,29930,29931,29935,29940,29946,29947,29948,29951,29958,29970,29974,29975,29984,29985,29988,29991,29993,29994,29999,30006,30009,30013,30014,30015,30016,30019,30023,30024,30030,30032,30034,30039,30046,30047,30049,30063,30065,30073,30074,30075,30076,30077,30078,30081,30085,30096,30098,30099,30101,30105,30108,30114,30116,30132,30138,30143,30144,30145,30148,30150,30156,30158,30159,30167,30172,30175,30176,30177,30180,30183,30188,30190,30191,30193,30201,30208,30210,30211,30212,30215,30216,30218,30220,30223,30226,30227,30229,30230,30233,30235,30236,30237,30238,30243,30245,30246,30249,30253,30258,30259,30261,30264,30265,30266,30268,30282,30272,30273,30275,30276,30277,30281,30283,30293,30297,30303,30308,30309,30317,30318,30319,30321,30324,30337,30341,30348,30349,30357,30363,30364,30365,30367,30368,30370,30371,30372,30373,30374,30375,30376,30378,30381,30397,30401,30405,30409,30411,30412,30414,30420,30425,30432,30438,30440,30444,30448,30449,30454,30457,30460,30464,30470,30474,30478,30482,30484,30485,30487,30489,30490,30492,30498,30504,30509,30510,30511,30516,30517,30518,30521,30525,30526,30530,30533,30534,30538,30541,30542,30543,30546,30550,30551,30556,30558,30559,30560,30562,30564,30567,30570,30572,30576,30578,30579,30580,30586,30589,30592,30596,30604,30605,30612,30613,30614,30618,30623,30626,30631,30634,30638,30639,30641,30645,30654,30659,30665,30673,30674,30677,30681,30686,30687,30688,30692,30694,30698,30700,30704,30705,30708,30712,30715,30725,30726,30729,30733,30734,30737,30749,30753,30754,30755,30765,30766,30768,30773,30775,30787,30788,30791,30792,30796,30798,30802,30812,30814,30816,30817,30819,30820,30824,30826,30830,30842,30846,30858,30863,30868,30872,30881,30877,30878,30879,30884,30888,30892,30893,30896,30897,30898,30899,30907,30909,30911,30919,30920,30921,30924,30926,30930,30931,30933,30934,30948,30939,30943,30944,30945,30950,30954,30962,30963,30976,30966,30967,30970,30971,30975,30982,30988,30992,31002,31004,31006,31007,31008,31013,31015,31017,31021,31025,31028,31029,31035,31037,31039,31044,31045,31046,31050,31051,31055,31057,31060,31064,31067,31068,31079,31081,31083,31090,31097,31099,31100,31102,31115,31116,31121,31123,31124,31125,31126,31128,31131,31132,31137,31144,31145,31147,31151,31153,31156,31160,31163,31170,31172,31175,31176,31178,31183,31188,31190,31194,31197,31198,31200,31202,31205,31210,31211,31213,31217,31224,31228,31234,31235,31239,31241,31242,31244,31249,31253,31259,31262,31265,31271,31275,31277,31279,31280,31284,31285,31288,31289,31290,31300,31301,31303,31304,31308,31317,31318,31321,31324,31325,31327,31328,31333,31335,31338,31341,31349,31352,31358,31360,31362,31365,31366,31370,31371,31376,31377,31380,31390,31392,31395,31404,31411,31413,31417,31419,31420,31430,31433,31436,31438,31441,31451,31464,31465,31467,31468,31473,31476,31483,31485,31486,31495,31508,31519,31523,31527,31529,31530,31531,31533,31534,31535,31536,31537,31540,31549,31551,31552,31553,31559,31566,31573,31584,31588,31590,31593,31594,31597,31599,31602,31603,31607,31620,31625,31630,31632,31633,31638,31643,31646,31648,31653,31660,31663,31664,31666,31669,31670,31674,31675,31676,31677,31682,31685,31688,31690,31700,31702,31703,31705,31706,31707,31720,31722,31730,31732,31733,31736,31737,31738,31740,31742,31745,31746,31747,31748,31750,31753,31755,31756,31758,31759,31769,31771,31776,31781,31782,31784,31788,31793,31795,31796,31798,31801,31802,31814,31818,31829,31825,31826,31827,31833,31834,31835,31836,31837,31838,31841,31843,31847,31849,31853,31854,31856,31858,31865,31868,31869,31878,31879,31887,31892,31902,31904,31910,31920,31926,31927,31930,31931,31932,31935,31940,31943,31944,31945,31949,31951,31955,31956,31957,31959,31961,31962,31965,31974,31977,31979,31989,32003,32007,32008,32009,32015,32017,32018,32019,32022,32029,32030,32035,32038,32042,32045,32049,32060,32061,32062,32064,32065,32071,32072,32077,32081,32083,32087,32089,32090,32092,32093,32101,32103,32106,32112,32120,32122,32123,32127,32129,32130,32131,32133,32134,32136,32139,32140,32141,32145,32150,32151,32157,32158,32166,32167,32170,32179,32182,32183,32185,32194,32195,32196,32197,32198,32204,32205,32206,32215,32217,32256,32226,32229,32230,32234,32235,32237,32241,32245,32246,32249,32250,32264,32272,32273,32277,32279,32284,32285,32288,32295,32296,32300,32301,32303,32307,32310,32319,32324,32325,32327,32334,32336,32338,32344,32351,32353,32354,32357,32363,32366,32367,32371,32376,32382,32385,32390,32391,32394,32397,32401,32405,32408,32410,32413,32414,32572,32571,32573,32574,32575,32579,32580,32583,32591,32594,32595,32603,32604,32605,32609,32611,32612,32613,32614,32621,32625,32637,32638,32639,32640,32651,32653,32655,32656,32657,32662,32663,32668,32673,32674,32678,32682,32685,32692,32700,32703,32704,32707,32712,32718,32719,32731,32735,32739,32741,32744,32748,32750,32751,32754,32762,32765,32766,32767,32775,32776,32778,32781,32782,32783,32785,32787,32788,32790,32797,32798,32799,32800,32804,32806,32812,32814,32816,32820,32821,32823,32825,32826,32828,32830,32832,32836,32864,32868,32870,32877,32881,32885,32897,32904,32910,32924,32926,32934,32935,32939,32952,32953,32968,32973,32975,32978,32980,32981,32983,32984,32992,33005,33006,33008,33010,33011,33014,33017,33018,33022,33027,33035,33046,33047,33048,33052,33054,33056,33060,33063,33068,33072,33077,33082,33084,33093,33095,33098,33100,33106,33111,33120,33121,33127,33128,33129,33133,33135,33143,33153,33168,33156,33157,33158,33163,33166,33174,33176,33179,33182,33186,33198,33202,33204,33211,33227,33219,33221,33226,33230,33231,33237,33239,33243,33245,33246,33249,33252,33259,33260,33264,33265,33266,33269,33270,33272,33273,33277,33279,33280,33283,33295,33299,33300,33305,33306,33309,33313,33314,33320,33330,33332,33338,33347,33348,33349,33350,33355,33358,33359,33361,33366,33372,33376,33379,33383,33389,33396,33403,33405,33407,33408,33409,33411,33412,33415,33417,33418,33422,33425,33428,33430,33432,33434,33435,33440,33441,33443,33444,33447,33448,33449,33450,33454,33456,33458,33460,33463,33466,33468,33470,33471,33478,33488,33493,33498,33504,33506,33508,33512,33514,33517,33519,33526,33527,33533,33534,33536,33537,33543,33544,33546,33547,33620,33563,33565,33566,33567,33569,33570,33580,33581,33582,33584,33587,33591,33594,33596,33597,33602,33603,33604,33607,33613,33614,33617,33621,33622,33623,33648,33656,33661,33663,33664,33666,33668,33670,33677,33682,33684,33685,33688,33689,33691,33692,33693,33702,33703,33705,33708,33726,33727,33728,33735,33737,33743,33744,33745,33748,33757,33619,33768,33770,33782,33784,33785,33788,33793,33798,33802,33807,33809,33813,33817,33709,33839,33849,33861,33863,33864,33866,33869,33871,33873,33874,33878,33880,33881,33882,33884,33888,33892,33893,33895,33898,33904,33907,33908,33910,33912,33916,33917,33921,33925,33938,33939,33941,33950,33958,33960,33961,33962,33967,33969,33972,33978,33981,33982,33984,33986,33991,33992,33996,33999,34003,34012,34023,34026,34031,34032,34033,34034,34039,34098,34042,34043,34045,34050,34051,34055,34060,34062,34064,34076,34078,34082,34083,34084,34085,34087,34090,34091,34095,34099,34100,34102,34111,34118,34127,34128,34129,34130,34131,34134,34137,34140,34141,34142,34143,34144,34145,34146,34148,34155,34159,34169,34170,34171,34173,34175,34177,34181,34182,34185,34187,34188,34191,34195,34200,34205,34207,34208,34210,34213,34215,34228,34230,34231,34232,34236,34237,34238,34239,34242,34247,34250,34251,34254,34221,34264,34266,34271,34272,34278,34280,34285,34291,34294,34300,34303,34304,34308,34309,34317,34318,34320,34321,34322,34328,34329,34331,34334,34337,34343,34345,34358,34360,34362,34364,34365,34368,34370,34374,34386,34387,34390,34391,34392,34393,34397,34400,34401,34402,34403,34404,34409,34412,34415,34421,34422,34423,34426,34445,34449,34454,34456,34458,34460,34465,34470,34471,34472,34477,34481,34483,34484,34485,34487,34488,34489,34495,34496,34497,34499,34501,34513,34514,34517,34519,34522,34524,34528,34531,34533,34535,34440,34554,34556,34557,34564,34565,34567,34571,34574,34575,34576,34579,34580,34585,34590,34591,34593,34595,34600,34606,34607,34609,34610,34617,34618,34620,34621,34622,34624,34627,34629,34637,34648,34653,34657,34660,34661,34671,34673,34674,34683,34691,34692,34693,34694,34695,34696,34697,34699,34700,34704,34707,34709,34711,34712,34713,34718,34720,34723,34727,34732,34733,34734,34737,34741,34750,34751,34753,34760,34761,34762,34766,34773,34774,34777,34778,34780,34783,34786,34787,34788,34794,34795,34797,34801,34803,34808,34810,34815,34817,34819,34822,34825,34826,34827,34832,34841,34834,34835,34836,34840,34842,34843,34844,34846,34847,34856,34861,34862,34864,34866,34869,34874,34876,34881,34883,34885,34888,34889,34890,34891,34894,34897,34901,34902,34904,34906,34908,34911,34912,34916,34921,34929,34937,34939,34944,34968,34970,34971,34972,34975,34976,34984,34986,35002,35005,35006,35008,35018,35019,35020,35021,35022,35025,35026,35027,35035,35038,35047,35055,35056,35057,35061,35063,35073,35078,35085,35086,35087,35093,35094,35096,35097,35098,35100,35104,35110,35111,35112,35120,35121,35122,35125,35129,35130,35134,35136,35138,35141,35142,35145,35151,35154,35159,35162,35163,35164,35169,35170,35171,35179,35182,35184,35187,35189,35194,35195,35196,35197,35209,35213,35216,35220,35221,35227,35228,35231,35232,35237,35248,35252,35253,35254,35255,35260,35284,35285,35286,35287,35288,35301,35305,35307,35309,35313,35315,35318,35321,35325,35327,35332,35333,35335,35343,35345,35346,35348,35349,35358,35360,35362,35364,35366,35371,35372,35375,35381,35383,35389,35390,35392,35395,35397,35399,35401,35405,35406,35411,35414,35415,35416,35420,35421,35425,35429,35431,35445,35446,35447,35449,35450,35451,35454,35455,35456,35459,35462,35467,35471,35472,35474,35478,35479,35481,35487,35495,35497,35502,35503,35507,35510,35511,35515,35518,35523,35526,35528,35529,35530,35537,35539,35540,35541,35543,35549,35551,35564,35568,35572,35573,35574,35580,35583,35589,35590,35595,35601,35612,35614,35615,35594,35629,35632,35639,35644,35650,35651,35652,35653,35654,35656,35666,35667,35668,35673,35661,35678,35683,35693,35702,35704,35705,35708,35710,35713,35716,35717,35723,35725,35727,35732,35733,35740,35742,35743,35896,35897,35901,35902,35909,35911,35913,35915,35919,35921,35923,35924,35927,35928,35931,35933,35929,35939,35940,35942,35944,35945,35949,35955,35957,35958,35963,35966,35974,35975,35979,35984,35986,35987,35993,35995,35996,36004,36025,36026,36037,36038,36041,36043,36047,36054,36053,36057,36061,36065,36072,36076,36079,36080,36082,36085,36087,36088,36094,36095,36097,36099,36105,36114,36119,36123,36197,36201,36204,36206,36223,36226,36228,36232,36237,36240,36241,36245,36254,36255,36256,36262,36267,36268,36271,36274,36277,36279,36281,36283,36288,36293,36294,36295,36296,36298,36302,36305,36308,36309,36311,36313,36324,36325,36327,36332,36336,36284,36337,36338,36340,36349,36353,36356,36357,36358,36363,36369,36372,36374,36384,36385,36386,36387,36390,36391,36401,36403,36406,36407,36408,36409,36413,36416,36417,36427,36429,36430,36431,36436,36443,36444,36445,36446,36449,36450,36457,36460,36461,36463,36464,36465,36473,36474,36475,36482,36483,36489,36496,36498,36501,36506,36507,36509,36510,36514,36519,36521,36525,36526,36531,36533,36538,36539,36544,36545,36547,36548,36551,36559,36561,36564,36572,36584,36590,36592,36593,36599,36601,36602,36589,36608,36610,36615,36616,36623,36624,36630,36631,36632,36638,36640,36641,36643,36645,36647,36648,36652,36653,36654,36660,36661,36662,36663,36666,36672,36673,36675,36679,36687,36689,36690,36691,36692,36693,36696,36701,36702,36709,36765,36768,36769,36772,36773,36774,36789,36790,36792,36798,36800,36801,36806,36810,36811,36813,36816,36818,36819,36821,36832,36835,36836,36840,36846,36849,36853,36854,36859,36862,36866,36868,36872,36876,36888,36891,36904,36905,36911,36906,36908,36909,36915,36916,36919,36927,36931,36932,36940,36955,36957,36962,36966,36967,36972,36976,36980,36985,36997,37e3,37003,37004,37006,37008,37013,37015,37016,37017,37019,37024,37025,37026,37029,37040,37042,37043,37044,37046,37053,37068,37054,37059,37060,37061,37063,37064,37077,37079,37080,37081,37084,37085,37087,37093,37074,37110,37099,37103,37104,37108,37118,37119,37120,37124,37125,37126,37128,37133,37136,37140,37142,37143,37144,37146,37148,37150,37152,37157,37154,37155,37159,37161,37166,37167,37169,37172,37174,37175,37177,37178,37180,37181,37187,37191,37192,37199,37203,37207,37209,37210,37211,37217,37220,37223,37229,37236,37241,37242,37243,37249,37251,37253,37254,37258,37262,37265,37267,37268,37269,37272,37278,37281,37286,37288,37292,37293,37294,37296,37297,37298,37299,37302,37307,37308,37309,37311,37314,37315,37317,37331,37332,37335,37337,37338,37342,37348,37349,37353,37354,37356,37357,37358,37359,37360,37361,37367,37369,37371,37373,37376,37377,37380,37381,37382,37383,37385,37386,37388,37392,37394,37395,37398,37400,37404,37405,37411,37412,37413,37414,37416,37422,37423,37424,37427,37429,37430,37432,37433,37434,37436,37438,37440,37442,37443,37446,37447,37450,37453,37454,37455,37457,37464,37465,37468,37469,37472,37473,37477,37479,37480,37481,37486,37487,37488,37493,37494,37495,37496,37497,37499,37500,37501,37503,37512,37513,37514,37517,37518,37522,37527,37529,37535,37536,37540,37541,37543,37544,37547,37551,37554,37558,37560,37562,37563,37564,37565,37567,37568,37569,37570,37571,37573,37574,37575,37576,37579,37580,37581,37582,37584,37587,37589,37591,37592,37593,37596,37597,37599,37600,37601,37603,37605,37607,37608,37612,37614,37616,37625,37627,37631,37632,37634,37640,37645,37649,37652,37653,37660,37661,37662,37663,37665,37668,37669,37671,37673,37674,37683,37684,37686,37687,37703,37704,37705,37712,37713,37714,37717,37719,37720,37722,37726,37732,37733,37735,37737,37738,37741,37743,37744,37745,37747,37748,37750,37754,37757,37759,37760,37761,37762,37768,37770,37771,37773,37775,37778,37781,37784,37787,37790,37793,37795,37796,37798,37800,37803,37812,37813,37814,37818,37801,37825,37828,37829,37830,37831,37833,37834,37835,37836,37837,37843,37849,37852,37854,37855,37858,37862,37863,37881,37879,37880,37882,37883,37885,37889,37890,37892,37896,37897,37901,37902,37903,37909,37910,37911,37919,37934,37935,37937,37938,37939,37940,37947,37951,37949,37955,37957,37960,37962,37964,37973,37977,37980,37983,37985,37987,37992,37995,37997,37998,37999,38001,38002,38020,38019,38264,38265,38270,38276,38280,38284,38285,38286,38301,38302,38303,38305,38310,38313,38315,38316,38324,38326,38330,38333,38335,38342,38344,38345,38347,38352,38353,38354,38355,38361,38362,38365,38366,38367,38368,38372,38374,38429,38430,38434,38436,38437,38438,38444,38449,38451,38455,38456,38457,38458,38460,38461,38465,38482,38484,38486,38487,38488,38497,38510,38516,38523,38524,38526,38527,38529,38530,38531,38532,38537,38545,38550,38554,38557,38559,38564,38565,38566,38569,38574,38575,38579,38586,38602,38610,23986,38616,38618,38621,38622,38623,38633,38639,38641,38650,38658,38659,38661,38665,38682,38683,38685,38689,38690,38691,38696,38705,38707,38721,38723,38730,38734,38735,38741,38743,38744,38746,38747,38755,38759,38762,38766,38771,38774,38775,38776,38779,38781,38783,38784,38793,38805,38806,38807,38809,38810,38814,38815,38818,38828,38830,38833,38834,38837,38838,38840,38841,38842,38844,38846,38847,38849,38852,38853,38855,38857,38858,38860,38861,38862,38864,38865,38868,38871,38872,38873,38877,38878,38880,38875,38881,38884,38895,38897,38900,38903,38904,38906,38919,38922,38937,38925,38926,38932,38934,38940,38942,38944,38947,38950,38955,38958,38959,38960,38962,38963,38965,38949,38974,38980,38983,38986,38993,38994,38995,38998,38999,39001,39002,39010,39011,39013,39014,39018,39020,39083,39085,39086,39088,39092,39095,39096,39098,39099,39103,39106,39109,39112,39116,39137,39139,39141,39142,39143,39146,39155,39158,39170,39175,39176,39185,39189,39190,39191,39194,39195,39196,39199,39202,39206,39207,39211,39217,39218,39219,39220,39221,39225,39226,39227,39228,39232,39233,39238,39239,39240,39245,39246,39252,39256,39257,39259,39260,39262,39263,39264,39323,39325,39327,39334,39344,39345,39346,39349,39353,39354,39357,39359,39363,39369,39379,39380,39385,39386,39388,39390,39399,39402,39403,39404,39408,39412,39413,39417,39421,39422,39426,39427,39428,39435,39436,39440,39441,39446,39454,39456,39458,39459,39460,39463,39469,39470,39475,39477,39478,39480,39495,39489,39492,39498,39499,39500,39502,39505,39508,39510,39517,39594,39596,39598,39599,39602,39604,39605,39606,39609,39611,39614,39615,39617,39619,39622,39624,39630,39632,39634,39637,39638,39639,39643,39644,39648,39652,39653,39655,39657,39660,39666,39667,39669,39673,39674,39677,39679,39680,39681,39682,39683,39684,39685,39688,39689,39691,39692,39693,39694,39696,39698,39702,39705,39707,39708,39712,39718,39723,39725,39731,39732,39733,39735,39737,39738,39741,39752,39755,39756,39765,39766,39767,39771,39774,39777,39779,39781,39782,39784,39786,39787,39788,39789,39790,39795,39797,39799,39800,39801,39807,39808,39812,39813,39814,39815,39817,39818,39819,39821,39823,39824,39828,39834,39837,39838,39846,39847,39849,39852,39856,39857,39858,39863,39864,39867,39868,39870,39871,39873,39879,39880,39886,39888,39895,39896,39901,39903,39909,39911,39914,39915,39919,39923,39927,39928,39929,39930,39933,39935,39936,39938,39947,39951,39953,39958,39960,39961,39962,39964,39966,39970,39971,39974,39975,39976,39977,39978,39985,39989,39990,39991,39997,40001,40003,40004,40005,40009,40010,40014,40015,40016,40019,40020,40022,40024,40027,40029,40030,40031,40035,40041,40042,40028,40043,40040,40046,40048,40050,40053,40055,40059,40166,40178,40183,40185,40203,40194,40209,40215,40216,40220,40221,40222,40239,40240,40242,40243,40244,40250,40252,40261,40253,40258,40259,40263,40266,40275,40276,40287,40291,40290,40293,40297,40298,40299,40304,40310,40311,40315,40316,40318,40323,40324,40326,40330,40333,40334,40338,40339,40341,40342,40343,40344,40353,40362,40364,40366,40369,40373,40377,40380,40383,40387,40391,40393,40394,40404,40405,40406,40407,40410,40414,40415,40416,40421,40423,40425,40427,40430,40432,40435,40436,40446,40458,40450,40455,40462,40464,40465,40466,40469,40470,40473,40476,40477,40570,40571,40572,40576,40578,40579,40580,40581,40583,40590,40591,40598,40600,40603,40606,40612,40616,40620,40622,40623,40624,40627,40628,40629,40646,40648,40651,40661,40671,40676,40679,40684,40685,40686,40688,40689,40690,40693,40696,40703,40706,40707,40713,40719,40720,40721,40722,40724,40726,40727,40729,40730,40731,40735,40738,40742,40746,40747,40751,40753,40754,40756,40759,40761,40762,40764,40765,40767,40769,40771,40772,40773,40774,40775,40787,40789,40790,40791,40792,40794,40797,40798,40808,40809,40813,40814,40815,40816,40817,40819,40821,40826,40829,40847,40848,40849,40850,40852,40854,40855,40862,40865,40866,40867,40869,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],ibm866:[1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,9617,9618,9619,9474,9508,9569,9570,9558,9557,9571,9553,9559,9565,9564,9563,9488,9492,9524,9516,9500,9472,9532,9566,9567,9562,9556,9577,9574,9568,9552,9580,9575,9576,9572,9573,9561,9560,9554,9555,9579,9578,9496,9484,9608,9604,9612,9616,9600,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1025,1105,1028,1108,1031,1111,1038,1118,176,8729,183,8730,8470,164,9632,160],"iso-8859-2":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,728,321,164,317,346,167,168,352,350,356,377,173,381,379,176,261,731,322,180,318,347,711,184,353,351,357,378,733,382,380,340,193,194,258,196,313,262,199,268,201,280,203,282,205,206,270,272,323,327,211,212,336,214,215,344,366,218,368,220,221,354,223,341,225,226,259,228,314,263,231,269,233,281,235,283,237,238,271,273,324,328,243,244,337,246,247,345,367,250,369,252,253,355,729],"iso-8859-3":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,294,728,163,164,null,292,167,168,304,350,286,308,173,null,379,176,295,178,179,180,181,293,183,184,305,351,287,309,189,null,380,192,193,194,null,196,266,264,199,200,201,202,203,204,205,206,207,null,209,210,211,212,288,214,215,284,217,218,219,220,364,348,223,224,225,226,null,228,267,265,231,232,233,234,235,236,237,238,239,null,241,242,243,244,289,246,247,285,249,250,251,252,365,349,729],"iso-8859-4":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,312,342,164,296,315,167,168,352,274,290,358,173,381,175,176,261,731,343,180,297,316,711,184,353,275,291,359,330,382,331,256,193,194,195,196,197,198,302,268,201,280,203,278,205,206,298,272,325,332,310,212,213,214,215,216,370,218,219,220,360,362,223,257,225,226,227,228,229,230,303,269,233,281,235,279,237,238,299,273,326,333,311,244,245,246,247,248,371,250,251,252,361,363,729],"iso-8859-5":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,173,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,8470,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,167,1118,1119],"iso-8859-6":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,null,null,null,164,null,null,null,null,null,null,null,1548,173,null,null,null,null,null,null,null,null,null,null,null,null,null,1563,null,null,null,1567,null,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,1591,1592,1593,1594,null,null,null,null,null,1600,1601,1602,1603,1604,1605,1606,1607,1608,1609,1610,1611,1612,1613,1614,1615,1616,1617,1618,null,null,null,null,null,null,null,null,null,null,null,null,null],"iso-8859-7":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,8216,8217,163,8364,8367,166,167,168,169,890,171,172,173,null,8213,176,177,178,179,900,901,902,183,904,905,906,187,908,189,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,null,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,null],"iso-8859-8":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,null,162,163,164,165,166,167,168,169,215,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,247,187,188,189,190,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,8215,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,null,null,8206,8207,null],"iso-8859-10":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,274,290,298,296,310,167,315,272,352,358,381,173,362,330,176,261,275,291,299,297,311,183,316,273,353,359,382,8213,363,331,256,193,194,195,196,197,198,302,268,201,280,203,278,205,206,207,208,325,332,211,212,213,214,360,216,370,218,219,220,221,222,223,257,225,226,227,228,229,230,303,269,233,281,235,279,237,238,239,240,326,333,243,244,245,246,361,248,371,250,251,252,253,254,312],"iso-8859-13":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,8221,162,163,164,8222,166,167,216,169,342,171,172,173,174,198,176,177,178,179,8220,181,182,183,248,185,343,187,188,189,190,230,260,302,256,262,196,197,280,274,268,201,377,278,290,310,298,315,352,323,325,211,332,213,214,215,370,321,346,362,220,379,381,223,261,303,257,263,228,229,281,275,269,233,378,279,291,311,299,316,353,324,326,243,333,245,246,247,371,322,347,363,252,380,382,8217],"iso-8859-14":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,7682,7683,163,266,267,7690,167,7808,169,7810,7691,7922,173,174,376,7710,7711,288,289,7744,7745,182,7766,7809,7767,7811,7776,7923,7812,7813,7777,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,372,209,210,211,212,213,214,7786,216,217,218,219,220,221,374,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,373,241,242,243,244,245,246,7787,248,249,250,251,252,253,375,255],"iso-8859-15":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,8364,165,352,167,353,169,170,171,172,173,174,175,176,177,178,179,381,181,182,183,382,185,186,187,338,339,376,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"iso-8859-16":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,261,321,8364,8222,352,167,353,169,536,171,377,173,378,379,176,177,268,322,381,8221,182,183,382,269,537,187,338,339,376,380,192,193,194,258,196,262,198,199,200,201,202,203,204,205,206,207,272,323,210,211,212,336,214,346,368,217,218,219,220,280,538,223,224,225,226,259,228,263,230,231,232,233,234,235,236,237,238,239,273,324,242,243,244,337,246,347,369,249,250,251,252,281,539,255],"koi8-r":[9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9600,9604,9608,9612,9616,9617,9618,9619,8992,9632,8729,8730,8776,8804,8805,160,8993,176,178,183,247,9552,9553,9554,1105,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,1025,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,169,1102,1072,1073,1094,1076,1077,1092,1075,1093,1080,1081,1082,1083,1084,1085,1086,1087,1103,1088,1089,1090,1091,1078,1074,1100,1099,1079,1096,1101,1097,1095,1098,1070,1040,1041,1062,1044,1045,1060,1043,1061,1048,1049,1050,1051,1052,1053,1054,1055,1071,1056,1057,1058,1059,1046,1042,1068,1067,1047,1064,1069,1065,1063,1066],"koi8-u":[9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9600,9604,9608,9612,9616,9617,9618,9619,8992,9632,8729,8730,8776,8804,8805,160,8993,176,178,183,247,9552,9553,9554,1105,1108,9556,1110,1111,9559,9560,9561,9562,9563,1169,1118,9566,9567,9568,9569,1025,1028,9571,1030,1031,9574,9575,9576,9577,9578,1168,1038,169,1102,1072,1073,1094,1076,1077,1092,1075,1093,1080,1081,1082,1083,1084,1085,1086,1087,1103,1088,1089,1090,1091,1078,1074,1100,1099,1079,1096,1101,1097,1095,1098,1070,1040,1041,1062,1044,1045,1060,1043,1061,1048,1049,1050,1051,1052,1053,1054,1055,1071,1056,1057,1058,1059,1046,1042,1068,1067,1047,1064,1069,1065,1063,1066],macintosh:[196,197,199,201,209,214,220,225,224,226,228,227,229,231,233,232,234,235,237,236,238,239,241,243,242,244,246,245,250,249,251,252,8224,176,162,163,167,8226,182,223,174,169,8482,180,168,8800,198,216,8734,177,8804,8805,165,181,8706,8721,8719,960,8747,170,186,937,230,248,191,161,172,8730,402,8776,8710,171,187,8230,160,192,195,213,338,339,8211,8212,8220,8221,8216,8217,247,9674,255,376,8260,8364,8249,8250,64257,64258,8225,183,8218,8222,8240,194,202,193,203,200,205,206,207,204,211,212,63743,210,218,219,217,305,710,732,175,728,729,730,184,733,731,711],"windows-874":[8364,129,130,131,132,8230,134,135,136,137,138,139,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,152,153,154,155,156,157,158,159,160,3585,3586,3587,3588,3589,3590,3591,3592,3593,3594,3595,3596,3597,3598,3599,3600,3601,3602,3603,3604,3605,3606,3607,3608,3609,3610,3611,3612,3613,3614,3615,3616,3617,3618,3619,3620,3621,3622,3623,3624,3625,3626,3627,3628,3629,3630,3631,3632,3633,3634,3635,3636,3637,3638,3639,3640,3641,3642,null,null,null,null,3647,3648,3649,3650,3651,3652,3653,3654,3655,3656,3657,3658,3659,3660,3661,3662,3663,3664,3665,3666,3667,3668,3669,3670,3671,3672,3673,3674,3675,null,null,null,null],"windows-1250":[8364,129,8218,131,8222,8230,8224,8225,136,8240,352,8249,346,356,381,377,144,8216,8217,8220,8221,8226,8211,8212,152,8482,353,8250,347,357,382,378,160,711,728,321,164,260,166,167,168,169,350,171,172,173,174,379,176,177,731,322,180,181,182,183,184,261,351,187,317,733,318,380,340,193,194,258,196,313,262,199,268,201,280,203,282,205,206,270,272,323,327,211,212,336,214,215,344,366,218,368,220,221,354,223,341,225,226,259,228,314,263,231,269,233,281,235,283,237,238,271,273,324,328,243,244,337,246,247,345,367,250,369,252,253,355,729],"windows-1251":[1026,1027,8218,1107,8222,8230,8224,8225,8364,8240,1033,8249,1034,1036,1035,1039,1106,8216,8217,8220,8221,8226,8211,8212,152,8482,1113,8250,1114,1116,1115,1119,160,1038,1118,1032,164,1168,166,167,1025,169,1028,171,172,173,174,1031,176,177,1030,1110,1169,181,182,183,1105,8470,1108,187,1112,1029,1109,1111,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103],"windows-1252":[8364,129,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,141,381,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,157,382,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"windows-1253":[8364,129,8218,402,8222,8230,8224,8225,136,8240,138,8249,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,152,8482,154,8250,156,157,158,159,160,901,902,163,164,165,166,167,168,169,null,171,172,173,174,8213,176,177,178,179,900,181,182,183,904,905,906,187,908,189,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,null,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,null],"windows-1254":[8364,129,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,157,158,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,286,209,210,211,212,213,214,215,216,217,218,219,220,304,350,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,287,241,242,243,244,245,246,247,248,249,250,251,252,305,351,255],"windows-1255":[8364,129,8218,402,8222,8230,8224,8225,710,8240,138,8249,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,154,8250,156,157,158,159,160,161,162,163,8362,165,166,167,168,169,215,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,247,187,188,189,190,191,1456,1457,1458,1459,1460,1461,1462,1463,1464,1465,1466,1467,1468,1469,1470,1471,1472,1473,1474,1475,1520,1521,1522,1523,1524,null,null,null,null,null,null,null,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,null,null,8206,8207,null],"windows-1256":[8364,1662,8218,402,8222,8230,8224,8225,710,8240,1657,8249,338,1670,1688,1672,1711,8216,8217,8220,8221,8226,8211,8212,1705,8482,1681,8250,339,8204,8205,1722,160,1548,162,163,164,165,166,167,168,169,1726,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,1563,187,188,189,190,1567,1729,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,215,1591,1592,1593,1594,1600,1601,1602,1603,224,1604,226,1605,1606,1607,1608,231,232,233,234,235,1609,1610,238,239,1611,1612,1613,1614,244,1615,1616,247,1617,249,1618,251,252,8206,8207,1746],"windows-1257":[8364,129,8218,131,8222,8230,8224,8225,136,8240,138,8249,140,168,711,184,144,8216,8217,8220,8221,8226,8211,8212,152,8482,154,8250,156,175,731,159,160,null,162,163,164,null,166,167,216,169,342,171,172,173,174,198,176,177,178,179,180,181,182,183,248,185,343,187,188,189,190,230,260,302,256,262,196,197,280,274,268,201,377,278,290,310,298,315,352,323,325,211,332,213,214,215,370,321,346,362,220,379,381,223,261,303,257,263,228,229,281,275,269,233,378,279,291,311,299,316,353,324,326,243,333,245,246,247,371,322,347,363,252,380,382,729],"windows-1258":[8364,129,8218,402,8222,8230,8224,8225,710,8240,138,8249,338,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,154,8250,339,157,158,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,258,196,197,198,199,200,201,202,203,768,205,206,207,272,209,777,211,212,416,214,215,216,217,218,219,220,431,771,223,224,225,226,259,228,229,230,231,232,233,234,235,769,237,238,239,273,241,803,243,244,417,246,247,248,249,250,251,252,432,8363,255],"x-mac-cyrillic":[1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,8224,176,1168,163,167,8226,182,1030,174,169,8482,1026,1106,8800,1027,1107,8734,177,8804,8805,1110,181,1169,1032,1028,1108,1031,1111,1033,1113,1034,1114,1112,1029,172,8730,402,8776,8710,171,187,8230,160,1035,1115,1036,1116,1109,8211,8212,8220,8221,8216,8217,247,8222,1038,1118,1039,1119,8470,1025,1105,1103,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,8364]}})(K0||{})}(W0)),W0.exports}(function(V3){(function(q3){V3.exports&&!q3["encoding-indexes"]&&(q3["encoding-indexes"]=g7()["encoding-indexes"]);function Y2(J,a2,Y){return a2<=J&&J<=Y}function d1(J,a2){return J.indexOf(a2)!==-1}var x3=Math.floor;function e1(J){if(J===void 0)return{};if(J===Object(J))return J;throw TypeError("Could not convert argument to dictionary")}function u2(J){for(var a2=String(J),Y=a2.length,G=0,i2=[];G<Y;){var v2=a2.charCodeAt(G);if(v2<55296||v2>57343)i2.push(v2);else if(56320<=v2&&v2<=57343)i2.push(65533);else if(55296<=v2&&v2<=56319)if(G===Y-1)i2.push(65533);else{var g2=a2.charCodeAt(G+1);if(56320<=g2&&g2<=57343){var w=v2&1023,k=g2&1023;i2.push(65536+(w<<10)+k),G+=1}else i2.push(65533)}G+=1}return i2}function O(J){for(var a2="",Y=0;Y<J.length;++Y){var G=J[Y];G<=65535?a2+=String.fromCharCode(G):(G-=65536,a2+=String.fromCharCode((G>>10)+55296,(G&1023)+56320))}return a2}function A(J){return 0<=J&&J<=127}var C=A,b=-1;function E(J){this.tokens=[].slice.call(J),this.tokens.reverse()}E.prototype={endOfStream:function(){return!this.tokens.length},read:function(){return this.tokens.length?this.tokens.pop():b},prepend:function(J){if(Array.isArray(J))for(var a2=J;a2.length;)this.tokens.push(a2.pop());else this.tokens.push(J)},push:function(J){if(Array.isArray(J))for(var a2=J;a2.length;)this.tokens.unshift(a2.shift());else this.tokens.unshift(J)}};var I=-1;function i(J,a2){if(J)throw TypeError("Decoder error");return a2||65533}function M(J){throw TypeError("The code point "+J+" could not be encoded.")}function h(J){return J=String(J).trim().toLowerCase(),Object.prototype.hasOwnProperty.call(o,J)?o[J]:null}var a=[{encodings:[{labels:["unicode-1-1-utf-8","utf-8","utf8"],name:"UTF-8"}],heading:"The Encoding"},{encodings:[{labels:["866","cp866","csibm866","ibm866"],name:"IBM866"},{labels:["csisolatin2","iso-8859-2","iso-ir-101","iso8859-2","iso88592","iso_8859-2","iso_8859-2:1987","l2","latin2"],name:"ISO-8859-2"},{labels:["csisolatin3","iso-8859-3","iso-ir-109","iso8859-3","iso88593","iso_8859-3","iso_8859-3:1988","l3","latin3"],name:"ISO-8859-3"},{labels:["csisolatin4","iso-8859-4","iso-ir-110","iso8859-4","iso88594","iso_8859-4","iso_8859-4:1988","l4","latin4"],name:"ISO-8859-4"},{labels:["csisolatincyrillic","cyrillic","iso-8859-5","iso-ir-144","iso8859-5","iso88595","iso_8859-5","iso_8859-5:1988"],name:"ISO-8859-5"},{labels:["arabic","asmo-708","csiso88596e","csiso88596i","csisolatinarabic","ecma-114","iso-8859-6","iso-8859-6-e","iso-8859-6-i","iso-ir-127","iso8859-6","iso88596","iso_8859-6","iso_8859-6:1987"],name:"ISO-8859-6"},{labels:["csisolatingreek","ecma-118","elot_928","greek","greek8","iso-8859-7","iso-ir-126","iso8859-7","iso88597","iso_8859-7","iso_8859-7:1987","sun_eu_greek"],name:"ISO-8859-7"},{labels:["csiso88598e","csisolatinhebrew","hebrew","iso-8859-8","iso-8859-8-e","iso-ir-138","iso8859-8","iso88598","iso_8859-8","iso_8859-8:1988","visual"],name:"ISO-8859-8"},{labels:["csiso88598i","iso-8859-8-i","logical"],name:"ISO-8859-8-I"},{labels:["csisolatin6","iso-8859-10","iso-ir-157","iso8859-10","iso885910","l6","latin6"],name:"ISO-8859-10"},{labels:["iso-8859-13","iso8859-13","iso885913"],name:"ISO-8859-13"},{labels:["iso-8859-14","iso8859-14","iso885914"],name:"ISO-8859-14"},{labels:["csisolatin9","iso-8859-15","iso8859-15","iso885915","iso_8859-15","l9"],name:"ISO-8859-15"},{labels:["iso-8859-16"],name:"ISO-8859-16"},{labels:["cskoi8r","koi","koi8","koi8-r","koi8_r"],name:"KOI8-R"},{labels:["koi8-ru","koi8-u"],name:"KOI8-U"},{labels:["csmacintosh","mac","macintosh","x-mac-roman"],name:"macintosh"},{labels:["dos-874","iso-8859-11","iso8859-11","iso885911","tis-620","windows-874"],name:"windows-874"},{labels:["cp1250","windows-1250","x-cp1250"],name:"windows-1250"},{labels:["cp1251","windows-1251","x-cp1251"],name:"windows-1251"},{labels:["ansi_x3.4-1968","ascii","cp1252","cp819","csisolatin1","ibm819","iso-8859-1","iso-ir-100","iso8859-1","iso88591","iso_8859-1","iso_8859-1:1987","l1","latin1","us-ascii","windows-1252","x-cp1252"],name:"windows-1252"},{labels:["cp1253","windows-1253","x-cp1253"],name:"windows-1253"},{labels:["cp1254","csisolatin5","iso-8859-9","iso-ir-148","iso8859-9","iso88599","iso_8859-9","iso_8859-9:1989","l5","latin5","windows-1254","x-cp1254"],name:"windows-1254"},{labels:["cp1255","windows-1255","x-cp1255"],name:"windows-1255"},{labels:["cp1256","windows-1256","x-cp1256"],name:"windows-1256"},{labels:["cp1257","windows-1257","x-cp1257"],name:"windows-1257"},{labels:["cp1258","windows-1258","x-cp1258"],name:"windows-1258"},{labels:["x-mac-cyrillic","x-mac-ukrainian"],name:"x-mac-cyrillic"}],heading:"Legacy single-byte encodings"},{encodings:[{labels:["chinese","csgb2312","csiso58gb231280","gb2312","gb_2312","gb_2312-80","gbk","iso-ir-58","x-gbk"],name:"GBK"},{labels:["gb18030"],name:"gb18030"}],heading:"Legacy multi-byte Chinese (simplified) encodings"},{encodings:[{labels:["big5","big5-hkscs","cn-big5","csbig5","x-x-big5"],name:"Big5"}],heading:"Legacy multi-byte Chinese (traditional) encodings"},{encodings:[{labels:["cseucpkdfmtjapanese","euc-jp","x-euc-jp"],name:"EUC-JP"},{labels:["csiso2022jp","iso-2022-jp"],name:"ISO-2022-JP"},{labels:["csshiftjis","ms932","ms_kanji","shift-jis","shift_jis","sjis","windows-31j","x-sjis"],name:"Shift_JIS"}],heading:"Legacy multi-byte Japanese encodings"},{encodings:[{labels:["cseuckr","csksc56011987","euc-kr","iso-ir-149","korean","ks_c_5601-1987","ks_c_5601-1989","ksc5601","ksc_5601","windows-949"],name:"EUC-KR"}],heading:"Legacy multi-byte Korean encodings"},{encodings:[{labels:["csiso2022kr","hz-gb-2312","iso-2022-cn","iso-2022-cn-ext","iso-2022-kr"],name:"replacement"},{labels:["utf-16be"],name:"UTF-16BE"},{labels:["utf-16","utf-16le"],name:"UTF-16LE"},{labels:["x-user-defined"],name:"x-user-defined"}],heading:"Legacy miscellaneous encodings"}],o={};a.forEach(function(J){J.encodings.forEach(function(a2){a2.labels.forEach(function(Y){o[Y]=a2})})});var s={},m={};function x(J,a2){return a2&&a2[J]||null}function S(J,a2){var Y=a2.indexOf(J);return Y===-1?null:Y}function p(J){if(!("encoding-indexes"in q3))throw Error("Indexes missing. Did you forget to include encoding-indexes.js first?");return q3["encoding-indexes"][J]}function y(J){if(J>39419&&J<189e3||J>1237575)return null;if(J===7457)return 59335;var a2=0,Y=0,G=p("gb18030-ranges"),i2;for(i2=0;i2<G.length;++i2){var v2=G[i2];if(v2[0]<=J)a2=v2[0],Y=v2[1];else break}return Y+J-a2}function g(J){if(J===59335)return 7457;var a2=0,Y=0,G=p("gb18030-ranges"),i2;for(i2=0;i2<G.length;++i2){var v2=G[i2];if(v2[1]<=J)a2=v2[1],Y=v2[0];else break}return Y+J-a2}function B(J){_=_||p("jis0208").map(function(Y,G){return Y2(G,8272,8835)?null:Y});var a2=_;return a2.indexOf(J)}var _;function L(J){N=N||p("big5").map(function(Y,G){return G<32*157?null:Y});var a2=N;return J===9552||J===9566||J===9569||J===9578||J===21313||J===21317?a2.lastIndexOf(J):S(J,a2)}var N,F="utf-8";function z(J,a2){if(!(this instanceof z))throw TypeError("Called as a function. Did you forget 'new'?");J=J!==void 0?String(J):F,a2=e1(a2),this._encoding=null,this._decoder=null,this._ignoreBOM=!1,this._BOMseen=!1,this._error_mode="replacement",this._do_not_flush=!1;var Y=h(J);if(Y===null||Y.name==="replacement")throw RangeError("Unknown encoding: "+J);if(!m[Y.name])throw Error("Decoder not present. Did you forget to include encoding-indexes.js first?");var G=this;return G._encoding=Y,a2.fatal&&(G._error_mode="fatal"),a2.ignoreBOM&&(G._ignoreBOM=!0),Object.defineProperty||(this.encoding=G._encoding.name.toLowerCase(),this.fatal=G._error_mode==="fatal",this.ignoreBOM=G._ignoreBOM),G}Object.defineProperty&&(Object.defineProperty(z.prototype,"encoding",{get:function(){return this._encoding.name.toLowerCase()}}),Object.defineProperty(z.prototype,"fatal",{get:function(){return this._error_mode==="fatal"}}),Object.defineProperty(z.prototype,"ignoreBOM",{get:function(){return this._ignoreBOM}})),z.prototype.decode=function(a2,Y){var G;typeof a2=="object"&&a2 instanceof ArrayBuffer?G=new Uint8Array(a2):typeof a2=="object"&&"buffer"in a2&&a2.buffer instanceof ArrayBuffer?G=new Uint8Array(a2.buffer,a2.byteOffset,a2.byteLength):G=new Uint8Array(0),Y=e1(Y),this._do_not_flush||(this._decoder=m[this._encoding.name]({fatal:this._error_mode==="fatal"}),this._BOMseen=!1),this._do_not_flush=!!Y.stream;for(var i2=new E(G),v2=[],g2;;){var w=i2.read();if(w===b||(g2=this._decoder.handler(i2,w),g2===I))break;g2!==null&&(Array.isArray(g2)?v2.push.apply(v2,g2):v2.push(g2))}if(!this._do_not_flush){do{if(g2=this._decoder.handler(i2,i2.read()),g2===I)break;g2!==null&&(Array.isArray(g2)?v2.push.apply(v2,g2):v2.push(g2))}while(!i2.endOfStream());this._decoder=null}function k(v){return d1(["UTF-8","UTF-16LE","UTF-16BE"],this._encoding.name)&&!this._ignoreBOM&&!this._BOMseen&&(v.length>0&&v[0]===65279?(this._BOMseen=!0,v.shift()):v.length>0&&(this._BOMseen=!0)),O(v)}return k.call(this,v2)};function Q(J,a2){if(!(this instanceof Q))throw TypeError("Called as a function. Did you forget 'new'?");a2=e1(a2),this._encoding=null,this._encoder=null,this._do_not_flush=!1,this._fatal=a2.fatal?"fatal":"replacement";var Y=this;if(a2.NONSTANDARD_allowLegacyEncoding){J=J!==void 0?String(J):F;var G=h(J);if(G===null||G.name==="replacement")throw RangeError("Unknown encoding: "+J);if(!s[G.name])throw Error("Encoder not present. Did you forget to include encoding-indexes.js first?");Y._encoding=G}else Y._encoding=h("utf-8"),J!==void 0&&"console"in q3&&console.warn("TextEncoder constructor called with encoding label, which is ignored.");return Object.defineProperty||(this.encoding=Y._encoding.name.toLowerCase()),Y}Object.defineProperty&&Object.defineProperty(Q.prototype,"encoding",{get:function(){return this._encoding.name.toLowerCase()}}),Q.prototype.encode=function(a2,Y){a2=a2===void 0?"":String(a2),Y=e1(Y),this._do_not_flush||(this._encoder=s[this._encoding.name]({fatal:this._fatal==="fatal"})),this._do_not_flush=!!Y.stream;for(var G=new E(u2(a2)),i2=[],v2;;){var g2=G.read();if(g2===b||(v2=this._encoder.handler(G,g2),v2===I))break;Array.isArray(v2)?i2.push.apply(i2,v2):i2.push(v2)}if(!this._do_not_flush){for(;v2=this._encoder.handler(G,G.read()),v2!==I;)Array.isArray(v2)?i2.push.apply(i2,v2):i2.push(v2);this._encoder=null}return new Uint8Array(i2)};function c2(J){var a2=J.fatal,Y=0,G=0,i2=0,v2=128,g2=191;this.handler=function(w,k){if(k===b&&i2!==0)return i2=0,i(a2);if(k===b)return I;if(i2===0){if(Y2(k,0,127))return k;if(Y2(k,194,223))i2=1,Y=k&31;else if(Y2(k,224,239))k===224&&(v2=160),k===237&&(g2=159),i2=2,Y=k&15;else if(Y2(k,240,244))k===240&&(v2=144),k===244&&(g2=143),i2=3,Y=k&7;else return i(a2);return null}if(!Y2(k,v2,g2))return Y=i2=G=0,v2=128,g2=191,w.prepend(k),i(a2);if(v2=128,g2=191,Y=Y<<6|k&63,G+=1,G!==i2)return null;var v=Y;return Y=i2=G=0,v}}function d(J){J.fatal,this.handler=function(a2,Y){if(Y===b)return I;if(C(Y))return Y;var G,i2;Y2(Y,128,2047)?(G=1,i2=192):Y2(Y,2048,65535)?(G=2,i2=224):Y2(Y,65536,1114111)&&(G=3,i2=240);for(var v2=[(Y>>6*G)+i2];G>0;){var g2=Y>>6*(G-1);v2.push(128|g2&63),G-=1}return v2}}s["UTF-8"]=function(J){return new d(J)},m["UTF-8"]=function(J){return new c2(J)};function T(J,a2){var Y=a2.fatal;this.handler=function(G,i2){if(i2===b)return I;if(A(i2))return i2;var v2=J[i2-128];return v2===null?i(Y):v2}}function u(J,a2){a2.fatal,this.handler=function(Y,G){if(G===b)return I;if(C(G))return G;var i2=S(G,J);return i2===null&&M(G),i2+128}}(function(){"encoding-indexes"in q3&&a.forEach(function(J){J.heading==="Legacy single-byte encodings"&&J.encodings.forEach(function(a2){var Y=a2.name,G=p(Y.toLowerCase());m[Y]=function(i2){return new T(G,i2)},s[Y]=function(i2){return new u(G,i2)}})})})(),m.GBK=function(J){return new t(J)},s.GBK=function(J){return new e(J,!0)};function t(J){var a2=J.fatal,Y=0,G=0,i2=0;this.handler=function(v2,g2){if(g2===b&&Y===0&&G===0&&i2===0)return I;g2===b&&(Y!==0||G!==0||i2!==0)&&(Y=0,G=0,i2=0,i(a2));var w;if(i2!==0){w=null,Y2(g2,48,57)&&(w=y((((Y-129)*10+G-48)*126+i2-129)*10+g2-48));var k=[G,i2,g2];return Y=0,G=0,i2=0,w===null?(v2.prepend(k),i(a2)):w}if(G!==0)return Y2(g2,129,254)?(i2=g2,null):(v2.prepend([G,g2]),Y=0,G=0,i(a2));if(Y!==0){if(Y2(g2,48,57))return G=g2,null;var v=Y,D=null;Y=0;var j=g2<127?64:65;return(Y2(g2,64,126)||Y2(g2,128,254))&&(D=(v-129)*190+(g2-j)),w=D===null?null:x(D,p("gb18030")),w===null&&A(g2)&&v2.prepend(g2),w===null?i(a2):w}return A(g2)?g2:g2===128?8364:Y2(g2,129,254)?(Y=g2,null):i(a2)}}function e(J,a2){J.fatal,this.handler=function(Y,G){if(G===b)return I;if(C(G))return G;if(G===58853)return M(G);if(a2&&G===8364)return 128;var i2=S(G,p("gb18030"));if(i2!==null){var v2=x3(i2/190)+129,g2=i2%190,w=g2<63?64:65;return[v2,g2+w]}if(a2)return M(G);i2=g(G);var k=x3(i2/10/126/10);i2=i2-k*10*126*10;var v=x3(i2/10/126);i2=i2-v*10*126;var D=x3(i2/10),j=i2-D*10;return[k+129,v+48,D+129,j+48]}}s.gb18030=function(J){return new e(J)},m.gb18030=function(J){return new t(J)};function r(J){var a2=J.fatal,Y=0;this.handler=function(G,i2){if(i2===b&&Y!==0)return Y=0,i(a2);if(i2===b&&Y===0)return I;if(Y!==0){var v2=Y,g2=null;Y=0;var w=i2<127?64:98;switch((Y2(i2,64,126)||Y2(i2,161,254))&&(g2=(v2-129)*157+(i2-w)),g2){case 1133:return[202,772];case 1135:return[202,780];case 1164:return[234,772];case 1166:return[234,780]}var k=g2===null?null:x(g2,p("big5"));return k===null&&A(i2)&&G.prepend(i2),k===null?i(a2):k}return A(i2)?i2:Y2(i2,129,254)?(Y=i2,null):i(a2)}}function c(J){J.fatal,this.handler=function(a2,Y){if(Y===b)return I;if(C(Y))return Y;var G=L(Y);if(G===null)return M(Y);var i2=x3(G/157)+129;if(i2<161)return M(Y);var v2=G%157,g2=v2<63?64:98;return[i2,v2+g2]}}s.Big5=function(J){return new c(J)},m.Big5=function(J){return new r(J)};function P(J){var a2=J.fatal,Y=!1,G=0;this.handler=function(i2,v2){if(v2===b&&G!==0)return G=0,i(a2);if(v2===b&&G===0)return I;if(G===142&&Y2(v2,161,223))return G=0,65216+v2;if(G===143&&Y2(v2,161,254))return Y=!0,G=v2,null;if(G!==0){var g2=G;G=0;var w=null;return Y2(g2,161,254)&&Y2(v2,161,254)&&(w=x((g2-161)*94+(v2-161),p(Y?"jis0212":"jis0208"))),Y=!1,Y2(v2,161,254)||i2.prepend(v2),w===null?i(a2):w}return A(v2)?v2:v2===142||v2===143||Y2(v2,161,254)?(G=v2,null):i(a2)}}function K(J){J.fatal,this.handler=function(a2,Y){if(Y===b)return I;if(C(Y))return Y;if(Y===165)return 92;if(Y===8254)return 126;if(Y2(Y,65377,65439))return[142,Y-65377+161];Y===8722&&(Y=65293);var G=S(Y,p("jis0208"));if(G===null)return M(Y);var i2=x3(G/94)+161,v2=G%94+161;return[i2,v2]}}s["EUC-JP"]=function(J){return new K(J)},m["EUC-JP"]=function(J){return new P(J)};function W(J){var a2=J.fatal,Y={ASCII:0,Roman:1,Katakana:2,LeadByte:3,TrailByte:4,EscapeStart:5,Escape:6},G=Y.ASCII,i2=Y.ASCII,v2=0,g2=!1;this.handler=function(w,k){switch(G){default:case Y.ASCII:return k===27?(G=Y.EscapeStart,null):Y2(k,0,127)&&k!==14&&k!==15&&k!==27?(g2=!1,k):k===b?I:(g2=!1,i(a2));case Y.Roman:return k===27?(G=Y.EscapeStart,null):k===92?(g2=!1,165):k===126?(g2=!1,8254):Y2(k,0,127)&&k!==14&&k!==15&&k!==27&&k!==92&&k!==126?(g2=!1,k):k===b?I:(g2=!1,i(a2));case Y.Katakana:return k===27?(G=Y.EscapeStart,null):Y2(k,33,95)?(g2=!1,65344+k):k===b?I:(g2=!1,i(a2));case Y.LeadByte:return k===27?(G=Y.EscapeStart,null):Y2(k,33,126)?(g2=!1,v2=k,G=Y.TrailByte,null):k===b?I:(g2=!1,i(a2));case Y.TrailByte:if(k===27)return G=Y.EscapeStart,i(a2);if(Y2(k,33,126)){G=Y.LeadByte;var v=(v2-33)*94+k-33,D=x(v,p("jis0208"));return D===null?i(a2):D}return k===b?(G=Y.LeadByte,w.prepend(k),i(a2)):(G=Y.LeadByte,i(a2));case Y.EscapeStart:return k===36||k===40?(v2=k,G=Y.Escape,null):(w.prepend(k),g2=!1,G=i2,i(a2));case Y.Escape:var j=v2;v2=0;var q=null;if(j===40&&k===66&&(q=Y.ASCII),j===40&&k===74&&(q=Y.Roman),j===40&&k===73&&(q=Y.Katakana),j===36&&(k===64||k===66)&&(q=Y.LeadByte),q!==null){G=G=q;var V=g2;return g2=!0,V?i(a2):null}return w.prepend([j,k]),g2=!1,G=i2,i(a2)}}}function o2(J){J.fatal;var a2={ASCII:0,Roman:1,jis0208:2},Y=a2.ASCII;this.handler=function(G,i2){if(i2===b&&Y!==a2.ASCII)return G.prepend(i2),Y=a2.ASCII,[27,40,66];if(i2===b&&Y===a2.ASCII)return I;if((Y===a2.ASCII||Y===a2.Roman)&&(i2===14||i2===15||i2===27))return M(65533);if(Y===a2.ASCII&&C(i2))return i2;if(Y===a2.Roman&&(C(i2)&&i2!==92&&i2!==126||i2==165||i2==8254)){if(C(i2))return i2;if(i2===165)return 92;if(i2===8254)return 126}if(C(i2)&&Y!==a2.ASCII)return G.prepend(i2),Y=a2.ASCII,[27,40,66];if((i2===165||i2===8254)&&Y!==a2.Roman)return G.prepend(i2),Y=a2.Roman,[27,40,74];i2===8722&&(i2=65293);var v2=S(i2,p("jis0208"));if(v2===null)return M(i2);if(Y!==a2.jis0208)return G.prepend(i2),Y=a2.jis0208,[27,36,66];var g2=x3(v2/94)+33,w=v2%94+33;return[g2,w]}}s["ISO-2022-JP"]=function(J){return new o2(J)},m["ISO-2022-JP"]=function(J){return new W(J)};function r2(J){var a2=J.fatal,Y=0;this.handler=function(G,i2){if(i2===b&&Y!==0)return Y=0,i(a2);if(i2===b&&Y===0)return I;if(Y!==0){var v2=Y,g2=null;Y=0;var w=i2<127?64:65,k=v2<160?129:193;if((Y2(i2,64,126)||Y2(i2,128,252))&&(g2=(v2-k)*188+i2-w),Y2(g2,8836,10715))return 48508+g2;var v=g2===null?null:x(g2,p("jis0208"));return v===null&&A(i2)&&G.prepend(i2),v===null?i(a2):v}return A(i2)||i2===128?i2:Y2(i2,161,223)?65216+i2:Y2(i2,129,159)||Y2(i2,224,252)?(Y=i2,null):i(a2)}}function b2(J){J.fatal,this.handler=function(a2,Y){if(Y===b)return I;if(C(Y)||Y===128)return Y;if(Y===165)return 92;if(Y===8254)return 126;if(Y2(Y,65377,65439))return Y-65377+161;Y===8722&&(Y=65293);var G=B(Y);if(G===null)return M(Y);var i2=x3(G/188),v2=i2<31?129:193,g2=G%188,w=g2<63?64:65;return[i2+v2,g2+w]}}s.Shift_JIS=function(J){return new b2(J)},m.Shift_JIS=function(J){return new r2(J)};function _2(J){var a2=J.fatal,Y=0;this.handler=function(G,i2){if(i2===b&&Y!==0)return Y=0,i(a2);if(i2===b&&Y===0)return I;if(Y!==0){var v2=Y,g2=null;Y=0,Y2(i2,65,254)&&(g2=(v2-129)*190+(i2-65));var w=g2===null?null:x(g2,p("euc-kr"));return g2===null&&A(i2)&&G.prepend(i2),w===null?i(a2):w}return A(i2)?i2:Y2(i2,129,254)?(Y=i2,null):i(a2)}}function $(J){J.fatal,this.handler=function(a2,Y){if(Y===b)return I;if(C(Y))return Y;var G=S(Y,p("euc-kr"));if(G===null)return M(Y);var i2=x3(G/190)+129,v2=G%190+65;return[i2,v2]}}s["EUC-KR"]=function(J){return new $(J)},m["EUC-KR"]=function(J){return new _2(J)};function Z(J,a2){var Y=J>>8,G=J&255;return a2?[Y,G]:[G,Y]}function p2(J,a2){var Y=a2.fatal,G=null,i2=null;this.handler=function(v2,g2){if(g2===b&&(G!==null||i2!==null))return i(Y);if(g2===b&&G===null&&i2===null)return I;if(G===null)return G=g2,null;var w;if(J?w=(G<<8)+g2:w=(g2<<8)+G,G=null,i2!==null){var k=i2;return i2=null,Y2(w,56320,57343)?65536+(k-55296)*1024+(w-56320):(v2.prepend(Z(w,J)),i(Y))}return Y2(w,55296,56319)?(i2=w,null):Y2(w,56320,57343)?i(Y):w}}function w2(J,a2){a2.fatal,this.handler=function(Y,G){if(G===b)return I;if(Y2(G,0,65535))return Z(G,J);var i2=Z((G-65536>>10)+55296,J),v2=Z((G-65536&1023)+56320,J);return i2.concat(v2)}}s["UTF-16BE"]=function(J){return new w2(!0,J)},m["UTF-16BE"]=function(J){return new p2(!0,J)},s["UTF-16LE"]=function(J){return new w2(!1,J)},m["UTF-16LE"]=function(J){return new p2(!1,J)};function R2(J){J.fatal,this.handler=function(a2,Y){return Y===b?I:A(Y)?Y:63360+Y-128}}function P2(J){J.fatal,this.handler=function(a2,Y){return Y===b?I:C(Y)?Y:Y2(Y,63360,63487)?Y-63360+128:M(Y)}}s["x-user-defined"]=function(J){return new P2(J)},m["x-user-defined"]=function(J){return new R2(J)},q3.TextEncoder||(q3.TextEncoder=Q),q3.TextDecoder||(q3.TextDecoder=z),V3.exports&&(V3.exports={TextEncoder:q3.TextEncoder,TextDecoder:q3.TextDecoder,EncodingIndexes:q3["encoding-indexes"]})})(K0||{})})(n8);var m7=n8.exports,l8=m7,v7={TextEncoder:l8.TextEncoder,TextDecoder:l8.TextDecoder},u8={exports:{}};/*! For license information please see index.js.LICENSE.txt */(function(V3,q3){(function(Y2,d1){V3.exports=d1()})(K0,()=>(()=>{var Y2={3578:function(u2,O,A){var C=this&&this.__importDefault||function(s){return s&&s.__esModule?s:{default:s}};Object.defineProperty(O,"__esModule",{value:!0});const b=A(8764),E=C(A(3550)),I=A(5632),i=C(A(230)),M=C(A(5529)),h=A(2049),a=new(A(7001));class o{constructor(m){this.xprv=m}static fromEntropy(m){return new Promise((x,S)=>{I.pbkdf2("",m,4096,96,"sha512",(p,y)=>{p&&S(p),y[0]&=248,y[31]&=31,y[31]|=64,x(new o(y))})})}derive(m){const x=this.xprv.slice(0,32),S=this.xprv.slice(32,64),p=this.xprv.slice(64,96);let y,g;if(m<2147483648){const Q=b.Buffer.allocUnsafe(37);Q.writeUInt32LE(m,33);const c2=a.keyFromSecret(x.toString("hex"));b.Buffer.from(c2.pubBytes()).copy(Q,1),Q[0]=2,y=h.hmac512(p,Q),Q[0]=3,g=h.hmac512(p,Q)}else{const Q=b.Buffer.allocUnsafe(69);Q.writeUInt32LE(m,65),x.copy(Q,1),S.copy(Q,33),Q[0]=0,y=h.hmac512(p,Q),Q[0]=1,g=h.hmac512(p,Q)}const B=g.slice(32,64),_=y.slice(0,32),L=y.slice(32,64),N=new E.default(x,16,"le").add(new E.default(_.slice(0,28),16,"le").mul(new E.default(8))).toArrayLike(b.Buffer,"le",32);let F=new E.default(S,16,"le").add(new E.default(L,16,"le")).toArrayLike(b.Buffer,"le").slice(0,32);F.length!==32&&(F=b.Buffer.from(F.toString("hex").padEnd(32,"0"),"hex"));const z=b.Buffer.concat([N,F,B]);return new o(z)}toBip32PublicKey(){const m=a.keyFromSecret(this.xprv.slice(0,32).toString("hex")),x=b.Buffer.from(m.pubBytes());return new i.default(b.Buffer.concat([x,this.xprv.slice(64,96)]))}toBytes(){return this.xprv}toPrivateKey(){const m=a.keyFromSecret(this.xprv.slice(0,64));return new M.default(b.Buffer.from(m.privBytes()))}}O.default=o},230:function(u2,O,A){var C=this&&this.__importDefault||function(a){return a&&a.__esModule?a:{default:a}};Object.defineProperty(O,"__esModule",{value:!0});const b=A(8764),E=C(A(3550)),I=C(A(4093)),i=A(2049),M=new(A(7001));class h{constructor(o){this.xpub=o}derive(o){const s=this.xpub.slice(0,32),m=this.xpub.slice(32,64),x=b.Buffer.allocUnsafe(37);let S,p;if(x.writeUInt32LE(o,33),!(o<2147483648))throw new Error("can not derive hardened public key");s.copy(x,1),x[0]=2,S=i.hmac512(m,x),x[0]=3,p=i.hmac512(m,x);const y=p.slice(32,64),g=S.slice(0,32),B=new E.default(g.slice(0,28),16,"le").mul(new E.default(8)),_=M.g.mul(B),L=M.decodePoint(s.toString("hex")).add(_);return new h(b.Buffer.concat([b.Buffer.from(M.encodePoint(L)),y]))}toPublicKey(){const o=M.keyFromPublic(this.xpub.slice(0,32));return new I.default(b.Buffer.from(o.pubBytes()))}toBytes(){return this.xpub}static fromBytes(o){return new h(o)}}O.default=h},5529:function(u2,O,A){var C=this&&this.__importDefault||function(i){return i&&i.__esModule?i:{default:i}};Object.defineProperty(O,"__esModule",{value:!0});const b=A(8764),E=C(A(4093)),I=new(A(7001));O.default=class{constructor(i){this.privKey=i}toBytes(){return this.privKey}toPublicKey(){const i=I.keyFromSecret(this.privKey);return new E.default(b.Buffer.from(i.pubBytes()))}sign(i){const M=I.keyFromSecret(this.privKey).sign(i.toString("hex"));return b.Buffer.from(M.toBytes())}verify(i,M){return I.keyFromSecret(this.privKey).verify(M.toString("hex"),i.toString("hex"))}}},4093:(u2,O,A)=>{Object.defineProperty(O,"__esModule",{value:!0});const C=A(2049),b=new(A(7001));O.default=class{constructor(E){this.pubKey=E}toBytes(){return this.pubKey}hash(){return C.hash28(this.pubKey)}verify(E,I){return b.keyFromPublic(this.pubKey.toString("hex")).verify(I.toString("hex"),E.toString("hex"))}}},7001:(u2,O,A)=>{const C=A(3715),b=A(6266),E=b.utils,I=E.parseBytes,i=A(2568),M=A(6398);function h(){if(!(this instanceof h))return new h;const a=b.curves.ed25519.curve;this.curve=a,this.g=a.g,this.g.precompute(a.n.bitLength()+1),this.pointClass=a.point().constructor,this.encodingLength=Math.ceil(a.n.bitLength()/8),this.hash=C.sha512}u2.exports=h,h.prototype.signExtended=function(a,o){a=I(a);const s=this.keyFromSecret(o),m=this.hashInt(s.messagePrefix(),a),x=this.g.mul(m),S=this.encodePoint(x),p=this.hashInt(S,s.pubBytes(),a).mul(s.kl()),y=m.add(p).umod(this.curve.n);return this.makeSignature({R:x,S:y,Rencoded:S})},h.prototype.verify=function(a,o,s){a=I(a),o=this.makeSignature(o);const m=this.keyFromPublic(s),x=this.hashInt(o.Rencoded(),m.pubBytes(),a),S=this.g.mul(o.S());return o.R().add(m.pub().mul(x)).eq(S)},h.prototype.hashInt=function(){const a=this.hash();for(let o=0;o<arguments.length;o++)a.update(arguments[o]);return E.intFromLE(a.digest()).umod(this.curve.n)},h.prototype.keyFromPublic=function(a){return i.fromPublic(this,E.parseBytes(a))},h.prototype.keyFromSecret=function(a){return i.fromSecret(this,E.parseBytes(a))},h.prototype.makeSignature=function(a){return a instanceof M?a:new M(this,a)},h.prototype.encodePoint=function(a){const o=a.getY().toArray("le",this.encodingLength);return o[this.encodingLength-1]|=a.getX().isOdd()?128:0,o},h.prototype.decodePoint=function(a){const o=(a=E.parseBytes(a)).length-1,s=a.slice(0,o).concat(-129&a[o]),m=(128&a[o])!=0,x=E.intFromLE(s);return this.curve.pointFromY(x,m)},h.prototype.encodeInt=function(a){return a.toArray("le",this.encodingLength)},h.prototype.decodeInt=function(a){return E.intFromLE(a)},h.prototype.isPoint=function(a){return a instanceof this.pointClass}},2568:(u2,O,A)=>{const C=A(6266).utils,b=C.assert,E=C.parseBytes,I=C.cachedProperty;function i(M,h){this.eddsa=M,this._secret=E(h.secret),M.isPoint(h.pub)?(console.log("Its point"),this._pub=h.pub):this._pubBytes=E(h.pub)}i.fromPublic=function(M,h){return h instanceof i?h:new i(M,{pub:h})},i.fromSecret=function(M,h){return h instanceof i?h:new i(M,{secret:h})},i.prototype.secret=function(){return this._secret.slice(0,32)},I(i,"pubBytes",function(){return this.eddsa.encodePoint(this.pub())}),I(i,"pub",function(){return this._pubBytes?this.eddsa.decodePoint(this._pubBytes):this.eddsa.g.mul(this.kl())}),I(i,"privBytes",function(){return this._secret}),I(i,"priv",function(){return this.eddsa.decodeInt(this.privBytes())}),I(i,"kl",function(){return this.eddsa.decodeInt(this.privBytes().slice(0,32))}),I(i,"messagePrefix",function(){return this._secret.slice(32,64)}),i.prototype.sign=function(M){return b(this._secret,"KeyPair can only verify"),this.eddsa.signExtended(M,this)},i.prototype.verify=function(M,h){return this.eddsa.verify(M,h,this)},u2.exports=i},6398:(u2,O,A)=>{const C=A(3550),b=A(6266).utils,E=b.assert,I=b.cachedProperty,i=b.parseBytes;function M(h,a){this.eddsa=h,typeof a!="object"&&(a=i(a)),Array.isArray(a)&&(a={R:a.slice(0,h.encodingLength),S:a.slice(h.encodingLength)}),E(a.R&&a.S,"Signature without R or S"),h.isPoint(a.R)&&(this._R=a.R),C.isBN(a.S)&&(this._S=a.S),this._Rencoded=Array.isArray(a.R)?a.R:a.Rencoded,this._Sencoded=Array.isArray(a.S)?a.S:a.Sencoded}I(M,"S",function(){return this.eddsa.decodeInt(this.Sencoded())}),I(M,"R",function(){return this.eddsa.decodePoint(this.Rencoded())}),I(M,"Rencoded",function(){return this.eddsa.encodePoint(this.R())}),I(M,"Sencoded",function(){return this.eddsa.encodeInt(this.S())}),M.prototype.toBytes=function(){return this.Rencoded().concat(this.Sencoded())},M.prototype.toHex=function(){return b.encode(this.toBytes(),"hex").toUpperCase()},u2.exports=M},546:function(u2,O,A){var C=this&&this.__importDefault||function(M){return M&&M.__esModule?M:{default:M}};Object.defineProperty(O,"__esModule",{value:!0}),O.PrivateKey=O.PublicKey=O.Bip32PublicKey=O.Bip32PrivateKey=void 0;var b=A(3578);Object.defineProperty(O,"Bip32PrivateKey",{enumerable:!0,get:function(){return C(b).default}});var E=A(230);Object.defineProperty(O,"Bip32PublicKey",{enumerable:!0,get:function(){return C(E).default}});var I=A(4093);Object.defineProperty(O,"PublicKey",{enumerable:!0,get:function(){return C(I).default}});var i=A(5529);Object.defineProperty(O,"PrivateKey",{enumerable:!0,get:function(){return C(i).default}})},2049:function(u2,O,A){var C=this&&this.__createBinding||(Object.create?function(h,a,o,s){s===void 0&&(s=o),Object.defineProperty(h,s,{enumerable:!0,get:function(){return a[o]}})}:function(h,a,o,s){s===void 0&&(s=o),h[s]=a[o]}),b=this&&this.__setModuleDefault||(Object.create?function(h,a){Object.defineProperty(h,"default",{enumerable:!0,value:a})}:function(h,a){h.default=a}),E=this&&this.__importStar||function(h){if(h&&h.__esModule)return h;var a={};if(h!=null)for(var o in h)o!=="default"&&Object.prototype.hasOwnProperty.call(h,o)&&C(a,h,o);return b(a,h),a};Object.defineProperty(O,"__esModule",{value:!0}),O.hmac512=O.hash28=void 0;const I=A(8764),i=A(1191),M=E(A(3715));O.hash28=function(h){const a=i.blake2b(h,void 0,28);return I.Buffer.from(a)},O.hmac512=function(h,a){const o=M.hmac(M.sha512,h).update(a).digest();return I.Buffer.from(o)}},5723:(u2,O,A)=>{Object.defineProperty(O,"__esModule",{value:!0});const C=A(8764);O.default=class{constructor(){this.buf=C.Buffer.alloc(0)}get length(){return this.buf.length}read(b){if(b===0)return C.Buffer.alloc(0);if(b<0)throw new Error("invalid length");const E=this.buf.slice(0,b);if(this.buf=this.buf.slice(b),E.length<b)throw new Error("Not enough buffer");return E}push(b){b.length&&(this.buf=C.Buffer.concat([this.buf,b]))}}},7640:(u2,O)=>{Object.defineProperty(O,"__esModule",{value:!0}),O.default=class extends Array{constructor(){super(...arguments),this.byteSpan=[0,0]}setByteSpan(A){this.byteSpan=A}getByteSpan(){return this.byteSpan}}},1022:(u2,O)=>{Object.defineProperty(O,"__esModule",{value:!0});class A extends Map{constructor(){super(...arguments),this.byteSpan=[0,0]}setByteSpan(b){this.byteSpan=b}getByteSpan(){return this.byteSpan}}O.default=A},5257:(u2,O)=>{Object.defineProperty(O,"__esModule",{value:!0}),O.default=class{constructor(A,C){this.byteSpan=[0,0],this.value=A,this.tag=C}setByteSpan(A){this.byteSpan=A}getByteSpan(){return this.byteSpan}}},6217:function(u2,O,A){var C=this&&this.__createBinding||(Object.create?function(g,B,_,L){L===void 0&&(L=_),Object.defineProperty(g,L,{enumerable:!0,get:function(){return B[_]}})}:function(g,B,_,L){L===void 0&&(L=_),g[L]=B[_]}),b=this&&this.__setModuleDefault||(Object.create?function(g,B){Object.defineProperty(g,"default",{enumerable:!0,value:B})}:function(g,B){g.default=B}),E=this&&this.__importStar||function(g){if(g&&g.__esModule)return g;var B={};if(g!=null)for(var _ in g)_!=="default"&&Object.prototype.hasOwnProperty.call(g,_)&&C(B,g,_);return b(B,g),B},I=this&&this.__importDefault||function(g){return g&&g.__esModule?g:{default:g}};Object.defineProperty(O,"__esModule",{value:!0});const i=A(8764),M=E(A(2830)),h=I(A(4431)),a=A(3726),o=I(A(5723)),s=I(A(1604)),m=I(A(5257)),x=I(A(7640)),S=I(A(1022)),p=g=>g===255;class y extends M.Transform{constructor(){super({writableObjectMode:!1,readableObjectMode:!0}),this.needed=null,this.fresh=!0,this._parser=this.parse(),this.offset=0,this.usedBytes=[],this.bl=new o.default,this.restart()}static decode(B){const _=new y,L=new o.default;L.push(B);const N=_.parse();let F=N.next();for(;!F.done;){const z=L.read(F.value);if(z==null||z.length!==F.value)throw new Error("Insufficient data");F=N.next(z)}if(L.length>0)throw new Error("Remaining Bytes");return{bytes:B,value:F.value}}readUInt64(B,_,L){const N=(0,a.getBigNum)(B,_);return h.default.isBigNumber(N)?(0,a.addSpanBytesToObject)(N,[L,this.offset]):N}updateTracker(B){this.usedBytes.push(B),this.offset+=B.length}*readIndefiniteStringLength(B,_){let L,N=yield 1;const F=N.readUInt8(0);if(F===255)L=-1;else{const z=31&F,Q=this.readLength(z,_);let c2=Q.next();for(;!c2.done;)N=yield c2.value,this.updateTracker(N),c2=Q.next(N);if(L=c2.value,L<0||F>>5!==B)throw new Error("Invalid indefinite length encoding")}return L}*readLength(B,_){if(B<24)return B;if(B===24)return(yield 1).readUInt8(0);if(B===25)return(yield 2).readUInt16BE(0);if(B===26)return(yield 4).readUInt32BE(0);if(B===27){const L=(yield 4).readUInt32BE(0),N=(yield 4).readUInt32BE(0);return this.readUInt64(L,N,_)}if(B===31)return-1;throw new Error("Invalid length encoding")}_transform(B,_,L){for(this.bl.push(B);this.bl.length>=this.needed;){let N,F=null;N=this.needed===null?void 0:this.bl.read(this.needed);try{F=this._parser.next(N)}catch(z){return L(z)}this.needed&&(this.fresh=!1),F.done?(this.push({bytes:this.usedBytes,value:F.value}),this.restart()):this.needed=F.value||1/0}return L()}*parse(B){let _,L=this.offset;B?(_=B,L-=B.length):(_=yield 1,this.updateTracker(_));const N=_.readUInt8(0),F=N>>5,z=31&N;let Q;if(F===7){if(z===25)return _=yield 2,this.updateTracker(_),(T=>{const u=32768&T;let t=31744&T;const e=1023&T;if(t===31744)t=261120;else if(t!==0)t+=114688;else if(e!==0)return(u?-1:1)*e*a.POW_2_24;const r=i.Buffer.alloc(4);return r.writeUInt32BE(u<<16|t<<13|e<<13),r.readFloatBE(0)})(_.readUInt16BE(0));if(z===26)return _=yield 4,this.updateTracker(_),_.readFloatBE(0);if(z===27)return _=yield 8,this.updateTracker(_),_.readDoubleBE(0)}const c2=this.readLength(z,L);let d=c2.next();for(;!d.done;)_=yield d.value,this.updateTracker(_),d=c2.next(_);if(Q=d.value,Q<0&&(F<2||F>6))throw new Error("Invalid length");switch(F){case 0:return Q;case 1:if(Q===Number.MAX_SAFE_INTEGER){const T=new h.default(-1).minus(new h.default(Number.MAX_SAFE_INTEGER.toString(16),16));return(0,a.addSpanBytesToObject)(T,[L,this.offset])}if(h.default.isBigNumber(Q)){const T=new h.default(-1).minus(Q);return(0,a.addSpanBytesToObject)(T,[L,this.offset])}return-1-Q;case 2:if(Q<0){const T=[];{const t=this.readIndefiniteStringLength(F,L);let e=t.next();for(;!e.done;)_=yield e.value,this.updateTracker(_),e=t.next(_);Q=e.value}for(;Q>=0;){_=yield Q,this.updateTracker(_),T.push(_);{const t=this.readIndefiniteStringLength(F,L);let e=t.next();for(;!e.done;)_=yield e.value,this.updateTracker(_),e=t.next(_);Q=e.value}}const u=i.Buffer.concat(T);return(0,a.addSpanBytesToObject)(u,[L,this.offset])}return _=yield Q,this.updateTracker(_),(0,a.addSpanBytesToObject)(_,[L,this.offset]);case 3:{const T=[];if(Q<0){{const u=this.readIndefiniteStringLength(F,L);let t=u.next();for(;!t.done;)_=yield t.value,this.updateTracker(_),t=u.next(_);Q=t.value}for(;Q>=0;){_=yield Q,this.updateTracker(_),T.push(_);{const u=this.readIndefiniteStringLength(F,L);let t=u.next();for(;!t.done;)_=yield t.value,this.updateTracker(_),t=u.next(_);Q=t.value}}return(0,a.utf8Decoder)(i.Buffer.concat(T))}return _=yield Q,this.updateTracker(_),(0,a.utf8Decoder)(_)}case 4:{if(Q<0){const u=new x.default;_=yield 1,this.updateTracker(_);let t=_.readUInt8(0);for(;!p(t);)u.push(yield*this.parse(_)),_=yield 1,this.updateTracker(_),t=_.readUInt8(0);return u.setByteSpan([L,this.offset]),u}const T=new x.default;for(let u=0;u<Q;u+=1)T.push(yield*this.parse());return T.setByteSpan([L,this.offset]),T}case 5:{if(Q<0){const u=new S.default;_=yield 1,this.updateTracker(_);let t=_.readUInt8(0);for(;!p(t);){const e=yield*this.parse(_),r=yield*this.parse();u.set(e,r),_=yield 1,this.updateTracker(_),t=_.readUInt8(0)}return u.setByteSpan([L,this.offset]),u}const T=new S.default;for(let u=0;u<Q;u+=1){const t=yield*this.parse(),e=yield*this.parse();T.set(t,e)}return T.setByteSpan([L,this.offset]),T}case 6:{const T=new m.default(yield*this.parse(),Q);return T.setByteSpan([L,this.offset]),T}case 7:switch(Q){case 20:return!1;case 21:return!0;case 22:return null;case 23:return;default:return new s.default(Q)}default:throw new Error("Invalid CBOR encoding")}}restart(){this.needed=null,this._parser=this.parse(),this.fresh=!0,this.offset=0,this.usedBytes=[]}_flush(B){B(this.fresh?null:new Error("unexpected end of input"))}}O.default=y},1604:(u2,O)=>{Object.defineProperty(O,"__esModule",{value:!0}),O.default=class{constructor(A){this.value=A}}},7747:function(u2,O,A){var C=this&&this.__importDefault||function(o){return o&&o.__esModule?o:{default:o}};Object.defineProperty(O,"__esModule",{value:!0});const b=A(8764),E=C(A(4431)),I=A(7730),i=A(2339),M=A(3726),h=b.Buffer.from("f97e00","hex"),a=b.Buffer.from("ff","hex");O.default=(o,s={collapseBigNumber:!0})=>{const m=[];function x(_){const L=b.Buffer.allocUnsafe(1);L.writeUInt8(_,0),m.push(L)}function S(_){m.push(_)}function p(_){const L=b.Buffer.allocUnsafe(4);L.writeUInt32BE(_,0),m.push(L)}function y(_,L){L<24?x(_<<5|L):L<256?(x(_<<5|24),x(L)):L<65536?(x(_<<5|25),function(N){const F=b.Buffer.allocUnsafe(2);F.writeUInt16BE(N,0),m.push(F)}(L)):L<4294967296?(x(_<<5|26),p(L)):(x(_<<5|27),function(N){const F=N%M.POW_2_32,z=(N-F)/M.POW_2_32,Q=b.Buffer.allocUnsafe(8);Q.writeUInt32BE(z,0),Q.writeUInt32BE(F,4),m.push(Q)}(L))}function g(_){return Object.is(_,-0)?S(b.Buffer.from("f98000","hex")):_>=0&&_<=M.POW_2_53?y(0,_):-M.POW_2_53<=_&&_<0?y(1,-(_+1)):void 0}function B(_){let L=_,N=0,F=2;if(L.isNegative()&&(L=L.negated().minus(1),N=1,F=3),s.collapseBigNumber&&L.lte(M.MAX_BIG_NUM_INT64)){if(L.lte(M.MAX_BIG_NUM_INT32))return y(N,L.toNumber());x(N<<5|27),p(L.dividedToIntegerBy(M.SHIFT32).toNumber()),p(L.mod(M.SHIFT32).toNumber())}else{let z=L.toString(16);z.length%2&&(z=`0${z}`),y(6,F);const Q=b.Buffer.from(z,"hex");y(2,Q.length),S(Q)}}return function _(L){if(L===!1)return x(244);if(L===!0)return x(245);if(L===null)return x(246);if(L===void 0)return x(247);switch(typeof L){case"number":return Math.round(L)===L?g(L):(x(251),function(N){const F=b.Buffer.allocUnsafe(8);F.writeDoubleBE(N),m.push(F)}(L));case"string":{const N=b.Buffer.from(L,"utf8");return y(3,N.length),S(N)}default:if(Array.isArray(L)){L instanceof i.IndefiniteArray?x(159):y(4,L.length);for(const N of L)_(N);L instanceof i.IndefiniteArray&&S(a)}else if(L instanceof b.Buffer)y(2,L.length),S(L);else if(L instanceof ArrayBuffer){const N=b.Buffer.from(L);y(2,N.length),S(N)}else if(L instanceof Uint8ClampedArray){const N=b.Buffer.from(L);y(2,N.length),S(N)}else if(L instanceof Uint8Array){const N=b.Buffer.from(L);y(2,N.length),S(N)}else if(E.default.isBigNumber(L))(function(N){if(N.isNaN())S(h);else if(N.isInteger())B(N);else{y(6,4),y(4,2);const F=N.decimalPlaces(),z=N.shiftedBy(F);g(-F),z.abs().isLessThan(M.MAX_BIG_NUM_INT)?g(z.toNumber()):B(z)}})(L);else if(L instanceof I.CborTag)y(6,L.tag),_(L.value);else{let N;N=L instanceof Map?[...L.entries()]:[...Object.entries(L)],L instanceof i.IndefiniteMap?x(191):y(5,N.length);for(const[F,z]of N)_(F),_(z);L instanceof i.IndefiniteMap&&S(a)}}}(o),b.Buffer.concat(m)}},2339:function(u2,O,A){var C=this&&this.__importDefault||function(I){return I&&I.__esModule?I:{default:I}};Object.defineProperty(O,"__esModule",{value:!0}),O.CborTag=O.IndefiniteArray=O.IndefiniteMap=void 0;class b extends Map{}O.IndefiniteMap=b,O.IndefiniteArray=class extends Array{};var E=A(5257);Object.defineProperty(O,"CborTag",{enumerable:!0,get:function(){return C(E).default}})},7730:function(u2,O,A){var C=this&&this.__createBinding||(Object.create?function(M,h,a,o){o===void 0&&(o=a),Object.defineProperty(M,o,{enumerable:!0,get:function(){return h[a]}})}:function(M,h,a,o){o===void 0&&(o=a),M[o]=h[a]}),b=this&&this.__exportStar||function(M,h){for(var a in M)a==="default"||Object.prototype.hasOwnProperty.call(h,a)||C(h,M,a)},E=this&&this.__importDefault||function(M){return M&&M.__esModule?M:{default:M}};Object.defineProperty(O,"__esModule",{value:!0}),O.Decoder=O.Encoder=void 0;const I=E(A(7747));O.Encoder={encode:I.default};var i=A(6217);Object.defineProperty(O,"Decoder",{enumerable:!0,get:function(){return E(i).default}}),b(A(2339),O)},3726:function(u2,O,A){var C=this&&this.__importDefault||function(I){return I&&I.__esModule?I:{default:I}};Object.defineProperty(O,"__esModule",{value:!0}),O.utf8Decoder=O.addSpanBytesToObject=O.getBigNum=O.MAX_BIG_NUM_INT64=O.MAX_BIG_NUM_INT32=O.MAX_BIG_NUM_INT=O.POW_2_53=O.POW_2_32=O.POW_2_24=O.SHIFT32=void 0;const b=C(A(4431));O.SHIFT32=4294967296,O.POW_2_24=5960464477539063e-23,O.POW_2_32=4294967296,O.POW_2_53=9007199254740992,O.MAX_BIG_NUM_INT=new b.default("0x20000000000000"),O.MAX_BIG_NUM_INT32=new b.default("0xffffffff"),O.MAX_BIG_NUM_INT64=new b.default("0xffffffffffffffff"),O.getBigNum=(I,i)=>I>2097151?new b.default(I).times(O.SHIFT32).plus(i):I*O.SHIFT32+i,O.addSpanBytesToObject=(I,i)=>{const M=I;return M.byteSpan=i,M.getByteSpan=function(){return this.byteSpan},M};const E=new TextDecoder("utf8",{fatal:!0,ignoreBOM:!0});O.utf8Decoder=I=>E.decode(I)},6084:(u2,O,A)=>{Object.defineProperty(O,"__esModule",{value:!0});const C=A(7730),b=A(546),E=A(1191),I=A(8764);class i{constructor(h){this.protectedMap=h.protectedMap,this.unProtectedMap=h.unProtectedMap,this.payload=h.payload,this.unProtectedMap.get("hashed")==null&&this.unProtectedMap.set("hashed",!1),this.signature=h.signature}static fromCbor(h){const a=C.Decoder.decode(I.Buffer.from(h,"hex"));if(!(a.value instanceof Array))throw Error("Invalid CBOR");if(a.value.length!==4)throw Error("Invalid COSE_SIGN1");let o;const s=a.value[0];try{if(o=C.Decoder.decode(s).value,!(o instanceof Map))throw Error()}catch{throw Error("Invalid protected")}const m=a.value[1];if(!(m instanceof Map))throw Error("Invalid unprotected");const x=a.value[2],S=a.value[3];return new i({protectedMap:o,unProtectedMap:m,payload:x,signature:S})}createSigStructure(h=I.Buffer.alloc(0)){let a=I.Buffer.alloc(0);this.protectedMap.size!==0&&(a=C.Encoder.encode(this.protectedMap));const o=["Signature1",a,h,this.payload];return C.Encoder.encode(o)}buildMessage(h){this.signature=h;let a=I.Buffer.alloc(0);this.protectedMap.size!==0&&(a=C.Encoder.encode(this.protectedMap));const o=[a,this.unProtectedMap,this.payload,this.signature];return C.Encoder.encode(o)}verifySignature({externalAad:h=I.Buffer.alloc(0),publicKeyBuffer:a}={}){if(a||(a=this.getPublicKey()),!a)throw Error("Public key not found");if(!this.signature)throw Error("Signature not found");return new b.PublicKey(a).verify(this.signature,this.createSigStructure(h))}hashPayload(){if(!this.unProtectedMap)throw Error("Invalid unprotected map");if(!this.payload)throw Error("Invalid payload");if(this.unProtectedMap.get("hashed"))throw Error("Payload already hashed");if(this.unProtectedMap.get("hashed")!=0)throw Error("Invalid unprotected map");this.unProtectedMap.set("hashed",!0);const h=(0,E.blake2b)(this.payload,void 0,24);this.payload=I.Buffer.from(h)}getAddress(){return this.protectedMap.get("address")}getPublicKey(){return this.protectedMap.get(4)}getSignature(){return this.signature}}O.default=i},2716:function(u2,O,A){var C=this&&this.__createBinding||(Object.create?function(i,M,h,a){a===void 0&&(a=h);var o=Object.getOwnPropertyDescriptor(M,h);o&&!("get"in o?!M.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return M[h]}}),Object.defineProperty(i,a,o)}:function(i,M,h,a){a===void 0&&(a=h),i[a]=M[h]}),b=this&&this.__exportStar||function(i,M){for(var h in i)h==="default"||Object.prototype.hasOwnProperty.call(M,h)||C(M,i,h)},E=this&&this.__importDefault||function(i){return i&&i.__esModule?i:{default:i}};Object.defineProperty(O,"__esModule",{value:!0}),O.CoseSign1=void 0;var I=A(6084);Object.defineProperty(O,"CoseSign1",{enumerable:!0,get:function(){return E(I).default}}),b(A(7225),O)},7225:(u2,O,A)=>{Object.defineProperty(O,"__esModule",{value:!0}),O.getPublicKeyFromCoseKey=void 0;const C=A(7730),b=A(8764);O.getPublicKeyFromCoseKey=E=>{const I=C.Decoder.decode(b.Buffer.from(E,"hex")).value.get(-2);if(I)return I;throw Error("Public key not found")}},7801:function(u2,O,A){var C=this&&this.__importDefault||function(M){return M&&M.__esModule?M:{default:M}};Object.defineProperty(O,"__esModule",{value:!0}),O.BaseAddress=void 0;const b=A(8764),E=A(23),I=C(A(4483));class i extends I.default{constructor(h,a,o){super(h,a),this.stakeCredential=o,this.computeHex()}computeHex(){let h=0;this._paymentCredential.type===E.HashType.ADDRESS||this._paymentCredential.type===E.HashType.SCRIPT&&(h|=16),this.stakeCredential.type===E.HashType.ADDRESS||this.stakeCredential.type===E.HashType.SCRIPT&&(h|=32),h|=this.networkId;const a=`${h.toString(16).padStart(2,"0")}${this._paymentCredential.hash}${this.stakeCredential.hash}`;this.addressHex=a,this.addressBytes=b.Buffer.from(a,"hex"),this.addressBech32=this.computeBech32(this.addressBytes)}}O.BaseAddress=i,O.default=i},5027:function(u2,O,A){var C=this&&this.__importDefault||function(I){return I&&I.__esModule?I:{default:I}};Object.defineProperty(O,"__esModule",{value:!0}),O.ByronAddress=void 0;const b=C(A(7191));class E{constructor(i){this.addressBech32=b.default.encode(i),this.addressBytes=i,this.addressHex=i.toString("hex")}getHex(){return this.addressHex}getBytes(){return this.addressBytes}getBech32(){return this.addressBech32}}O.ByronAddress=E,O.default=E},1989:function(u2,O,A){var C=this&&this.__importDefault||function(M){return M&&M.__esModule?M:{default:M}};Object.defineProperty(O,"__esModule",{value:!0}),O.EnterpriseAddress=void 0;const b=A(8764),E=A(23),I=C(A(4483));class i extends I.default{constructor(h,a){super(h,a),this.computeHex()}computeHex(){let h=96;this._paymentCredential.type===E.HashType.ADDRESS||this._paymentCredential.type===E.HashType.SCRIPT&&(h|=16),h|=this.networkId;const a=`${h.toString(16).padStart(2,"0")}${this._paymentCredential.hash}`;this.addressHex=a,this.addressBytes=b.Buffer.from(a,"hex"),this.addressBech32=this.computeBech32(this.addressBytes)}}O.EnterpriseAddress=i,O.default=i},9105:function(u2,O,A){var C=this&&this.__importDefault||function(M){return M&&M.__esModule?M:{default:M}};Object.defineProperty(O,"__esModule",{value:!0}),O.PointerAddress=void 0;const b=A(8764),E=A(23),I=C(A(4483));class i extends I.default{constructor(h,a,o){super(h,a),this._vlq=o,this.computeHex()}computeHex(){let h=64;this._paymentCredential.type===E.HashType.ADDRESS||this._paymentCredential.type===E.HashType.SCRIPT&&(h|=16),h|=this.networkId;const a=`${h.toString(16).padStart(2,"0")}${this._paymentCredential.hash}${this._vlq}`;this.addressHex=a,this.addressBytes=b.Buffer.from(a,"hex"),this.addressBech32=this.computeBech32(this.addressBytes)}}O.PointerAddress=i,O.default=i},7452:(u2,O,A)=>{Object.defineProperty(O,"__esModule",{value:!0}),O.RewardAddress=void 0;const C=A(8764),b=A(7715),E=A(23);class I{constructor(M,h){this.addressHex="",this.addressBytes=C.Buffer.alloc(0),this.addressBech32="",this._stakeCredential=h,this.networkId=M,this.computeHex()}computeBech32(M){const h=this.networkId===E.NetworkId.MAINNET?"stake":"stake_test",a=b.bech32.toWords(M);return b.bech32.encode(h,a,1e3)}computeHex(){let M=224;this._stakeCredential.type===E.HashType.ADDRESS||this._stakeCredential.type===E.HashType.SCRIPT&&(M|=16),M|=this.networkId;const h=`${M.toString(16).padStart(2,"0")}${this._stakeCredential.hash}`;this.addressHex=h,this.addressBytes=C.Buffer.from(h,"hex"),this.addressBech32=this.computeBech32(this.addressBytes)}get stakeCredential(){return this._stakeCredential}getHex(){return this.addressHex}getBytes(){return this.addressBytes}getBech32(){return this.addressBech32}getNetworkId(){return this.networkId}}O.RewardAddress=I,O.default=I},4483:(u2,O,A)=>{Object.defineProperty(O,"__esModule",{value:!0}),O.ShelleyTypeAddress=void 0;const C=A(8764),b=A(7715),E=A(23);class I{constructor(M,h){this.addressHex="",this.addressBytes=C.Buffer.alloc(0),this.addressBech32="",this.networkId=M,this._paymentCredential=h}computeBech32(M){const h=this.networkId===E.NetworkId.MAINNET?"addr":"addr_test",a=b.bech32.toWords(M);return b.bech32.encode(h,a,1e3)}get paymentCredential(){return this._paymentCredential}getHex(){return this.addressHex}getBytes(){return this.addressBytes}getBech32(){return this.addressBech32}getNetworkId(){return this.networkId}}O.ShelleyTypeAddress=I,O.default=I},3604:(u2,O,A)=>{Object.defineProperty(O,"__esModule",{value:!0}),O.RewardAddress=O.PointerAddress=O.EnterpriseAddress=O.ByronAddress=O.BaseAddress=void 0;var C=A(7801);Object.defineProperty(O,"BaseAddress",{enumerable:!0,get:function(){return C.BaseAddress}});var b=A(5027);Object.defineProperty(O,"ByronAddress",{enumerable:!0,get:function(){return b.ByronAddress}});var E=A(1989);Object.defineProperty(O,"EnterpriseAddress",{enumerable:!0,get:function(){return E.EnterpriseAddress}});var I=A(9105);Object.defineProperty(O,"PointerAddress",{enumerable:!0,get:function(){return I.PointerAddress}});var i=A(7452);Object.defineProperty(O,"RewardAddress",{enumerable:!0,get:function(){return i.RewardAddress}})},1617:(u2,O)=>{Object.defineProperty(O,"__esModule",{value:!0}),O.maxTokenAmount=void 0,O.maxTokenAmount="9223372036854775807"},9528:function(u2,O,A){var C=this&&this.__createBinding||(Object.create?function(h,a,o,s){s===void 0&&(s=o);var m=Object.getOwnPropertyDescriptor(a,o);m&&!("get"in m?!a.__esModule:m.writable||m.configurable)||(m={enumerable:!0,get:function(){return a[o]}}),Object.defineProperty(h,s,m)}:function(h,a,o,s){s===void 0&&(s=o),h[s]=a[o]}),b=this&&this.__setModuleDefault||(Object.create?function(h,a){Object.defineProperty(h,"default",{enumerable:!0,value:a})}:function(h,a){h.default=a}),E=this&&this.__importStar||function(h){if(h&&h.__esModule)return h;var a={};if(h!=null)for(var o in h)o!=="default"&&Object.prototype.hasOwnProperty.call(h,o)&&C(a,h,o);return b(a,h),a};Object.defineProperty(O,"__esModule",{value:!0}),O.PlutusDataFactory=O.NativeScriptFactory=O.address=O.Transaction=O.types=O.utils=O.crypto=void 0,O.crypto=E(A(3678)),O.utils=E(A(6397)),O.types=E(A(23));var I=A(9779);Object.defineProperty(O,"Transaction",{enumerable:!0,get:function(){return I.Transaction}}),O.address=E(A(3604));var i=A(3117);Object.defineProperty(O,"NativeScriptFactory",{enumerable:!0,get:function(){return i.NativeScriptFactory}});var M=A(2383);Object.defineProperty(O,"PlutusDataFactory",{enumerable:!0,get:function(){return M.PlutusDataFactory}})},7067:(u2,O)=>{var A;Object.defineProperty(O,"__esModule",{value:!0}),O.RedeemerTag=void 0,(A=O.RedeemerTag||(O.RedeemerTag={}))[A.SPEND=0]="SPEND",A[A.MINT=1]="MINT",A[A.CERT=2]="CERT",A[A.REWARD=3]="REWARD"},3117:function(u2,O,A){var C=this&&this.__createBinding||(Object.create?function(o,s,m,x){x===void 0&&(x=m);var S=Object.getOwnPropertyDescriptor(s,m);S&&!("get"in S?!s.__esModule:S.writable||S.configurable)||(S={enumerable:!0,get:function(){return s[m]}}),Object.defineProperty(o,x,S)}:function(o,s,m,x){x===void 0&&(x=m),o[x]=s[m]}),b=this&&this.__setModuleDefault||(Object.create?function(o,s){Object.defineProperty(o,"default",{enumerable:!0,value:s})}:function(o,s){o.default=s}),E=this&&this.__importStar||function(o){if(o&&o.__esModule)return o;var s={};if(o!=null)for(var m in o)m!=="default"&&Object.prototype.hasOwnProperty.call(o,m)&&C(s,o,m);return b(s,o),s};Object.defineProperty(O,"__esModule",{value:!0}),O.NativeScriptFactory=void 0;const I=A(8764),i=E(A(7730)),M=A(3678),h=A(6171);class a{constructor(s){this.nativeScript=s;const m=(0,h.encodeNativeScript)(s);this._cbor=i.Encoder.encode(m),this._policyId=(0,M.hash28)(I.Buffer.from(`00${this._cbor.toString("hex")}`,"hex"))}cbor(){return this._cbor}policyId(){return this._policyId}json(){return this.nativeScript}}O.NativeScriptFactory=a,O.default=a},2383:function(u2,O,A){var C=this&&this.__createBinding||(Object.create?function(h,a,o,s){s===void 0&&(s=o);var m=Object.getOwnPropertyDescriptor(a,o);m&&!("get"in m?!a.__esModule:m.writable||m.configurable)||(m={enumerable:!0,get:function(){return a[o]}}),Object.defineProperty(h,s,m)}:function(h,a,o,s){s===void 0&&(s=o),h[s]=a[o]}),b=this&&this.__setModuleDefault||(Object.create?function(h,a){Object.defineProperty(h,"default",{enumerable:!0,value:a})}:function(h,a){h.default=a}),E=this&&this.__importStar||function(h){if(h&&h.__esModule)return h;var a={};if(h!=null)for(var o in h)o!=="default"&&Object.prototype.hasOwnProperty.call(h,o)&&C(a,h,o);return b(a,h),a};Object.defineProperty(O,"__esModule",{value:!0}),O.PlutusDataFactory=void 0;const I=E(A(7730)),i=A(3678),M=A(6171);O.PlutusDataFactory=class{constructor(h){this.plutusData=h;const a=(0,M.encodePlutusData)(h);this._cbor=I.Encoder.encode(a),this._plutusDataHash=(0,i.hash32)(this._cbor)}cbor(){return this._cbor}plutusDataHash(){return this._plutusDataHash}json(){return this.plutusData}}},9779:function(u2,O,A){var C=this&&this.__createBinding||(Object.create?function(B,_,L,N){N===void 0&&(N=L);var F=Object.getOwnPropertyDescriptor(_,L);F&&!("get"in F?!_.__esModule:F.writable||F.configurable)||(F={enumerable:!0,get:function(){return _[L]}}),Object.defineProperty(B,N,F)}:function(B,_,L,N){N===void 0&&(N=L),B[N]=_[L]}),b=this&&this.__setModuleDefault||(Object.create?function(B,_){Object.defineProperty(B,"default",{enumerable:!0,value:_})}:function(B,_){B.default=_}),E=this&&this.__importStar||function(B){if(B&&B.__esModule)return B;var _={};if(B!=null)for(var L in B)L!=="default"&&Object.prototype.hasOwnProperty.call(B,L)&&C(_,B,L);return b(_,B),_},I=this&&this.__importDefault||function(B){return B&&B.__esModule?B:{default:B}};Object.defineProperty(O,"__esModule",{value:!0}),O.Transaction=void 0;const i=A(8764),M=E(A(7730)),h=I(A(4431)),a=I(A(6486)),o=A(2027),s=A(23),m=A(6171),x=A(3678),S=A(6397),p=I(A(9677)),y=A(9494);class g{constructor({protocolParams:_}){this.inputs=[],this.outputs=[],this.certificates=[],this.withdrawals=[],this.requiredWitnesses=new Map,this.requiredNativeScriptWitnesses=new Map,this.fee=new h.default(5e6),this.witnesses=[],this.plutusScriptMap=new Map,this.nativeScriptList=[],this.collaterals=[],this.requiredSigners=new Map,this.plutusDataList=[],this._isPlutusTransaction=!1,this.mints=[],this._protocolParams=_}get protocolParams(){return this._protocolParams}getTTL(){return this.ttl}setTTL(_){this.ttl=_}getValidityIntervalStart(){return this.validityIntervalStart}setValidityIntervalStart(_){this.validityIntervalStart=_}addInput(_){if(_.address.paymentCredential.type===s.HashType.ADDRESS)this.requiredWitnesses.set(_.address.paymentCredential.hash,_.address.paymentCredential.bipPath);else if(_.address.paymentCredential.type===s.HashType.SCRIPT){if(_.address.paymentCredential.plutusScript)this._isPlutusTransaction=!0,this.plutusScriptMap.set(_.address.paymentCredential.plutusScript.cborHex,_.address.paymentCredential.plutusScript.type);else if(_.address.paymentCredential.nativeScript){const L=_.address.paymentCredential.nativeScript,N=(0,o.getPubKeyHashListFromNativeScript)(L);for(const F of N)this.requiredNativeScriptWitnesses.set(F,void 0);this.nativeScriptList.push(L)}}_.plutusData&&this.plutusDataList.push(_.plutusData),this.inputs.push(_)}addRequiredSigner(_){this.requiredSigners.set(_.hash,_.bipPath)}addCollateral(_){_.address.paymentCredential.type===s.HashType.ADDRESS&&this.requiredWitnesses.set(_.address.paymentCredential.hash,_.address.paymentCredential.bipPath),this.collaterals.push(_)}addMint(_){if(this.mints.push(_),_.plutusScript)this._isPlutusTransaction=!0,this.plutusScriptMap.set(_.plutusScript.cborHex,_.plutusScript.type);else if(_.nativeScript){const L=(0,o.getPubKeyHashListFromNativeScript)(_.nativeScript);for(const N of L)this.requiredNativeScriptWitnesses.set(N,void 0);this.nativeScriptList.push(_.nativeScript)}}addCertificate(_){_.certType===s.CertificateType.STAKE_DELEGATION?_.stakeCredential.type===s.HashType.ADDRESS&&this.requiredWitnesses.set(_.stakeCredential.hash,_.stakeCredential.bipPath):_.certType===s.CertificateType.STAKE_DE_REGISTRATION&&_.stakeCredential.type===s.HashType.ADDRESS&&this.requiredWitnesses.set(_.stakeCredential.hash,_.stakeCredential.bipPath),this.certificates.push(_)}addOutput(_){const L=_;if(L.tokens=(0,o.sortTokens)(L.tokens),L.plutusData){const N=M.Encoder.encode((0,m.encodePlutusData)(L.plutusData));L.plutusDataHash=(0,x.hash32)(N).toString("hex")}this.outputs.push(L),L.plutusData&&this.plutusDataList.push(L.plutusData)}addWithdrawal(_){_.rewardAccount.stakeCredential.type===s.HashType.ADDRESS&&this.requiredWitnesses.set(_.rewardAccount.stakeCredential.hash,_.rewardAccount.stakeCredential.bipPath),this.withdrawals.push(_)}transactionBody({extraOutputs:_,scriptDataHash:L}){const N=new Map;N.set(s.TransactionBodyItemType.INPUTS,(0,m.encodeInputs)(this.inputs));let F=this.outputs;if(_&&_.length>0&&(F=F.concat(_)),N.set(s.TransactionBodyItemType.OUTPUTS,(0,m.encodeOutputs)(F)),N.set(s.TransactionBodyItemType.FEE,this.fee),this.ttl!==void 0&&N.set(s.TransactionBodyItemType.TTL,this.ttl),this.validityIntervalStart!==void 0&&N.set(s.TransactionBodyItemType.VALIDITY_INTERVAL_START,this.validityIntervalStart),this.certificates.length>0&&N.set(s.TransactionBodyItemType.CERTIFICATES,(0,m.encodeCertificates)(this.certificates)),this.withdrawals.length>0&&N.set(s.TransactionBodyItemType.WITHDRAWALS,(0,m.encodeWithdrawals)(this.withdrawals)),this.auxiliaryData){const Q=(0,m.encodeAuxiliaryData)(this.auxiliaryData),c2=M.Encoder.encode(Q),d=(0,x.hash32)(c2);N.set(s.TransactionBodyItemType.AUXILIARY_DATA_HASH,d)}a.default.isEmpty(this.mints)||N.set(s.TransactionBodyItemType.MINT,(0,m.encodeMint)(this.mints)),L&&N.set(s.TransactionBodyItemType.SCRIPT_DATA_HASH,L),a.default.isEmpty(this.collaterals)||N.set(s.TransactionBodyItemType.COLLATERAL_INPUTS,(0,m.encodeCollaterals)(this.collaterals));const z=Array.from(this.requiredSigners.keys());return a.default.isEmpty(z)||N.set(s.TransactionBodyItemType.REQUIRED_SIGNERS,z.map(Q=>i.Buffer.from(Q,"hex"))),N}transactionFee(_){return new h.default(_).times(this._protocolParams.minFeeA).plus(this._protocolParams.minFeeB).integerValue(h.default.ROUND_CEIL)}contractFee(){let _=0,L=0;for(const z of this.inputs)z.redeemer&&(_+=z.redeemer.exUnits.mem,L+=z.redeemer.exUnits.steps);for(const z of this.mints)z.redeemer&&(_+=z.redeemer.exUnits.mem,L+=z.redeemer.exUnits.steps);const N=new h.default(_).times(this._protocolParams.priceMem),F=new h.default(L).times(this._protocolParams.priceSteps);return N.plus(F).integerValue(h.default.ROUND_CEIL)}calculateTxSize(_){const L=new Map;for(const[c2,d]of this.requiredNativeScriptWitnesses.entries())L.set(c2,d);for(const[c2,d]of this.requiredSigners.entries())L.set(c2,d);for(const[c2,d]of this.requiredWitnesses.entries())L.set(c2,d);const N=[];for(const[c2]of Array.from(L.keys()).entries())N.push({publicKey:i.Buffer.alloc(32,c2),signature:i.Buffer.alloc(64)});const F=(0,m.encodeWitnesses)(N,this.inputs,this.plutusDataList,this.plutusScriptMap,this.nativeScriptList,this.mints),z=(0,o.generateScriptDataHash)(F,this._protocolParams.languageView),Q=[this.transactionBody({extraOutputs:_,scriptDataHash:z}),F,!0,this.auxiliaryData?(0,m.encodeAuxiliaryData)(this.auxiliaryData):null];return M.Encoder.encode(Q).length}calculateFee(_){const L=this.calculateTxSize(_),N=this.transactionFee(L),F=this.contractFee();return N.plus(F)}setFee(_){this.fee=_}getFee(){return this.fee}calculateMinUtxoAmount(_,L){return(0,S.calculateMinUtxoAmount)(_,this._protocolParams.lovelacePerUtxoWord,L)}addWitness(_){this.witnesses.push(_)}getTransactionHash(){const _=(0,m.encodeWitnesses)(this.witnesses,this.inputs,this.plutusDataList,this.plutusScriptMap,this.nativeScriptList,this.mints),L=(0,o.generateScriptDataHash)(_,this._protocolParams.languageView),N=this.transactionBody({scriptDataHash:L}),F=M.Encoder.encode(N);return(0,x.hash32)(F)}getAuxiliaryData(){return this.auxiliaryData}getAuxiliaryDataHashHex(){if(this.auxiliaryData){const _=(0,m.encodeAuxiliaryData)(this.auxiliaryData),L=M.Encoder.encode(_);return(0,x.hash32)(L).toString("hex")}}buildTransaction(){const _=(0,m.encodeWitnesses)(this.witnesses,this.inputs,this.plutusDataList,this.plutusScriptMap,this.nativeScriptList,this.mints),L=(0,o.generateScriptDataHash)(_,this._protocolParams.languageView),N=this.transactionBody({scriptDataHash:L}),F=[N,_,!0,this.auxiliaryData?(0,m.encodeAuxiliaryData)(this.auxiliaryData):null],z=M.Encoder.encode(F),Q=M.Encoder.encode(N);return{hash:(0,x.hash32)(Q).toString("hex"),payload:z.toString("hex")}}getInputs(){return this.inputs}getCertificates(){return this.certificates}getMints(){const _=[];for(const N of this.mints)for(const F of N.assets)_.push({policyId:N.policyId,assetName:F.assetName,amount:F.amount});const L=(0,o.sortTokens)(_);return(0,a.default)(L).groupBy(N=>N.policyId).map((N,F)=>({policyId:F,assets:N.map(z=>({assetName:z.assetName,amount:z.amount}))})).value()}getMintTokens(){const _=[];for(const L of this.mints)for(const N of L.assets)N.amount.isPositive()&&_.push({policyId:L.policyId,assetName:N.assetName,amount:N.amount});return _}getBurnTokens(){const _=[];for(const L of this.mints)for(const N of L.assets)N.amount.isNegative()&&_.push({policyId:L.policyId,assetName:N.assetName,amount:N.amount.abs()});return _}getInputAmount(){let _=[],L=new h.default(0);return a.default.forEach(this.inputs,N=>{_=_.concat(N.tokens),L=L.plus(N.amount)}),_=a.default.concat(_,this.getMintTokens()),{ada:L,tokens:(0,o.getUniqueTokens)(_)}}getCollaterals(){return this.collaterals}getScriptIntegrityHash(){const _=(0,m.encodeWitnesses)(this.witnesses,this.inputs,this.plutusDataList,this.plutusScriptMap,this.nativeScriptList,this.mints);return(0,o.generateScriptDataHash)(_,this._protocolParams.languageView)}getCollateralAmount(){return this.collaterals.reduce((_,L)=>_.plus(L.amount),new h.default(0))}getOutputs(){return this.outputs}getOutputAmount(){let _=[],L=new h.default(0);return a.default.forEach(this.outputs,N=>{_=_.concat(N.tokens),L=L.plus(N.amount)}),_=a.default.concat(_,this.getBurnTokens()),{ada:L,tokens:(0,o.getUniqueTokens)(_)}}getAdditionalOutputAda(){return a.default.reduce(this.certificates,(_,L)=>L.certType===s.CertificateType.STAKE_REGISTRATION?_.plus(this._protocolParams.stakeKeyDeposit):_,new h.default(0))}getAdditionalInputAda(){const _=a.default.reduce(this.certificates,(N,F)=>F.certType===s.CertificateType.STAKE_DE_REGISTRATION?N.plus(this._protocolParams.stakeKeyDeposit):N,new h.default(0)),L=a.default.reduce(this.withdrawals,(N,F)=>N.plus(F.amount),new h.default(0));return _.plus(L)}getWithdrawals(){return this.withdrawals}getRequiredWitnesses(){return this.requiredWitnesses}getRequiredNativeScriptWitnesses(){return this.requiredNativeScriptWitnesses}getRequiredSigners(){return this.requiredSigners}setAuxiliaryData(_){this.auxiliaryData=_}isPlutusTransaction(){return this._isPlutusTransaction}prepareTransaction({inputs:_,changeAddress:L,collateralInputs:N=[]}){return(0,p.default)({transaction:this,inputs:_,changeAddress:L,collateralInputs:N})}paymentTransaction({inputs:_,outputs:L,changeAddress:N,auxiliaryData:F,ttl:z}){return(0,y.paymentTransaction)({inputs:_,outputs:L,changeAddress:N,auxiliaryData:F,ttl:z,protocolParams:this.protocolParams})}}O.Transaction=g,O.default=g},9494:function(u2,O,A){var C=this&&this.__importDefault||function(E){return E&&E.__esModule?E:{default:E}};Object.defineProperty(O,"__esModule",{value:!0}),O.paymentTransaction=void 0;const b=C(A(9779));O.paymentTransaction=({inputs:E,outputs:I,changeAddress:i,auxiliaryData:M,ttl:h,protocolParams:a})=>{const o=new b.default({protocolParams:a});return I.forEach(s=>{o.addOutput(s)}),o.setTTL(h),M&&o.setAuxiliaryData(M),o.prepareTransaction({inputs:E,changeAddress:i})},O.default=O.paymentTransaction},9677:function(u2,O,A){var C=this&&this.__importDefault||function(h){return h&&h.__esModule?h:{default:h}};Object.defineProperty(O,"__esModule",{value:!0}),O.transactionBuilder=void 0;const b=C(A(4431)),E=A(6486),I=A(2027),i=A(6397);function M({transaction:h,inputs:a,changeAddress:o,collateralInputs:s=[]}){const m=T=>{const u=h.getCollateralAmount(),t=T.times(h.protocolParams.collateralPercent).div(100);if(h.isPlutusTransaction()&&u.lt(t))throw new Error("Not enough collateral supplied, collaterals with tokens are not valid collaterals")},x=T=>{if(s&&s.length>0){const u=h.getCollateralAmount(),t=T.times(h.protocolParams.collateralPercent).div(100);for(;u.lt(t)&&s.length>0;){const e=s.pop();e&&h.addCollateral(e)}}},S=(0,i.calculateMinUtxoAmount)([],new b.default(h.protocolParams.lovelacePerUtxoWord)),p=E.cloneDeep(a);if(p.length>0){const T=p.splice(0,1)[0];h.addInput(T)}const y=s.pop();y&&h.addCollateral(y);for(const T of p){const{ada:u,tokens:t}=h.getInputAmount(),{ada:e,tokens:r}=h.getOutputAmount(),c=h.getAdditionalOutputAda(),P=h.getAdditionalInputAda();let K=h.calculateFee();x(K),K=h.calculateFee();const W=u.plus(P),o2=e.plus(c).plus(K),r2=(0,I.getTokenDiff)(t,r);if(r2.length===0){if(W.eq(o2))break;if(W.gt(o2)){const b2=W.minus(e.plus(c));if(b2.gt(S)){let _2=h.calculateFee([{address:o,amount:b2,tokens:[]}]);if(x(K),_2=h.calculateFee([{address:o,amount:b2,tokens:[]}]),b2.gte(_2.plus(S)))break}}}else if(!r2.some(({amount:b2})=>b2.lt(0))){const b2=(0,i.getMaximumTokenSets)(r2),_2=[];let $=W.minus(e.plus(c)),Z=new b.default(0);for(const[p2,w2]of b2.entries()){const R2=(0,i.calculateMinUtxoAmount)(w2,new b.default(h.protocolParams.lovelacePerUtxoWord));let P2=R2;if(p2===b2.length-1){let J=h.calculateFee([..._2,{address:o,amount:$.lt(R2)?R2:$,tokens:w2}]);x(J),J=h.calculateFee([..._2,{address:o,amount:$.lt(R2)?R2:$,tokens:w2}]);const a2=R2.plus(J);$.gte(a2)?P2=$:Z=Z.plus(a2.minus($))}else $.gte(R2)?$=$.minus(R2):Z=Z.plus(R2.minus($));_2.push({address:o,amount:P2,tokens:w2})}if(Z.eq(0))break}h.addInput(T)}const{ada:g,tokens:B}=h.getInputAmount(),{ada:_,tokens:L}=h.getOutputAmount(),N=h.getAdditionalOutputAda(),F=h.getAdditionalInputAda(),z=g.plus(F),Q=_.plus(N),c2=(0,I.getTokenDiff)(B,L);if(c2.length===0){const T=h.calculateFee(),u=Q.plus(T);if(z.eq(u))h.setFee(T),m(T);else{if(!z.gt(u))throw new Error("Not enough ADA");{const t=z.minus(Q);if(t.gt(S.plus(T))){const e=h.calculateFee([{address:o,amount:t,tokens:[]}]);m(e),h.setFee(e),h.addOutput({address:o,amount:t.minus(e),tokens:[]})}else h.setFee(t)}}}else{if(c2.some(({amount:T})=>T.lt(0)))throw new Error("Not enough tokens");{const T=(0,i.getMaximumTokenSets)(E.clone(c2)),u=[];{let r=z.minus(Q);T.forEach((c,P)=>{const K=(0,i.calculateMinUtxoAmount)(c,new b.default(h.protocolParams.lovelacePerUtxoWord));let W=K;if(P===T.length-1){const o2=h.calculateFee([...u,{address:o,amount:r.lt(K)?K:r,tokens:c}]),r2=K.plus(o2);if(!r.gte(r2))throw new Error("Not enough ADA");W=r}else{if(!r.gte(K))throw new Error("Not enough ADA");r=r.minus(K)}u.push({address:o,amount:W,tokens:c})})}const t=h.calculateFee(u);m(t),h.setFee(t);let e=z.minus(Q).minus(t);T.forEach((r,c)=>{const P=(0,i.calculateMinUtxoAmount)(r,new b.default(h.protocolParams.lovelacePerUtxoWord));let K=P;c===T.length-1?K=e:e.gte(P)&&(e=e.minus(P)),h.addOutput({address:o,amount:K,tokens:r})})}}const d=h.calculateTxSize();if(h.protocolParams.maxTxSize&&d>h.protocolParams.maxTxSize)throw new Error("Tx size limit reached, try spending lesser ADA/Tokens");return h}O.transactionBuilder=M,O.default=M},23:(u2,O)=>{var A,C,b,E,I;Object.defineProperty(O,"__esModule",{value:!0}),O.TransactionBodyItemType=O.NetworkId=O.WitnessType=O.CertificateType=O.PlutusScriptType=O.HashType=void 0,(I=O.HashType||(O.HashType={}))[I.ADDRESS=0]="ADDRESS",I[I.SCRIPT=1]="SCRIPT",(O.PlutusScriptType||(O.PlutusScriptType={})).PlutusScriptV1="PlutusScriptV1",(E=O.CertificateType||(O.CertificateType={}))[E.STAKE_REGISTRATION=0]="STAKE_REGISTRATION",E[E.STAKE_DE_REGISTRATION=1]="STAKE_DE_REGISTRATION",E[E.STAKE_DELEGATION=2]="STAKE_DELEGATION",(b=O.WitnessType||(O.WitnessType={}))[b.V_KEY_WITNESS=0]="V_KEY_WITNESS",b[b.NATIVE_SCRIPT=1]="NATIVE_SCRIPT",b[b.PLUTUS_SCRIPT=3]="PLUTUS_SCRIPT",b[b.PLUTUS_DATA=4]="PLUTUS_DATA",b[b.REDEEMER=5]="REDEEMER",(C=O.NetworkId||(O.NetworkId={}))[C.MAINNET=1]="MAINNET",C[C.TESTNET=0]="TESTNET",(A=O.TransactionBodyItemType||(O.TransactionBodyItemType={}))[A.INPUTS=0]="INPUTS",A[A.OUTPUTS=1]="OUTPUTS",A[A.FEE=2]="FEE",A[A.TTL=3]="TTL",A[A.CERTIFICATES=4]="CERTIFICATES",A[A.WITHDRAWALS=5]="WITHDRAWALS",A[A.AUXILIARY_DATA_HASH=7]="AUXILIARY_DATA_HASH",A[A.VALIDITY_INTERVAL_START=8]="VALIDITY_INTERVAL_START",A[A.MINT=9]="MINT",A[A.SCRIPT_DATA_HASH=11]="SCRIPT_DATA_HASH",A[A.COLLATERAL_INPUTS=13]="COLLATERAL_INPUTS",A[A.REQUIRED_SIGNERS=14]="REQUIRED_SIGNERS"},3678:(u2,O,A)=>{Object.defineProperty(O,"__esModule",{value:!0}),O.hash28=O.hash32=void 0;const C=A(8764),b=A(1191);O.hash32=E=>{const I=(0,b.blake2b)(E,void 0,32);return C.Buffer.from(I)},O.hash28=E=>{const I=(0,b.blake2b)(E,void 0,28);return C.Buffer.from(I)}},6171:function(u2,O,A){var C=this&&this.__createBinding||(Object.create?function(y,g,B,_){_===void 0&&(_=B);var L=Object.getOwnPropertyDescriptor(g,B);L&&!("get"in L?!g.__esModule:L.writable||L.configurable)||(L={enumerable:!0,get:function(){return g[B]}}),Object.defineProperty(y,_,L)}:function(y,g,B,_){_===void 0&&(_=B),y[_]=g[B]}),b=this&&this.__setModuleDefault||(Object.create?function(y,g){Object.defineProperty(y,"default",{enumerable:!0,value:g})}:function(y,g){y.default=g}),E=this&&this.__importStar||function(y){if(y&&y.__esModule)return y;var g={};if(y!=null)for(var B in y)B!=="default"&&Object.prototype.hasOwnProperty.call(y,B)&&C(g,y,B);return b(g,y),g},I=this&&this.__importDefault||function(y){return y&&y.__esModule?y:{default:y}};Object.defineProperty(O,"__esModule",{value:!0}),O.encodeNativeScript=O.encodeLanguageViews=O.encodePlutusData=O.encodeAuxiliaryData=O.encodeMetadata=O.encodeWitnesses=O.encodeVKeyWitness=O.encodeCertificates=O.encodeStakeDelegationCertificate=O.encodeStakeDeRegistrationCertificate=O.encodeStakeRegistrationCertificate=O.encodeWithdrawals=O.encodeOutputs=O.encodeOutput=O.encodeMint=O.encodeOutputTokens=O.encodeCollaterals=O.encodeInputs=void 0;const i=A(8764),M=E(A(7730)),h=I(A(4431)),a=I(A(6486)),o=A(23),s=A(2027),m=A(3678),x=A(7067);O.encodeInputs=y=>y.map(g=>[i.Buffer.from(g.txId,"hex"),g.index]),O.encodeCollaterals=y=>y.map(g=>[i.Buffer.from(g.txId,"hex"),g.index]),O.encodeOutputTokens=y=>{const g=new Map,B=(0,a.default)(y).groupBy(({policyId:_})=>_).value();return a.default.forEach(B,(_,L)=>{const N=new Map;_.forEach(({assetName:F,amount:z})=>{N.set(i.Buffer.from(F,"hex"),z)}),g.set(i.Buffer.from(L,"hex"),N)}),g},O.encodeMint=y=>{const g=new Map;for(const B of y){const _=new Map;B.assets.forEach(({assetName:L,amount:N})=>{_.set(i.Buffer.from(L,"hex"),N)}),g.set(i.Buffer.from(B.policyId,"hex"),_)}return g},O.encodeOutput=y=>{const g=y.tokens.length>0?[y.amount,(0,O.encodeOutputTokens)(y.tokens)]:y.amount,B=[y.address.getBytes(),g],_=y.plutusDataHash?i.Buffer.from(y.plutusDataHash,"hex"):void 0;return _&&B.push(_),B},O.encodeOutputs=y=>y.map(g=>(0,O.encodeOutput)(g),[]),O.encodeWithdrawals=y=>{const g=new Map;return y.forEach(B=>{const _=B.rewardAccount.getBytes();g.set(_,B.amount)}),g},O.encodeStakeRegistrationCertificate=y=>{const g=i.Buffer.from(y.stakeCredential.hash,"hex"),B=[y.stakeCredential.type,g];return[o.CertificateType.STAKE_REGISTRATION,B]},O.encodeStakeDeRegistrationCertificate=y=>{const g=i.Buffer.from(y.stakeCredential.hash,"hex"),B=[y.stakeCredential.type,g];return[o.CertificateType.STAKE_DE_REGISTRATION,B]},O.encodeStakeDelegationCertificate=y=>{const g=i.Buffer.from(y.stakeCredential.hash,"hex"),B=[y.stakeCredential.type,g],_=i.Buffer.from(y.poolHash,"hex");return[o.CertificateType.STAKE_DELEGATION,B,_]},O.encodeCertificates=y=>{const g=[];return y.forEach(B=>{switch(B.certType){case o.CertificateType.STAKE_REGISTRATION:g.push((0,O.encodeStakeRegistrationCertificate)(B));break;case o.CertificateType.STAKE_DE_REGISTRATION:g.push((0,O.encodeStakeDeRegistrationCertificate)(B));break;case o.CertificateType.STAKE_DELEGATION:g.push((0,O.encodeStakeDelegationCertificate)(B));break;default:throw new Error("unsupported certificate type")}}),g},O.encodeVKeyWitness=y=>{const g=new Map;for(const _ of y)g.set(_.publicKey.toString("hex"),_.signature);const B=[];for(const[_,L]of g)B.push([i.Buffer.from(_,"hex"),L]);return B},O.encodeWitnesses=(y,g,B,_,L,N)=>{const F=new Map;y.length>0&&F.set(o.WitnessType.V_KEY_WITNESS,(0,O.encodeVKeyWitness)(y));const z=a.default.orderBy(g,["txId","index"],["asc","asc"]),Q=a.default.orderBy(N,["policyId"],["asc"]),c2=[],d=new Map;for(const r of B){const c=(0,O.encodePlutusData)(r),P=M.Encoder.encode(c),K=(0,m.hash32)(P);d.set(K.toString("hex"),c)}for(const[r,c]of z.entries())if(c.redeemer){const P=(0,O.encodePlutusData)(c.redeemer.plutusData);c2.push([x.RedeemerTag.SPEND,r,P,[c.redeemer.exUnits.mem,c.redeemer.exUnits.steps]])}for(const[r,c]of Q.entries())if(c.plutusScript&&c.redeemer){const P=(0,O.encodePlutusData)(c.redeemer.plutusData);c2.push([x.RedeemerTag.MINT,r,P,[c.redeemer.exUnits.mem,c.redeemer.exUnits.steps]])}const T=[];for(const[,r]of d)T.push(r);const u=[];for(const[r,c]of _){if(c!==o.PlutusScriptType.PlutusScriptV1)throw new Error("Unsupported PlutusScript Version");{const P=M.Decoder.decode(i.Buffer.from(r,"hex"));u.push(P.value)}}u.length&&F.set(o.WitnessType.PLUTUS_SCRIPT,u);const t=new Map;for(const r of L){const c=(0,O.encodeNativeScript)(r),P=M.Encoder.encode(c);t.set(P.toString("hex"),c)}const e=[];for(const[,r]of t)e.push(r);return e.length&&F.set(o.WitnessType.NATIVE_SCRIPT,e),T.length&&F.set(o.WitnessType.PLUTUS_DATA,T),c2.length&&F.set(o.WitnessType.REDEEMER,c2),F},O.encodeMetadata=y=>{const g=new Map;for(const B of y)g.set(B.label,(0,s.sanitizeMetadata)(B.data));return g},O.encodeAuxiliaryData=y=>{const g=(0,O.encodeMetadata)(y.metadata),B=new Map;return B.set(0,g),new M.CborTag(B,259)};const S=["constructor","fields"];O.encodePlutusData=y=>{if(y instanceof Array){if(y.length>0){const g=new M.IndefiniteArray;for(const B of y)g.push((0,O.encodePlutusData)(B));return g}return[]}if(y instanceof Uint8Array)return i.Buffer.from(y);if(y instanceof i.Buffer)return y;if(typeof y=="string")throw new Error("String not supported in PlutusData");if(y instanceof Map){if(y.size>0){const g=new M.IndefiniteMap;for(const[B,_]of y.entries())g.set(B,(0,O.encodePlutusData)(_));return g}return new Map}return h.default.isBigNumber(y)?y:y instanceof Object?(g=>{if(!(Object.keys(g).every(_=>S.includes(_))&&g.fields instanceof Array))throw new Error("Invalid PlutusData supplied");let B=[];if(g.fields.length>0){B=new M.IndefiniteArray;for(const _ of g.fields)B.push((0,O.encodePlutusData)(_))}if(g.constructor<7)return new M.CborTag(B,121+g.constructor);if(g.constructor>6&&g.constructor<128){const _=g.constructor-7;return new M.CborTag(B,1280+_)}return new M.CborTag([g.constructor,B],102)})(y):y},O.encodeLanguageViews=(y,g)=>{const B=new Map;if(g&&g.length>0){const _=(0,a.default)(y.PlutusScriptV1).map((z,Q)=>({key:Q,value:z})).orderBy(["key"],["asc"]).map(z=>z.value).value(),L=M.IndefiniteArray.from(_),N=M.Encoder.encode(L),F=M.Encoder.encode(0);B.set(F,N)}return M.Encoder.encode(B).toString("hex")};const p=y=>{const g=[];for(const B of y)g.push((0,O.encodeNativeScript)(B));return g};O.encodeNativeScript=y=>{if(y.pubKeyHash)return[0,i.Buffer.from(y.pubKeyHash,"hex")];if(y.all)return[1,p(y.all)];if(y.any)return[2,p(y.any)];if(y.n)return[3,y.n,p(y.k)];if(y.invalidBefore)return[4,y.invalidBefore];if(y.invalidAfter)return[5,y.invalidAfter];throw new Error("Invalid native script")}},2027:function(u2,O,A){var C=this&&this.__createBinding||(Object.create?function(S,p,y,g){g===void 0&&(g=y);var B=Object.getOwnPropertyDescriptor(p,y);B&&!("get"in B?!p.__esModule:B.writable||B.configurable)||(B={enumerable:!0,get:function(){return p[y]}}),Object.defineProperty(S,g,B)}:function(S,p,y,g){g===void 0&&(g=y),S[g]=p[y]}),b=this&&this.__setModuleDefault||(Object.create?function(S,p){Object.defineProperty(S,"default",{enumerable:!0,value:p})}:function(S,p){S.default=p}),E=this&&this.__importStar||function(S){if(S&&S.__esModule)return S;var p={};if(S!=null)for(var y in S)y!=="default"&&Object.prototype.hasOwnProperty.call(S,y)&&C(p,S,y);return b(p,S),p},I=this&&this.__importDefault||function(S){return S&&S.__esModule?S:{default:S}};Object.defineProperty(O,"__esModule",{value:!0}),O.getPubKeyHashListFromNativeScript=O.generateScriptDataHash=O.sortTokens=O.compareCanonically=O.sanitizeMetadata=O.getTokenDiff=O.getUniqueTokens=void 0;const i=A(8764),M=E(A(7730)),h=I(A(4431)),a=I(A(6486)),o=A(6171),s=A(23),m=A(3678);O.getUniqueTokens=S=>(0,a.default)(S).groupBy(({policyId:p})=>p).map((p,y)=>(0,a.default)(p).groupBy(({assetName:g})=>g).map((g,B)=>({policyId:y,assetName:B,amount:g.reduce((_,L)=>_.plus(L.amount),new h.default(0))})).value()).flatten().value(),O.getTokenDiff=(S,p)=>{const y=a.default.map(p,g=>Object.assign(Object.assign({},g),{amount:g.amount.negated()}));return(0,O.getUniqueTokens)(S.concat(y)).filter(g=>g.amount.abs().gt(0))},O.sanitizeMetadata=S=>{if(S instanceof Array){const p=[];for(const y of S)p.push((0,O.sanitizeMetadata)(y));return p}if(typeof S=="string"||S instanceof i.Buffer){if(S.length>64)throw new Error("string or buffer length invalid");return S}if(S instanceof Map){const p=new Map;for(const[y,g]of S.entries())p.set(y,(0,O.sanitizeMetadata)(g));return p}if(S instanceof Object){const p=new Map;for(const[y,g]of Object.entries(S))p.set(y,(0,O.sanitizeMetadata)(g));return p}return S},O.compareCanonically=(S,p)=>S.length!==p.length?S.length-p.length:(S=S.toLowerCase())<(p=p.toLowerCase())?-1:S>p?1:0,O.sortTokens=S=>(0,a.default)(S).orderBy(["policyId","assetName"],["asc","asc"]).sort((p,y)=>(0,O.compareCanonically)(p.assetName,y.assetName)).sort((p,y)=>(0,O.compareCanonically)(p.policyId,y.policyId)).value(),O.generateScriptDataHash=(S,p)=>{const y=S.get(s.WitnessType.PLUTUS_DATA),g=S.get(s.WitnessType.REDEEMER);if(y||g){const B=S.get(s.WitnessType.PLUTUS_SCRIPT),_=(0,o.encodeLanguageViews)(p,B),L=y!=null&&y.length?M.Encoder.encode(y).toString("hex"):"",N=g?M.Encoder.encode(g).toString("hex"):M.Encoder.encode([]).toString("hex"),F=i.Buffer.from(N+L+_,"hex");return(0,m.hash32)(F)}};const x=S=>{let p=[];for(const y of S){const g=(0,O.getPubKeyHashListFromNativeScript)(y);p=a.default.concat(p,a.default.flatten(g))}return p};O.getPubKeyHashListFromNativeScript=S=>{let p=[];if(S.pubKeyHash)p.push(S.pubKeyHash);else if(S.all){const y=x(S.all);p=a.default.concat(p,a.default.flatten(y))}else if(S.any){const y=x(S.any);p=a.default.concat(p,a.default.flatten(y))}else if(S.n){const y=x(S.k);p=a.default.concat(p,a.default.flatten(y))}return p}},6397:function(u2,O,A){var C=this&&this.__createBinding||(Object.create?function(N,F,z,Q){Q===void 0&&(Q=z);var c2=Object.getOwnPropertyDescriptor(F,z);c2&&!("get"in c2?!F.__esModule:c2.writable||c2.configurable)||(c2={enumerable:!0,get:function(){return F[z]}}),Object.defineProperty(N,Q,c2)}:function(N,F,z,Q){Q===void 0&&(Q=z),N[Q]=F[z]}),b=this&&this.__setModuleDefault||(Object.create?function(N,F){Object.defineProperty(N,"default",{enumerable:!0,value:F})}:function(N,F){N.default=F}),E=this&&this.__importStar||function(N){if(N&&N.__esModule)return N;var F={};if(N!=null)for(var z in N)z!=="default"&&Object.prototype.hasOwnProperty.call(N,z)&&C(F,N,z);return b(F,N),F},I=this&&this.__importDefault||function(N){return N&&N.__esModule?N:{default:N}};Object.defineProperty(O,"__esModule",{value:!0}),O.createPlutusDataCbor=O.createAuxiliaryDataCbor=O.getMaximumTokenSets=O.getAddressFromBech32=O.decodeBech32=O.getAddressFromHex=O.calculateMinUtxoAmount=void 0;const i=A(8764),M=E(A(7730)),h=I(A(4431)),a=A(6486),o=I(A(7191)),s=A(7715),m=A(1617),x=I(A(7801)),S=I(A(5027)),p=I(A(1989)),y=I(A(9105)),g=A(2027),B=A(23),_=I(A(7452)),L=A(6171);O.calculateMinUtxoAmount=(N,F,z)=>{const Q=(0,g.getUniqueTokens)(N);let c2=27;z&&(c2+=10);const d=c2+2,T=a(Q).groupBy(({policyId:W})=>W).value(),u=Q.reduce((W,o2)=>(W[o2.assetName]=!0,W),{}),t=a.reduce(T,W=>W+1,0),e=a.reduce(u,(W,o2,r2)=>W+Math.max(i.Buffer.from(r2,"hex").length,1),0),r=6+(c=12*Q.length+e+28*t,Math.floor((c+7)/8));var c;const P=F.toNumber()*d;if(Q.length===0)return new h.default(P);const K=F.toNumber()*(c2+r);return h.default.max(P,K)},O.getAddressFromHex=N=>{const F=N.toLowerCase().charAt(0),z=Number(N.toLowerCase().charAt(1));let Q,c2;switch(F){case"e":return Q={hash:N.slice(2).slice(0,56),type:B.HashType.ADDRESS},new _.default(z,Q);case"f":return Q={hash:N.slice(2).slice(0,56),type:B.HashType.SCRIPT},new _.default(z,Q);case"7":return c2={hash:N.slice(2),type:B.HashType.SCRIPT},new p.default(z,c2);case"6":return c2={hash:N.slice(2),type:B.HashType.ADDRESS},new p.default(z,c2);case"5":{c2={hash:N.slice(2).slice(0,56),type:B.HashType.SCRIPT};const d=N.slice(2).slice(56);return new y.default(z,c2,d)}case"4":{c2={hash:N.slice(2).slice(0,56),type:B.HashType.ADDRESS};const d=N.slice(2).slice(56);return new y.default(z,c2,d)}case"3":return c2={hash:N.slice(2).slice(0,56),type:B.HashType.SCRIPT},Q={hash:N.slice(2).slice(56),type:B.HashType.SCRIPT},new x.default(z,c2,Q);case"2":return c2={hash:N.slice(2).slice(0,56),type:B.HashType.ADDRESS},Q={hash:N.slice(2).slice(56),type:B.HashType.SCRIPT},new x.default(z,c2,Q);case"1":return c2={hash:N.slice(2).slice(0,56),type:B.HashType.SCRIPT},Q={hash:N.slice(2).slice(56),type:B.HashType.ADDRESS},new x.default(z,c2,Q);case"0":return c2={hash:N.slice(2).slice(0,56),type:B.HashType.ADDRESS},Q={hash:N.slice(2).slice(56),type:B.HashType.ADDRESS},new x.default(z,c2,Q);case"8":return new S.default(i.Buffer.from(N,"hex"));default:throw new Error("Unsupported address type")}},O.decodeBech32=N=>{const F=s.bech32.decode(N,114),z=s.bech32.fromWords(F.words),Q=i.Buffer.from(z).toString("hex");return{prefix:F.prefix,value:Q}},O.getAddressFromBech32=N=>{try{const F=i.Buffer.from(o.default.decode(N));try{M.Decoder.decode(F)}catch{throw new Error("Invalid Byron Address")}return new S.default(F)}catch{try{const z=(0,O.decodeBech32)(N);if(z.prefix==="addr"||z.prefix==="addr_test"||z.prefix==="stake"||z.prefix==="stake_test")return(0,O.getAddressFromHex)(z.value);throw new Error("Invalid Address")}catch{throw new Error("Invalid Address")}}},O.getMaximumTokenSets=N=>{const F=a.cloneDeep(N),z=[];for(;F.length>0;){const Q=[],c2=F.length;for(let d=0;d<c2;d+=1){const T=F.pop();T.amount.lte(m.maxTokenAmount)?Q.push(T):(Q.push({assetName:T.assetName,policyId:T.policyId,amount:new h.default(m.maxTokenAmount)}),T.amount=T.amount.minus(m.maxTokenAmount),F.push(T))}z.push(Q)}return z},O.createAuxiliaryDataCbor=N=>{const F=(0,L.encodeAuxiliaryData)(N);return M.Encoder.encode(F)},O.createPlutusDataCbor=N=>{const F=(0,L.encodePlutusData)(N);return M.Encoder.encode(F)}},8162:u2=>{u2.exports=function(O){if(O.length>=255)throw new TypeError("Alphabet too long");for(var A=new Uint8Array(256),C=0;C<A.length;C++)A[C]=255;for(var b=0;b<O.length;b++){var E=O.charAt(b),I=E.charCodeAt(0);if(A[I]!==255)throw new TypeError(E+" is ambiguous");A[I]=b}var i=O.length,M=O.charAt(0),h=Math.log(i)/Math.log(256),a=Math.log(256)/Math.log(i);function o(s){if(typeof s!="string")throw new TypeError("Expected String");if(s.length===0)return new Uint8Array;for(var m=0,x=0,S=0;s[m]===M;)x++,m++;for(var p=(s.length-m)*h+1>>>0,y=new Uint8Array(p);s[m];){var g=A[s.charCodeAt(m)];if(g===255)return;for(var B=0,_=p-1;(g!==0||B<S)&&_!==-1;_--,B++)g+=i*y[_]>>>0,y[_]=g%256>>>0,g=g/256>>>0;if(g!==0)throw new Error("Non-zero carry");S=B,m++}for(var L=p-S;L!==p&&y[L]===0;)L++;for(var N=new Uint8Array(x+(p-L)),F=x;L!==p;)N[F++]=y[L++];return N}return{encode:function(s){if(s instanceof Uint8Array||(ArrayBuffer.isView(s)?s=new Uint8Array(s.buffer,s.byteOffset,s.byteLength):Array.isArray(s)&&(s=Uint8Array.from(s))),!(s instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(s.length===0)return"";for(var m=0,x=0,S=0,p=s.length;S!==p&&s[S]===0;)S++,m++;for(var y=(p-S)*a+1>>>0,g=new Uint8Array(y);S!==p;){for(var B=s[S],_=0,L=y-1;(B!==0||_<x)&&L!==-1;L--,_++)B+=256*g[L]>>>0,g[L]=B%i>>>0,B=B/i>>>0;if(B!==0)throw new Error("Non-zero carry");x=_,S++}for(var N=y-x;N!==y&&g[N]===0;)N++;for(var F=M.repeat(m);N<y;++N)F+=O.charAt(g[N]);return F},decodeUnsafe:o,decode:function(s){var m=o(s);if(m)return m;throw new Error("Non-base"+i+" character")}}}},9742:(u2,O)=>{O.byteLength=function(a){var o=M(a),s=o[0],m=o[1];return 3*(s+m)/4-m},O.toByteArray=function(a){var o,s,m=M(a),x=m[0],S=m[1],p=new b(function(B,_,L){return 3*(_+L)/4-L}(0,x,S)),y=0,g=S>0?x-4:x;for(s=0;s<g;s+=4)o=C[a.charCodeAt(s)]<<18|C[a.charCodeAt(s+1)]<<12|C[a.charCodeAt(s+2)]<<6|C[a.charCodeAt(s+3)],p[y++]=o>>16&255,p[y++]=o>>8&255,p[y++]=255&o;return S===2&&(o=C[a.charCodeAt(s)]<<2|C[a.charCodeAt(s+1)]>>4,p[y++]=255&o),S===1&&(o=C[a.charCodeAt(s)]<<10|C[a.charCodeAt(s+1)]<<4|C[a.charCodeAt(s+2)]>>2,p[y++]=o>>8&255,p[y++]=255&o),p},O.fromByteArray=function(a){for(var o,s=a.length,m=s%3,x=[],S=16383,p=0,y=s-m;p<y;p+=S)x.push(h(a,p,p+S>y?y:p+S));return m===1?(o=a[s-1],x.push(A[o>>2]+A[o<<4&63]+"==")):m===2&&(o=(a[s-2]<<8)+a[s-1],x.push(A[o>>10]+A[o>>4&63]+A[o<<2&63]+"=")),x.join("")};for(var A=[],C=[],b=typeof Uint8Array<"u"?Uint8Array:Array,E="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",I=0,i=E.length;I<i;++I)A[I]=E[I],C[E.charCodeAt(I)]=I;function M(a){var o=a.length;if(o%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var s=a.indexOf("=");return s===-1&&(s=o),[s,s===o?0:4-s%4]}function h(a,o,s){for(var m,x,S=[],p=o;p<s;p+=3)m=(a[p]<<16&16711680)+(a[p+1]<<8&65280)+(255&a[p+2]),S.push(A[(x=m)>>18&63]+A[x>>12&63]+A[x>>6&63]+A[63&x]);return S.join("")}C[45]=62,C[95]=63},7715:(u2,O)=>{Object.defineProperty(O,"__esModule",{value:!0}),O.bech32m=O.bech32=void 0;const A="qpzry9x8gf2tvdw0s3jn54khce6mua7l",C={};for(let o=0;o<A.length;o++){const s=A.charAt(o);C[s]=o}function b(o){const s=o>>25;return(33554431&o)<<5^996825010&-(s>>0&1)^642813549&-(s>>1&1)^513874426&-(s>>2&1)^1027748829&-(s>>3&1)^705979059&-(s>>4&1)}function E(o){let s=1;for(let m=0;m<o.length;++m){const x=o.charCodeAt(m);if(x<33||x>126)return"Invalid prefix ("+o+")";s=b(s)^x>>5}s=b(s);for(let m=0;m<o.length;++m){const x=o.charCodeAt(m);s=b(s)^31&x}return s}function I(o,s,m,x){let S=0,p=0;const y=(1<<m)-1,g=[];for(let B=0;B<o.length;++B)for(S=S<<s|o[B],p+=s;p>=m;)p-=m,g.push(S>>p&y);if(x)p>0&&g.push(S<<m-p&y);else{if(p>=s)return"Excess padding";if(S<<m-p&y)return"Non-zero padding"}return g}function i(o){return I(o,8,5,!0)}function M(o){const s=I(o,5,8,!1);if(Array.isArray(s))return s}function h(o){const s=I(o,5,8,!1);if(Array.isArray(s))return s;throw new Error(s)}function a(o){let s;function m(x,S){if(S=S||90,x.length<8)return x+" too short";if(x.length>S)return"Exceeds length limit";const p=x.toLowerCase(),y=x.toUpperCase();if(x!==p&&x!==y)return"Mixed-case string "+x;const g=(x=p).lastIndexOf("1");if(g===-1)return"No separator character for "+x;if(g===0)return"Missing prefix for "+x;const B=x.slice(0,g),_=x.slice(g+1);if(_.length<6)return"Data too short";let L=E(B);if(typeof L=="string")return L;const N=[];for(let F=0;F<_.length;++F){const z=_.charAt(F),Q=C[z];if(Q===void 0)return"Unknown character "+z;L=b(L)^Q,F+6>=_.length||N.push(Q)}return L!==s?"Invalid checksum for "+x:{prefix:B,words:N}}return s=o==="bech32"?1:734539939,{decodeUnsafe:function(x,S){const p=m(x,S);if(typeof p=="object")return p},decode:function(x,S){const p=m(x,S);if(typeof p=="object")return p;throw new Error(p)},encode:function(x,S,p){if(p=p||90,x.length+7+S.length>p)throw new TypeError("Exceeds length limit");let y=E(x=x.toLowerCase());if(typeof y=="string")throw new Error(y);let g=x+"1";for(let B=0;B<S.length;++B){const _=S[B];if(_>>5)throw new Error("Non 5-bit word");y=b(y)^_,g+=A.charAt(_)}for(let B=0;B<6;++B)y=b(y);y^=s;for(let B=0;B<6;++B)g+=A.charAt(y>>5*(5-B)&31);return g},toWords:i,fromWordsUnsafe:M,fromWords:h}}O.bech32=a("bech32"),O.bech32m=a("bech32m")},4431:function(u2,O,A){var C;(function(b){var E,I=/^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,i=Math.ceil,M=Math.floor,h="[BigNumber Error] ",a=h+"Number primitive has more than 15 significant digits: ",o=1e14,s=14,m=9007199254740991,x=[1,10,100,1e3,1e4,1e5,1e6,1e7,1e8,1e9,1e10,1e11,1e12,1e13],S=1e7,p=1e9;function y(z){var Q=0|z;return z>0||z===Q?Q:Q-1}function g(z){for(var Q,c2,d=1,T=z.length,u=z[0]+"";d<T;){for(Q=z[d++]+"",c2=s-Q.length;c2--;Q="0"+Q);u+=Q}for(T=u.length;u.charCodeAt(--T)===48;);return u.slice(0,T+1||1)}function B(z,Q){var c2,d,T=z.c,u=Q.c,t=z.s,e=Q.s,r=z.e,c=Q.e;if(!t||!e)return null;if(c2=T&&!T[0],d=u&&!u[0],c2||d)return c2?d?0:-e:t;if(t!=e)return t;if(c2=t<0,d=r==c,!T||!u)return d?0:!T^c2?1:-1;if(!d)return r>c^c2?1:-1;for(e=(r=T.length)<(c=u.length)?r:c,t=0;t<e;t++)if(T[t]!=u[t])return T[t]>u[t]^c2?1:-1;return r==c?0:r>c^c2?1:-1}function _(z,Q,c2,d){if(z<Q||z>c2||z!==M(z))throw Error(h+(d||"Argument")+(typeof z=="number"?z<Q||z>c2?" out of range: ":" not an integer: ":" not a primitive number: ")+String(z))}function L(z){var Q=z.c.length-1;return y(z.e/s)==Q&&z.c[Q]%2!=0}function N(z,Q){return(z.length>1?z.charAt(0)+"."+z.slice(1):z)+(Q<0?"e":"e+")+Q}function F(z,Q,c2){var d,T;if(Q<0){for(T=c2+".";++Q;T+=c2);z=T+z}else if(++Q>(d=z.length)){for(T=c2,Q-=d;--Q;T+=c2);z+=T}else Q<d&&(z=z.slice(0,Q)+"."+z.slice(Q));return z}E=function z(Q){var c2,d,T,u,t,e,r,c,P,K,W=G.prototype={constructor:G,toString:null,valueOf:null},o2=new G(1),r2=20,b2=4,_2=-7,$=21,Z=-1e7,p2=1e7,w2=!1,R2=1,P2=0,J={prefix:"",groupSize:3,secondaryGroupSize:0,groupSeparator:",",decimalSeparator:".",fractionGroupSize:0,fractionGroupSeparator:" ",suffix:""},a2="0123456789abcdefghijklmnopqrstuvwxyz",Y=!0;function G(v,D){var j,q,V,l2,n2,t2,s2,h2,d2=this;if(!(d2 instanceof G))return new G(v,D);if(D==null){if(v&&v._isBigNumber===!0)return d2.s=v.s,void(!v.c||v.e>p2?d2.c=d2.e=null:v.e<Z?d2.c=[d2.e=0]:(d2.e=v.e,d2.c=v.c.slice()));if((t2=typeof v=="number")&&0*v==0){if(d2.s=1/v<0?(v=-v,-1):1,v===~~v){for(l2=0,n2=v;n2>=10;n2/=10,l2++);return void(l2>p2?d2.c=d2.e=null:(d2.e=l2,d2.c=[v]))}h2=String(v)}else{if(!I.test(h2=String(v)))return T(d2,h2,t2);d2.s=h2.charCodeAt(0)==45?(h2=h2.slice(1),-1):1}(l2=h2.indexOf("."))>-1&&(h2=h2.replace(".","")),(n2=h2.search(/e/i))>0?(l2<0&&(l2=n2),l2+=+h2.slice(n2+1),h2=h2.substring(0,n2)):l2<0&&(l2=h2.length)}else{if(_(D,2,a2.length,"Base"),D==10&&Y)return w(d2=new G(v),r2+d2.e+1,b2);if(h2=String(v),t2=typeof v=="number"){if(0*v!=0)return T(d2,h2,t2,D);if(d2.s=1/v<0?(h2=h2.slice(1),-1):1,G.DEBUG&&h2.replace(/^0\.0*|\./,"").length>15)throw Error(a+v)}else d2.s=h2.charCodeAt(0)===45?(h2=h2.slice(1),-1):1;for(j=a2.slice(0,D),l2=n2=0,s2=h2.length;n2<s2;n2++)if(j.indexOf(q=h2.charAt(n2))<0){if(q=="."){if(n2>l2){l2=s2;continue}}else if(!V&&(h2==h2.toUpperCase()&&(h2=h2.toLowerCase())||h2==h2.toLowerCase()&&(h2=h2.toUpperCase()))){V=!0,n2=-1,l2=0;continue}return T(d2,String(v),t2,D)}t2=!1,(l2=(h2=d(h2,D,10,d2.s)).indexOf("."))>-1?h2=h2.replace(".",""):l2=h2.length}for(n2=0;h2.charCodeAt(n2)===48;n2++);for(s2=h2.length;h2.charCodeAt(--s2)===48;);if(h2=h2.slice(n2,++s2)){if(s2-=n2,t2&&G.DEBUG&&s2>15&&(v>m||v!==M(v)))throw Error(a+d2.s*v);if((l2=l2-n2-1)>p2)d2.c=d2.e=null;else if(l2<Z)d2.c=[d2.e=0];else{if(d2.e=l2,d2.c=[],n2=(l2+1)%s,l2<0&&(n2+=s),n2<s2){for(n2&&d2.c.push(+h2.slice(0,n2)),s2-=s;n2<s2;)d2.c.push(+h2.slice(n2,n2+=s));n2=s-(h2=h2.slice(n2)).length}else n2-=s2;for(;n2--;h2+="0");d2.c.push(+h2)}}else d2.c=[d2.e=0]}function i2(v,D,j,q){var V,l2,n2,t2,s2;if(j==null?j=b2:_(j,0,8),!v.c)return v.toString();if(V=v.c[0],n2=v.e,D==null)s2=g(v.c),s2=q==1||q==2&&(n2<=_2||n2>=$)?N(s2,n2):F(s2,n2,"0");else if(l2=(v=w(new G(v),D,j)).e,t2=(s2=g(v.c)).length,q==1||q==2&&(D<=l2||l2<=_2)){for(;t2<D;s2+="0",t2++);s2=N(s2,l2)}else if(D-=n2,s2=F(s2,l2,"0"),l2+1>t2){if(--D>0)for(s2+=".";D--;s2+="0");}else if((D+=l2-t2)>0)for(l2+1==t2&&(s2+=".");D--;s2+="0");return v.s<0&&V?"-"+s2:s2}function v2(v,D){for(var j,q=1,V=new G(v[0]);q<v.length;q++){if(!(j=new G(v[q])).s){V=j;break}D.call(V,j)&&(V=j)}return V}function g2(v,D,j){for(var q=1,V=D.length;!D[--V];D.pop());for(V=D[0];V>=10;V/=10,q++);return(j=q+j*s-1)>p2?v.c=v.e=null:j<Z?v.c=[v.e=0]:(v.e=j,v.c=D),v}function w(v,D,j,q){var V,l2,n2,t2,s2,h2,d2,I2=v.c,T2=x;if(I2){l:{for(V=1,t2=I2[0];t2>=10;t2/=10,V++);if((l2=D-V)<0)l2+=s,n2=D,d2=(s2=I2[h2=0])/T2[V-n2-1]%10|0;else if((h2=i((l2+1)/s))>=I2.length){if(!q)break l;for(;I2.length<=h2;I2.push(0));s2=d2=0,V=1,n2=(l2%=s)-s+1}else{for(s2=t2=I2[h2],V=1;t2>=10;t2/=10,V++);d2=(n2=(l2%=s)-s+V)<0?0:s2/T2[V-n2-1]%10|0}if(q=q||D<0||I2[h2+1]!=null||(n2<0?s2:s2%T2[V-n2-1]),q=j<4?(d2||q)&&(j==0||j==(v.s<0?3:2)):d2>5||d2==5&&(j==4||q||j==6&&(l2>0?n2>0?s2/T2[V-n2]:0:I2[h2-1])%10&1||j==(v.s<0?8:7)),D<1||!I2[0])return I2.length=0,q?(D-=v.e+1,I2[0]=T2[(s-D%s)%s],v.e=-D||0):I2[0]=v.e=0,v;if(l2==0?(I2.length=h2,t2=1,h2--):(I2.length=h2+1,t2=T2[s-l2],I2[h2]=n2>0?M(s2/T2[V-n2]%T2[n2])*t2:0),q)for(;;){if(h2==0){for(l2=1,n2=I2[0];n2>=10;n2/=10,l2++);for(n2=I2[0]+=t2,t2=1;n2>=10;n2/=10,t2++);l2!=t2&&(v.e++,I2[0]==o&&(I2[0]=1));break}if(I2[h2]+=t2,I2[h2]!=o)break;I2[h2--]=0,t2=1}for(l2=I2.length;I2[--l2]===0;I2.pop());}v.e>p2?v.c=v.e=null:v.e<Z&&(v.c=[v.e=0])}return v}function k(v){var D,j=v.e;return j===null?v.toString():(D=g(v.c),D=j<=_2||j>=$?N(D,j):F(D,j,"0"),v.s<0?"-"+D:D)}return G.clone=z,G.ROUND_UP=0,G.ROUND_DOWN=1,G.ROUND_CEIL=2,G.ROUND_FLOOR=3,G.ROUND_HALF_UP=4,G.ROUND_HALF_DOWN=5,G.ROUND_HALF_EVEN=6,G.ROUND_HALF_CEIL=7,G.ROUND_HALF_FLOOR=8,G.EUCLID=9,G.config=G.set=function(v){var D,j;if(v!=null){if(typeof v!="object")throw Error(h+"Object expected: "+v);if(v.hasOwnProperty(D="DECIMAL_PLACES")&&(_(j=v[D],0,p,D),r2=j),v.hasOwnProperty(D="ROUNDING_MODE")&&(_(j=v[D],0,8,D),b2=j),v.hasOwnProperty(D="EXPONENTIAL_AT")&&((j=v[D])&&j.pop?(_(j[0],-p,0,D),_(j[1],0,p,D),_2=j[0],$=j[1]):(_(j,-p,p,D),_2=-($=j<0?-j:j))),v.hasOwnProperty(D="RANGE"))if((j=v[D])&&j.pop)_(j[0],-p,-1,D),_(j[1],1,p,D),Z=j[0],p2=j[1];else{if(_(j,-p,p,D),!j)throw Error(h+D+" cannot be zero: "+j);Z=-(p2=j<0?-j:j)}if(v.hasOwnProperty(D="CRYPTO")){if((j=v[D])!==!!j)throw Error(h+D+" not true or false: "+j);if(j){if(typeof crypto>"u"||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw w2=!j,Error(h+"crypto unavailable");w2=j}else w2=j}if(v.hasOwnProperty(D="MODULO_MODE")&&(_(j=v[D],0,9,D),R2=j),v.hasOwnProperty(D="POW_PRECISION")&&(_(j=v[D],0,p,D),P2=j),v.hasOwnProperty(D="FORMAT")){if(typeof(j=v[D])!="object")throw Error(h+D+" not an object: "+j);J=j}if(v.hasOwnProperty(D="ALPHABET")){if(typeof(j=v[D])!="string"||/^.?$|[+\-.\s]|(.).*\1/.test(j))throw Error(h+D+" invalid: "+j);Y=j.slice(0,10)=="0123456789",a2=j}}return{DECIMAL_PLACES:r2,ROUNDING_MODE:b2,EXPONENTIAL_AT:[_2,$],RANGE:[Z,p2],CRYPTO:w2,MODULO_MODE:R2,POW_PRECISION:P2,FORMAT:J,ALPHABET:a2}},G.isBigNumber=function(v){if(!v||v._isBigNumber!==!0)return!1;if(!G.DEBUG)return!0;var D,j,q=v.c,V=v.e,l2=v.s;l:if({}.toString.call(q)=="[object Array]"){if((l2===1||l2===-1)&&V>=-p&&V<=p&&V===M(V)){if(q[0]===0){if(V===0&&q.length===1)return!0;break l}if((D=(V+1)%s)<1&&(D+=s),String(q[0]).length==D){for(D=0;D<q.length;D++)if((j=q[D])<0||j>=o||j!==M(j))break l;if(j!==0)return!0}}}else if(q===null&&V===null&&(l2===null||l2===1||l2===-1))return!0;throw Error(h+"Invalid BigNumber: "+v)},G.maximum=G.max=function(){return v2(arguments,W.lt)},G.minimum=G.min=function(){return v2(arguments,W.gt)},G.random=(u=9007199254740992,t=Math.random()*u&2097151?function(){return M(Math.random()*u)}:function(){return 8388608*(1073741824*Math.random()|0)+(8388608*Math.random()|0)},function(v){var D,j,q,V,l2,n2=0,t2=[],s2=new G(o2);if(v==null?v=r2:_(v,0,p),V=i(v/s),w2)if(crypto.getRandomValues){for(D=crypto.getRandomValues(new Uint32Array(V*=2));n2<V;)(l2=131072*D[n2]+(D[n2+1]>>>11))>=9e15?(j=crypto.getRandomValues(new Uint32Array(2)),D[n2]=j[0],D[n2+1]=j[1]):(t2.push(l2%1e14),n2+=2);n2=V/2}else{if(!crypto.randomBytes)throw w2=!1,Error(h+"crypto unavailable");for(D=crypto.randomBytes(V*=7);n2<V;)(l2=281474976710656*(31&D[n2])+1099511627776*D[n2+1]+4294967296*D[n2+2]+16777216*D[n2+3]+(D[n2+4]<<16)+(D[n2+5]<<8)+D[n2+6])>=9e15?crypto.randomBytes(7).copy(D,n2):(t2.push(l2%1e14),n2+=7);n2=V/7}if(!w2)for(;n2<V;)(l2=t())<9e15&&(t2[n2++]=l2%1e14);for(V=t2[--n2],v%=s,V&&v&&(l2=x[s-v],t2[n2]=M(V/l2)*l2);t2[n2]===0;t2.pop(),n2--);if(n2<0)t2=[q=0];else{for(q=-1;t2[0]===0;t2.splice(0,1),q-=s);for(n2=1,l2=t2[0];l2>=10;l2/=10,n2++);n2<s&&(q-=s-n2)}return s2.e=q,s2.c=t2,s2}),G.sum=function(){for(var v=1,D=arguments,j=new G(D[0]);v<D.length;)j=j.plus(D[v++]);return j},d=function(){var v="0123456789";function D(j,q,V,l2){for(var n2,t2,s2=[0],h2=0,d2=j.length;h2<d2;){for(t2=s2.length;t2--;s2[t2]*=q);for(s2[0]+=l2.indexOf(j.charAt(h2++)),n2=0;n2<s2.length;n2++)s2[n2]>V-1&&(s2[n2+1]==null&&(s2[n2+1]=0),s2[n2+1]+=s2[n2]/V|0,s2[n2]%=V)}return s2.reverse()}return function(j,q,V,l2,n2){var t2,s2,h2,d2,I2,T2,L2,q2,j2=j.indexOf("."),Q2=r2,z2=b2;for(j2>=0&&(d2=P2,P2=0,j=j.replace(".",""),T2=(q2=new G(q)).pow(j.length-j2),P2=d2,q2.c=D(F(g(T2.c),T2.e,"0"),10,V,v),q2.e=q2.c.length),h2=d2=(L2=D(j,q,V,n2?(t2=a2,v):(t2=v,a2))).length;L2[--d2]==0;L2.pop());if(!L2[0])return t2.charAt(0);if(j2<0?--h2:(T2.c=L2,T2.e=h2,T2.s=l2,L2=(T2=c2(T2,q2,Q2,z2,V)).c,I2=T2.r,h2=T2.e),j2=L2[s2=h2+Q2+1],d2=V/2,I2=I2||s2<0||L2[s2+1]!=null,I2=z2<4?(j2!=null||I2)&&(z2==0||z2==(T2.s<0?3:2)):j2>d2||j2==d2&&(z2==4||I2||z2==6&&1&L2[s2-1]||z2==(T2.s<0?8:7)),s2<1||!L2[0])j=I2?F(t2.charAt(1),-Q2,t2.charAt(0)):t2.charAt(0);else{if(L2.length=s2,I2)for(--V;++L2[--s2]>V;)L2[s2]=0,s2||(++h2,L2=[1].concat(L2));for(d2=L2.length;!L2[--d2];);for(j2=0,j="";j2<=d2;j+=t2.charAt(L2[j2++]));j=F(j,h2,t2.charAt(0))}return j}}(),c2=function(){function v(q,V,l2){var n2,t2,s2,h2,d2=0,I2=q.length,T2=V%S,L2=V/S|0;for(q=q.slice();I2--;)d2=((t2=T2*(s2=q[I2]%S)+(n2=L2*s2+(h2=q[I2]/S|0)*T2)%S*S+d2)/l2|0)+(n2/S|0)+L2*h2,q[I2]=t2%l2;return d2&&(q=[d2].concat(q)),q}function D(q,V,l2,n2){var t2,s2;if(l2!=n2)s2=l2>n2?1:-1;else for(t2=s2=0;t2<l2;t2++)if(q[t2]!=V[t2]){s2=q[t2]>V[t2]?1:-1;break}return s2}function j(q,V,l2,n2){for(var t2=0;l2--;)q[l2]-=t2,t2=q[l2]<V[l2]?1:0,q[l2]=t2*n2+q[l2]-V[l2];for(;!q[0]&&q.length>1;q.splice(0,1));}return function(q,V,l2,n2,t2){var s2,h2,d2,I2,T2,L2,q2,j2,Q2,z2,C2,l3,m3,X2,v3,h3,$2,s3=q.s==V.s?1:-1,o3=q.c,N2=V.c;if(!(o3&&o3[0]&&N2&&N2[0]))return new G(q.s&&V.s&&(o3?!N2||o3[0]!=N2[0]:N2)?o3&&o3[0]==0||!N2?0*s3:s3/0:NaN);for(Q2=(j2=new G(s3)).c=[],s3=l2+(h2=q.e-V.e)+1,t2||(t2=o,h2=y(q.e/s)-y(V.e/s),s3=s3/s|0),d2=0;N2[d2]==(o3[d2]||0);d2++);if(N2[d2]>(o3[d2]||0)&&h2--,s3<0)Q2.push(1),I2=!0;else{for(X2=o3.length,h3=N2.length,d2=0,s3+=2,(T2=M(t2/(N2[0]+1)))>1&&(N2=v(N2,T2,t2),o3=v(o3,T2,t2),h3=N2.length,X2=o3.length),m3=h3,C2=(z2=o3.slice(0,h3)).length;C2<h3;z2[C2++]=0);$2=N2.slice(),$2=[0].concat($2),v3=N2[0],N2[1]>=t2/2&&v3++;do{if(T2=0,(s2=D(N2,z2,h3,C2))<0){if(l3=z2[0],h3!=C2&&(l3=l3*t2+(z2[1]||0)),(T2=M(l3/v3))>1)for(T2>=t2&&(T2=t2-1),q2=(L2=v(N2,T2,t2)).length,C2=z2.length;D(L2,z2,q2,C2)==1;)T2--,j(L2,h3<q2?$2:N2,q2,t2),q2=L2.length,s2=1;else T2==0&&(s2=T2=1),q2=(L2=N2.slice()).length;if(q2<C2&&(L2=[0].concat(L2)),j(z2,L2,C2,t2),C2=z2.length,s2==-1)for(;D(N2,z2,h3,C2)<1;)T2++,j(z2,h3<C2?$2:N2,C2,t2),C2=z2.length}else s2===0&&(T2++,z2=[0]);Q2[d2++]=T2,z2[0]?z2[C2++]=o3[m3]||0:(z2=[o3[m3]],C2=1)}while((m3++<X2||z2[0]!=null)&&s3--);I2=z2[0]!=null,Q2[0]||Q2.splice(0,1)}if(t2==o){for(d2=1,s3=Q2[0];s3>=10;s3/=10,d2++);w(j2,l2+(j2.e=d2+h2*s-1)+1,n2,I2)}else j2.e=h2,j2.r=+I2;return j2}}(),e=/^(-?)0([xbo])(?=\w[\w.]*$)/i,r=/^([^.]+)\.$/,c=/^\.([^.]+)$/,P=/^-?(Infinity|NaN)$/,K=/^\s*\+(?=[\w.])|^\s+|\s+$/g,T=function(v,D,j,q){var V,l2=j?D:D.replace(K,"");if(P.test(l2))v.s=isNaN(l2)?null:l2<0?-1:1;else{if(!j&&(l2=l2.replace(e,function(n2,t2,s2){return V=(s2=s2.toLowerCase())=="x"?16:s2=="b"?2:8,q&&q!=V?n2:t2}),q&&(V=q,l2=l2.replace(r,"$1").replace(c,"0.$1")),D!=l2))return new G(l2,V);if(G.DEBUG)throw Error(h+"Not a"+(q?" base "+q:"")+" number: "+D);v.s=null}v.c=v.e=null},W.absoluteValue=W.abs=function(){var v=new G(this);return v.s<0&&(v.s=1),v},W.comparedTo=function(v,D){return B(this,new G(v,D))},W.decimalPlaces=W.dp=function(v,D){var j,q,V,l2=this;if(v!=null)return _(v,0,p),D==null?D=b2:_(D,0,8),w(new G(l2),v+l2.e+1,D);if(!(j=l2.c))return null;if(q=((V=j.length-1)-y(this.e/s))*s,V=j[V])for(;V%10==0;V/=10,q--);return q<0&&(q=0),q},W.dividedBy=W.div=function(v,D){return c2(this,new G(v,D),r2,b2)},W.dividedToIntegerBy=W.idiv=function(v,D){return c2(this,new G(v,D),0,1)},W.exponentiatedBy=W.pow=function(v,D){var j,q,V,l2,n2,t2,s2,h2,d2=this;if((v=new G(v)).c&&!v.isInteger())throw Error(h+"Exponent not an integer: "+k(v));if(D!=null&&(D=new G(D)),n2=v.e>14,!d2.c||!d2.c[0]||d2.c[0]==1&&!d2.e&&d2.c.length==1||!v.c||!v.c[0])return h2=new G(Math.pow(+k(d2),n2?v.s*(2-L(v)):+k(v))),D?h2.mod(D):h2;if(t2=v.s<0,D){if(D.c?!D.c[0]:!D.s)return new G(NaN);(q=!t2&&d2.isInteger()&&D.isInteger())&&(d2=d2.mod(D))}else{if(v.e>9&&(d2.e>0||d2.e<-1||(d2.e==0?d2.c[0]>1||n2&&d2.c[1]>=24e7:d2.c[0]<8e13||n2&&d2.c[0]<=9999975e7)))return l2=d2.s<0&&L(v)?-0:0,d2.e>-1&&(l2=1/l2),new G(t2?1/l2:l2);P2&&(l2=i(P2/s+2))}for(n2?(j=new G(.5),t2&&(v.s=1),s2=L(v)):s2=(V=Math.abs(+k(v)))%2,h2=new G(o2);;){if(s2){if(!(h2=h2.times(d2)).c)break;l2?h2.c.length>l2&&(h2.c.length=l2):q&&(h2=h2.mod(D))}if(V){if((V=M(V/2))===0)break;s2=V%2}else if(w(v=v.times(j),v.e+1,1),v.e>14)s2=L(v);else{if((V=+k(v))==0)break;s2=V%2}d2=d2.times(d2),l2?d2.c&&d2.c.length>l2&&(d2.c.length=l2):q&&(d2=d2.mod(D))}return q?h2:(t2&&(h2=o2.div(h2)),D?h2.mod(D):l2?w(h2,P2,b2,void 0):h2)},W.integerValue=function(v){var D=new G(this);return v==null?v=b2:_(v,0,8),w(D,D.e+1,v)},W.isEqualTo=W.eq=function(v,D){return B(this,new G(v,D))===0},W.isFinite=function(){return!!this.c},W.isGreaterThan=W.gt=function(v,D){return B(this,new G(v,D))>0},W.isGreaterThanOrEqualTo=W.gte=function(v,D){return(D=B(this,new G(v,D)))===1||D===0},W.isInteger=function(){return!!this.c&&y(this.e/s)>this.c.length-2},W.isLessThan=W.lt=function(v,D){return B(this,new G(v,D))<0},W.isLessThanOrEqualTo=W.lte=function(v,D){return(D=B(this,new G(v,D)))===-1||D===0},W.isNaN=function(){return!this.s},W.isNegative=function(){return this.s<0},W.isPositive=function(){return this.s>0},W.isZero=function(){return!!this.c&&this.c[0]==0},W.minus=function(v,D){var j,q,V,l2,n2=this,t2=n2.s;if(D=(v=new G(v,D)).s,!t2||!D)return new G(NaN);if(t2!=D)return v.s=-D,n2.plus(v);var s2=n2.e/s,h2=v.e/s,d2=n2.c,I2=v.c;if(!s2||!h2){if(!d2||!I2)return d2?(v.s=-D,v):new G(I2?n2:NaN);if(!d2[0]||!I2[0])return I2[0]?(v.s=-D,v):new G(d2[0]?n2:b2==3?-0:0)}if(s2=y(s2),h2=y(h2),d2=d2.slice(),t2=s2-h2){for((l2=t2<0)?(t2=-t2,V=d2):(h2=s2,V=I2),V.reverse(),D=t2;D--;V.push(0));V.reverse()}else for(q=(l2=(t2=d2.length)<(D=I2.length))?t2:D,t2=D=0;D<q;D++)if(d2[D]!=I2[D]){l2=d2[D]<I2[D];break}if(l2&&(V=d2,d2=I2,I2=V,v.s=-v.s),(D=(q=I2.length)-(j=d2.length))>0)for(;D--;d2[j++]=0);for(D=o-1;q>t2;){if(d2[--q]<I2[q]){for(j=q;j&&!d2[--j];d2[j]=D);--d2[j],d2[q]+=o}d2[q]-=I2[q]}for(;d2[0]==0;d2.splice(0,1),--h2);return d2[0]?g2(v,d2,h2):(v.s=b2==3?-1:1,v.c=[v.e=0],v)},W.modulo=W.mod=function(v,D){var j,q,V=this;return v=new G(v,D),!V.c||!v.s||v.c&&!v.c[0]?new G(NaN):!v.c||V.c&&!V.c[0]?new G(V):(R2==9?(q=v.s,v.s=1,j=c2(V,v,0,3),v.s=q,j.s*=q):j=c2(V,v,0,R2),(v=V.minus(j.times(v))).c[0]||R2!=1||(v.s=V.s),v)},W.multipliedBy=W.times=function(v,D){var j,q,V,l2,n2,t2,s2,h2,d2,I2,T2,L2,q2,j2,Q2,z2=this,C2=z2.c,l3=(v=new G(v,D)).c;if(!(C2&&l3&&C2[0]&&l3[0]))return!z2.s||!v.s||C2&&!C2[0]&&!l3||l3&&!l3[0]&&!C2?v.c=v.e=v.s=null:(v.s*=z2.s,C2&&l3?(v.c=[0],v.e=0):v.c=v.e=null),v;for(q=y(z2.e/s)+y(v.e/s),v.s*=z2.s,(s2=C2.length)<(I2=l3.length)&&(q2=C2,C2=l3,l3=q2,V=s2,s2=I2,I2=V),V=s2+I2,q2=[];V--;q2.push(0));for(j2=o,Q2=S,V=I2;--V>=0;){for(j=0,T2=l3[V]%Q2,L2=l3[V]/Q2|0,l2=V+(n2=s2);l2>V;)j=((h2=T2*(h2=C2[--n2]%Q2)+(t2=L2*h2+(d2=C2[n2]/Q2|0)*T2)%Q2*Q2+q2[l2]+j)/j2|0)+(t2/Q2|0)+L2*d2,q2[l2--]=h2%j2;q2[l2]=j}return j?++q:q2.splice(0,1),g2(v,q2,q)},W.negated=function(){var v=new G(this);return v.s=-v.s||null,v},W.plus=function(v,D){var j,q=this,V=q.s;if(D=(v=new G(v,D)).s,!V||!D)return new G(NaN);if(V!=D)return v.s=-D,q.minus(v);var l2=q.e/s,n2=v.e/s,t2=q.c,s2=v.c;if(!l2||!n2){if(!t2||!s2)return new G(V/0);if(!t2[0]||!s2[0])return s2[0]?v:new G(t2[0]?q:0*V)}if(l2=y(l2),n2=y(n2),t2=t2.slice(),V=l2-n2){for(V>0?(n2=l2,j=s2):(V=-V,j=t2),j.reverse();V--;j.push(0));j.reverse()}for((V=t2.length)-(D=s2.length)<0&&(j=s2,s2=t2,t2=j,D=V),V=0;D;)V=(t2[--D]=t2[D]+s2[D]+V)/o|0,t2[D]=o===t2[D]?0:t2[D]%o;return V&&(t2=[V].concat(t2),++n2),g2(v,t2,n2)},W.precision=W.sd=function(v,D){var j,q,V,l2=this;if(v!=null&&v!==!!v)return _(v,1,p),D==null?D=b2:_(D,0,8),w(new G(l2),v,D);if(!(j=l2.c))return null;if(q=(V=j.length-1)*s+1,V=j[V]){for(;V%10==0;V/=10,q--);for(V=j[0];V>=10;V/=10,q++);}return v&&l2.e+1>q&&(q=l2.e+1),q},W.shiftedBy=function(v){return _(v,-9007199254740991,m),this.times("1e"+v)},W.squareRoot=W.sqrt=function(){var v,D,j,q,V,l2=this,n2=l2.c,t2=l2.s,s2=l2.e,h2=r2+4,d2=new G("0.5");if(t2!==1||!n2||!n2[0])return new G(!t2||t2<0&&(!n2||n2[0])?NaN:n2?l2:1/0);if((t2=Math.sqrt(+k(l2)))==0||t2==1/0?(((D=g(n2)).length+s2)%2==0&&(D+="0"),t2=Math.sqrt(+D),s2=y((s2+1)/2)-(s2<0||s2%2),j=new G(D=t2==1/0?"5e"+s2:(D=t2.toExponential()).slice(0,D.indexOf("e")+1)+s2)):j=new G(t2+""),j.c[0]){for((t2=(s2=j.e)+h2)<3&&(t2=0);;)if(V=j,j=d2.times(V.plus(c2(l2,V,h2,1))),g(V.c).slice(0,t2)===(D=g(j.c)).slice(0,t2)){if(j.e<s2&&--t2,(D=D.slice(t2-3,t2+1))!="9999"&&(q||D!="4999")){+D&&(+D.slice(1)||D.charAt(0)!="5")||(w(j,j.e+r2+2,1),v=!j.times(j).eq(l2));break}if(!q&&(w(V,V.e+r2+2,0),V.times(V).eq(l2))){j=V;break}h2+=4,t2+=4,q=1}}return w(j,j.e+r2+1,b2,v)},W.toExponential=function(v,D){return v!=null&&(_(v,0,p),v++),i2(this,v,D,1)},W.toFixed=function(v,D){return v!=null&&(_(v,0,p),v=v+this.e+1),i2(this,v,D)},W.toFormat=function(v,D,j){var q,V=this;if(j==null)v!=null&&D&&typeof D=="object"?(j=D,D=null):v&&typeof v=="object"?(j=v,v=D=null):j=J;else if(typeof j!="object")throw Error(h+"Argument not an object: "+j);if(q=V.toFixed(v,D),V.c){var l2,n2=q.split("."),t2=+j.groupSize,s2=+j.secondaryGroupSize,h2=j.groupSeparator||"",d2=n2[0],I2=n2[1],T2=V.s<0,L2=T2?d2.slice(1):d2,q2=L2.length;if(s2&&(l2=t2,t2=s2,s2=l2,q2-=l2),t2>0&&q2>0){for(l2=q2%t2||t2,d2=L2.substr(0,l2);l2<q2;l2+=t2)d2+=h2+L2.substr(l2,t2);s2>0&&(d2+=h2+L2.slice(l2)),T2&&(d2="-"+d2)}q=I2?d2+(j.decimalSeparator||"")+((s2=+j.fractionGroupSize)?I2.replace(new RegExp("\\d{"+s2+"}\\B","g"),"$&"+(j.fractionGroupSeparator||"")):I2):d2}return(j.prefix||"")+q+(j.suffix||"")},W.toFraction=function(v){var D,j,q,V,l2,n2,t2,s2,h2,d2,I2,T2,L2=this,q2=L2.c;if(v!=null&&(!(t2=new G(v)).isInteger()&&(t2.c||t2.s!==1)||t2.lt(o2)))throw Error(h+"Argument "+(t2.isInteger()?"out of range: ":"not an integer: ")+k(t2));if(!q2)return new G(L2);for(D=new G(o2),h2=j=new G(o2),q=s2=new G(o2),T2=g(q2),l2=D.e=T2.length-L2.e-1,D.c[0]=x[(n2=l2%s)<0?s+n2:n2],v=!v||t2.comparedTo(D)>0?l2>0?D:h2:t2,n2=p2,p2=1/0,t2=new G(T2),s2.c[0]=0;d2=c2(t2,D,0,1),(V=j.plus(d2.times(q))).comparedTo(v)!=1;)j=q,q=V,h2=s2.plus(d2.times(V=h2)),s2=V,D=t2.minus(d2.times(V=D)),t2=V;return V=c2(v.minus(j),q,0,1),s2=s2.plus(V.times(h2)),j=j.plus(V.times(q)),s2.s=h2.s=L2.s,I2=c2(h2,q,l2*=2,b2).minus(L2).abs().comparedTo(c2(s2,j,l2,b2).minus(L2).abs())<1?[h2,q]:[s2,j],p2=n2,I2},W.toNumber=function(){return+k(this)},W.toPrecision=function(v,D){return v!=null&&_(v,1,p),i2(this,v,D,2)},W.toString=function(v){var D,j=this,q=j.s,V=j.e;return V===null?q?(D="Infinity",q<0&&(D="-"+D)):D="NaN":(v==null?D=V<=_2||V>=$?N(g(j.c),V):F(g(j.c),V,"0"):v===10&&Y?D=F(g((j=w(new G(j),r2+V+1,b2)).c),j.e,"0"):(_(v,2,a2.length,"Base"),D=d(F(g(j.c),V,"0"),10,v,q,!0)),q<0&&j.c[0]&&(D="-"+D)),D},W.valueOf=W.toJSON=function(){return k(this)},W._isBigNumber=!0,Q!=null&&G.set(Q),G}(),E.default=E.BigNumber=E,(C=(function(){return E}).call(O,A,O,u2))===void 0||(u2.exports=C)})()},8442:(u2,O,A)=>{const C=A(9488);function b(g,B,_){const L=g[B]+g[_];let N=g[B+1]+g[_+1];L>=4294967296&&N++,g[B]=L,g[B+1]=N}function E(g,B,_,L){let N=g[B]+_;_<0&&(N+=4294967296);let F=g[B+1]+L;N>=4294967296&&F++,g[B]=N,g[B+1]=F}function I(g,B){return g[B]^g[B+1]<<8^g[B+2]<<16^g[B+3]<<24}function i(g,B,_,L,N,F){const z=o[N],Q=o[N+1],c2=o[F],d=o[F+1];b(a,g,B),E(a,g,z,Q);let T=a[L]^a[g],u=a[L+1]^a[g+1];a[L]=u,a[L+1]=T,b(a,_,L),T=a[B]^a[_],u=a[B+1]^a[_+1],a[B]=T>>>24^u<<8,a[B+1]=u>>>24^T<<8,b(a,g,B),E(a,g,c2,d),T=a[L]^a[g],u=a[L+1]^a[g+1],a[L]=T>>>16^u<<16,a[L+1]=u>>>16^T<<16,b(a,_,L),T=a[B]^a[_],u=a[B+1]^a[_+1],a[B]=u>>>31^T<<1,a[B+1]=T>>>31^u<<1}const M=new Uint32Array([4089235720,1779033703,2227873595,3144134277,4271175723,1013904242,1595750129,2773480762,2917565137,1359893119,725511199,2600822924,4215389547,528734635,327033209,1541459225]),h=new Uint8Array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3].map(function(g){return 2*g})),a=new Uint32Array(32),o=new Uint32Array(32);function s(g,B){let _=0;for(_=0;_<16;_++)a[_]=g.h[_],a[_+16]=M[_];for(a[24]=a[24]^g.t,a[25]=a[25]^g.t/4294967296,B&&(a[28]=~a[28],a[29]=~a[29]),_=0;_<32;_++)o[_]=I(g.b,4*_);for(_=0;_<12;_++)i(0,8,16,24,h[16*_+0],h[16*_+1]),i(2,10,18,26,h[16*_+2],h[16*_+3]),i(4,12,20,28,h[16*_+4],h[16*_+5]),i(6,14,22,30,h[16*_+6],h[16*_+7]),i(0,10,20,30,h[16*_+8],h[16*_+9]),i(2,12,22,24,h[16*_+10],h[16*_+11]),i(4,14,16,26,h[16*_+12],h[16*_+13]),i(6,8,18,28,h[16*_+14],h[16*_+15]);for(_=0;_<16;_++)g.h[_]=g.h[_]^a[_]^a[_+16]}const m=new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);function x(g,B,_,L){if(g===0||g>64)throw new Error("Illegal output length, expected 0 < length <= 64");if(B&&B.length>64)throw new Error("Illegal key, expected Uint8Array with 0 < length <= 64");if(_&&_.length!==16)throw new Error("Illegal salt, expected Uint8Array with length is 16");if(L&&L.length!==16)throw new Error("Illegal personal, expected Uint8Array with length is 16");const N={b:new Uint8Array(128),h:new Uint32Array(16),t:0,c:0,outlen:g};m.fill(0),m[0]=g,B&&(m[1]=B.length),m[2]=1,m[3]=1,_&&m.set(_,32),L&&m.set(L,48);for(let F=0;F<16;F++)N.h[F]=M[F]^I(m,4*F);return B&&(S(N,B),N.c=128),N}function S(g,B){for(let _=0;_<B.length;_++)g.c===128&&(g.t+=g.c,s(g,!1),g.c=0),g.b[g.c++]=B[_]}function p(g){for(g.t+=g.c;g.c<128;)g.b[g.c++]=0;s(g,!0);const B=new Uint8Array(g.outlen);for(let _=0;_<g.outlen;_++)B[_]=g.h[_>>2]>>8*(3&_);return B}function y(g,B,_,L,N){_=_||64,g=C.normalizeInput(g),L&&(L=C.normalizeInput(L)),N&&(N=C.normalizeInput(N));const F=x(_,B,L,N);return S(F,g),p(F)}u2.exports={blake2b:y,blake2bHex:function(g,B,_,L,N){const F=y(g,B,_,L,N);return C.toHex(F)},blake2bInit:x,blake2bUpdate:S,blake2bFinal:p}},5297:(u2,O,A)=>{const C=A(9488);function b(p,y){return p[y]^p[y+1]<<8^p[y+2]<<16^p[y+3]<<24}function E(p,y,g,B,_,L){h[p]=h[p]+h[y]+_,h[B]=I(h[B]^h[p],16),h[g]=h[g]+h[B],h[y]=I(h[y]^h[g],12),h[p]=h[p]+h[y]+L,h[B]=I(h[B]^h[p],8),h[g]=h[g]+h[B],h[y]=I(h[y]^h[g],7)}function I(p,y){return p>>>y^p<<32-y}const i=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),M=new Uint8Array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0]),h=new Uint32Array(16),a=new Uint32Array(16);function o(p,y){let g=0;for(g=0;g<8;g++)h[g]=p.h[g],h[g+8]=i[g];for(h[12]^=p.t,h[13]^=p.t/4294967296,y&&(h[14]=~h[14]),g=0;g<16;g++)a[g]=b(p.b,4*g);for(g=0;g<10;g++)E(0,4,8,12,a[M[16*g+0]],a[M[16*g+1]]),E(1,5,9,13,a[M[16*g+2]],a[M[16*g+3]]),E(2,6,10,14,a[M[16*g+4]],a[M[16*g+5]]),E(3,7,11,15,a[M[16*g+6]],a[M[16*g+7]]),E(0,5,10,15,a[M[16*g+8]],a[M[16*g+9]]),E(1,6,11,12,a[M[16*g+10]],a[M[16*g+11]]),E(2,7,8,13,a[M[16*g+12]],a[M[16*g+13]]),E(3,4,9,14,a[M[16*g+14]],a[M[16*g+15]]);for(g=0;g<8;g++)p.h[g]^=h[g]^h[g+8]}function s(p,y){if(!(p>0&&p<=32))throw new Error("Incorrect output length, should be in [1, 32]");const g=y?y.length:0;if(y&&!(g>0&&g<=32))throw new Error("Incorrect key length, should be in [1, 32]");const B={h:new Uint32Array(i),b:new Uint8Array(64),c:0,t:0,outlen:p};return B.h[0]^=16842752^g<<8^p,g>0&&(m(B,y),B.c=64),B}function m(p,y){for(let g=0;g<y.length;g++)p.c===64&&(p.t+=p.c,o(p,!1),p.c=0),p.b[p.c++]=y[g]}function x(p){for(p.t+=p.c;p.c<64;)p.b[p.c++]=0;o(p,!0);const y=new Uint8Array(p.outlen);for(let g=0;g<p.outlen;g++)y[g]=p.h[g>>2]>>8*(3&g)&255;return y}function S(p,y,g){g=g||32,p=C.normalizeInput(p);const B=s(g,y);return m(B,p),x(B)}u2.exports={blake2s:S,blake2sHex:function(p,y,g){const B=S(p,y,g);return C.toHex(B)},blake2sInit:s,blake2sUpdate:m,blake2sFinal:x}},1191:(u2,O,A)=>{const C=A(8442),b=A(5297);u2.exports={blake2b:C.blake2b,blake2bHex:C.blake2bHex,blake2bInit:C.blake2bInit,blake2bUpdate:C.blake2bUpdate,blake2bFinal:C.blake2bFinal,blake2s:b.blake2s,blake2sHex:b.blake2sHex,blake2sInit:b.blake2sInit,blake2sUpdate:b.blake2sUpdate,blake2sFinal:b.blake2sFinal}},9488:u2=>{function O(A){return(4294967296+A).toString(16).substring(1)}u2.exports={normalizeInput:function(A){let C;if(A instanceof Uint8Array)C=A;else{if(typeof A!="string")throw new Error("Input must be an string, Buffer or Uint8Array");C=new TextEncoder().encode(A)}return C},toHex:function(A){return Array.prototype.map.call(A,function(C){return(C<16?"0":"")+C.toString(16)}).join("")},debugPrint:function(A,C,b){let E=`
`+A+" = ";for(let I=0;I<C.length;I+=2){if(b===32)E+=O(C[I]).toUpperCase(),E+=" ",E+=O(C[I+1]).toUpperCase();else{if(b!==64)throw new Error("Invalid size "+b);E+=O(C[I+1]).toUpperCase(),E+=O(C[I]).toUpperCase()}I%6==4?E+=`
`+new Array(A.length+4).join(" "):I<C.length-2&&(E+=" ")}console.log(E)},testSpeed:function(A,C,b){let E=new Date().getTime();const I=new Uint8Array(C);for(let M=0;M<C;M++)I[M]=M%256;const i=new Date().getTime();console.log("Generated random input in "+(i-E)+"ms"),E=i;for(let M=0;M<b;M++){const h=A(I),a=new Date().getTime(),o=a-E;E=a,console.log("Hashed in "+o+"ms: "+h.substring(0,20)+"..."),console.log(Math.round(C/1048576/(o/1e3)*100)/100+" MB PER SECOND")}}}},3550:function(u2,O,A){(function(C,b){function E(u,t){if(!u)throw new Error(t||"Assertion failed")}function I(u,t){u.super_=t;var e=function(){};e.prototype=t.prototype,u.prototype=new e,u.prototype.constructor=u}function i(u,t,e){if(i.isBN(u))return u;this.negative=0,this.words=null,this.length=0,this.red=null,u!==null&&(t!=="le"&&t!=="be"||(e=t,t=10),this._init(u||0,t||10,e||"be"))}var M;typeof C=="object"?C.exports=i:b.BN=i,i.BN=i,i.wordSize=26;try{M=typeof window<"u"&&window.Buffer!==void 0?window.Buffer:A(6601).Buffer}catch{}function h(u,t){var e=u.charCodeAt(t);return e>=48&&e<=57?e-48:e>=65&&e<=70?e-55:e>=97&&e<=102?e-87:void E(!1,"Invalid character in "+u)}function a(u,t,e){var r=h(u,e);return e-1>=t&&(r|=h(u,e-1)<<4),r}function o(u,t,e,r){for(var c=0,P=0,K=Math.min(u.length,e),W=t;W<K;W++){var o2=u.charCodeAt(W)-48;c*=r,P=o2>=49?o2-49+10:o2>=17?o2-17+10:o2,E(o2>=0&&P<r,"Invalid character"),c+=P}return c}function s(u,t){u.words=t.words,u.length=t.length,u.negative=t.negative,u.red=t.red}if(i.isBN=function(u){return u instanceof i||u!==null&&typeof u=="object"&&u.constructor.wordSize===i.wordSize&&Array.isArray(u.words)},i.max=function(u,t){return u.cmp(t)>0?u:t},i.min=function(u,t){return u.cmp(t)<0?u:t},i.prototype._init=function(u,t,e){if(typeof u=="number")return this._initNumber(u,t,e);if(typeof u=="object")return this._initArray(u,t,e);t==="hex"&&(t=16),E(t===(0|t)&&t>=2&&t<=36);var r=0;(u=u.toString().replace(/\s+/g,""))[0]==="-"&&(r++,this.negative=1),r<u.length&&(t===16?this._parseHex(u,r,e):(this._parseBase(u,t,r),e==="le"&&this._initArray(this.toArray(),t,e)))},i.prototype._initNumber=function(u,t,e){u<0&&(this.negative=1,u=-u),u<67108864?(this.words=[67108863&u],this.length=1):u<4503599627370496?(this.words=[67108863&u,u/67108864&67108863],this.length=2):(E(u<9007199254740992),this.words=[67108863&u,u/67108864&67108863,1],this.length=3),e==="le"&&this._initArray(this.toArray(),t,e)},i.prototype._initArray=function(u,t,e){if(E(typeof u.length=="number"),u.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(u.length/3),this.words=new Array(this.length);for(var r=0;r<this.length;r++)this.words[r]=0;var c,P,K=0;if(e==="be")for(r=u.length-1,c=0;r>=0;r-=3)P=u[r]|u[r-1]<<8|u[r-2]<<16,this.words[c]|=P<<K&67108863,this.words[c+1]=P>>>26-K&67108863,(K+=24)>=26&&(K-=26,c++);else if(e==="le")for(r=0,c=0;r<u.length;r+=3)P=u[r]|u[r+1]<<8|u[r+2]<<16,this.words[c]|=P<<K&67108863,this.words[c+1]=P>>>26-K&67108863,(K+=24)>=26&&(K-=26,c++);return this._strip()},i.prototype._parseHex=function(u,t,e){this.length=Math.ceil((u.length-t)/6),this.words=new Array(this.length);for(var r=0;r<this.length;r++)this.words[r]=0;var c,P=0,K=0;if(e==="be")for(r=u.length-1;r>=t;r-=2)c=a(u,t,r)<<P,this.words[K]|=67108863&c,P>=18?(P-=18,K+=1,this.words[K]|=c>>>26):P+=8;else for(r=(u.length-t)%2==0?t+1:t;r<u.length;r+=2)c=a(u,t,r)<<P,this.words[K]|=67108863&c,P>=18?(P-=18,K+=1,this.words[K]|=c>>>26):P+=8;this._strip()},i.prototype._parseBase=function(u,t,e){this.words=[0],this.length=1;for(var r=0,c=1;c<=67108863;c*=t)r++;r--,c=c/t|0;for(var P=u.length-e,K=P%r,W=Math.min(P,P-K)+e,o2=0,r2=e;r2<W;r2+=r)o2=o(u,r2,r2+r,t),this.imuln(c),this.words[0]+o2<67108864?this.words[0]+=o2:this._iaddn(o2);if(K!==0){var b2=1;for(o2=o(u,r2,u.length,t),r2=0;r2<K;r2++)b2*=t;this.imuln(b2),this.words[0]+o2<67108864?this.words[0]+=o2:this._iaddn(o2)}this._strip()},i.prototype.copy=function(u){u.words=new Array(this.length);for(var t=0;t<this.length;t++)u.words[t]=this.words[t];u.length=this.length,u.negative=this.negative,u.red=this.red},i.prototype._move=function(u){s(u,this)},i.prototype.clone=function(){var u=new i(null);return this.copy(u),u},i.prototype._expand=function(u){for(;this.length<u;)this.words[this.length++]=0;return this},i.prototype._strip=function(){for(;this.length>1&&this.words[this.length-1]===0;)this.length--;return this._normSign()},i.prototype._normSign=function(){return this.length===1&&this.words[0]===0&&(this.negative=0),this},typeof Symbol<"u"&&typeof Symbol.for=="function")try{i.prototype[Symbol.for("nodejs.util.inspect.custom")]=m}catch{i.prototype.inspect=m}else i.prototype.inspect=m;function m(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"}var x=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],S=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],p=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function y(u,t,e){e.negative=t.negative^u.negative;var r=u.length+t.length|0;e.length=r,r=r-1|0;var c=0|u.words[0],P=0|t.words[0],K=c*P,W=67108863&K,o2=K/67108864|0;e.words[0]=W;for(var r2=1;r2<r;r2++){for(var b2=o2>>>26,_2=67108863&o2,$=Math.min(r2,t.length-1),Z=Math.max(0,r2-u.length+1);Z<=$;Z++){var p2=r2-Z|0;b2+=(K=(c=0|u.words[p2])*(P=0|t.words[Z])+_2)/67108864|0,_2=67108863&K}e.words[r2]=0|_2,o2=0|b2}return o2!==0?e.words[r2]=0|o2:e.length--,e._strip()}i.prototype.toString=function(u,t){var e;if(t=0|t||1,(u=u||10)===16||u==="hex"){e="";for(var r=0,c=0,P=0;P<this.length;P++){var K=this.words[P],W=(16777215&(K<<r|c)).toString(16);c=K>>>24-r&16777215,(r+=2)>=26&&(r-=26,P--),e=c!==0||P!==this.length-1?x[6-W.length]+W+e:W+e}for(c!==0&&(e=c.toString(16)+e);e.length%t!=0;)e="0"+e;return this.negative!==0&&(e="-"+e),e}if(u===(0|u)&&u>=2&&u<=36){var o2=S[u],r2=p[u];e="";var b2=this.clone();for(b2.negative=0;!b2.isZero();){var _2=b2.modrn(r2).toString(u);e=(b2=b2.idivn(r2)).isZero()?_2+e:x[o2-_2.length]+_2+e}for(this.isZero()&&(e="0"+e);e.length%t!=0;)e="0"+e;return this.negative!==0&&(e="-"+e),e}E(!1,"Base should be between 2 and 36")},i.prototype.toNumber=function(){var u=this.words[0];return this.length===2?u+=67108864*this.words[1]:this.length===3&&this.words[2]===1?u+=4503599627370496+67108864*this.words[1]:this.length>2&&E(!1,"Number can only safely store up to 53 bits"),this.negative!==0?-u:u},i.prototype.toJSON=function(){return this.toString(16,2)},M&&(i.prototype.toBuffer=function(u,t){return this.toArrayLike(M,u,t)}),i.prototype.toArray=function(u,t){return this.toArrayLike(Array,u,t)},i.prototype.toArrayLike=function(u,t,e){this._strip();var r=this.byteLength(),c=e||Math.max(1,r);E(r<=c,"byte array longer than desired length"),E(c>0,"Requested array length <= 0");var P=function(K,W){return K.allocUnsafe?K.allocUnsafe(W):new K(W)}(u,c);return this["_toArrayLike"+(t==="le"?"LE":"BE")](P,r),P},i.prototype._toArrayLikeLE=function(u,t){for(var e=0,r=0,c=0,P=0;c<this.length;c++){var K=this.words[c]<<P|r;u[e++]=255&K,e<u.length&&(u[e++]=K>>8&255),e<u.length&&(u[e++]=K>>16&255),P===6?(e<u.length&&(u[e++]=K>>24&255),r=0,P=0):(r=K>>>24,P+=2)}if(e<u.length)for(u[e++]=r;e<u.length;)u[e++]=0},i.prototype._toArrayLikeBE=function(u,t){for(var e=u.length-1,r=0,c=0,P=0;c<this.length;c++){var K=this.words[c]<<P|r;u[e--]=255&K,e>=0&&(u[e--]=K>>8&255),e>=0&&(u[e--]=K>>16&255),P===6?(e>=0&&(u[e--]=K>>24&255),r=0,P=0):(r=K>>>24,P+=2)}if(e>=0)for(u[e--]=r;e>=0;)u[e--]=0},Math.clz32?i.prototype._countBits=function(u){return 32-Math.clz32(u)}:i.prototype._countBits=function(u){var t=u,e=0;return t>=4096&&(e+=13,t>>>=13),t>=64&&(e+=7,t>>>=7),t>=8&&(e+=4,t>>>=4),t>=2&&(e+=2,t>>>=2),e+t},i.prototype._zeroBits=function(u){if(u===0)return 26;var t=u,e=0;return!(8191&t)&&(e+=13,t>>>=13),!(127&t)&&(e+=7,t>>>=7),!(15&t)&&(e+=4,t>>>=4),!(3&t)&&(e+=2,t>>>=2),!(1&t)&&e++,e},i.prototype.bitLength=function(){var u=this.words[this.length-1],t=this._countBits(u);return 26*(this.length-1)+t},i.prototype.zeroBits=function(){if(this.isZero())return 0;for(var u=0,t=0;t<this.length;t++){var e=this._zeroBits(this.words[t]);if(u+=e,e!==26)break}return u},i.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},i.prototype.toTwos=function(u){return this.negative!==0?this.abs().inotn(u).iaddn(1):this.clone()},i.prototype.fromTwos=function(u){return this.testn(u-1)?this.notn(u).iaddn(1).ineg():this.clone()},i.prototype.isNeg=function(){return this.negative!==0},i.prototype.neg=function(){return this.clone().ineg()},i.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},i.prototype.iuor=function(u){for(;this.length<u.length;)this.words[this.length++]=0;for(var t=0;t<u.length;t++)this.words[t]=this.words[t]|u.words[t];return this._strip()},i.prototype.ior=function(u){return E((this.negative|u.negative)==0),this.iuor(u)},i.prototype.or=function(u){return this.length>u.length?this.clone().ior(u):u.clone().ior(this)},i.prototype.uor=function(u){return this.length>u.length?this.clone().iuor(u):u.clone().iuor(this)},i.prototype.iuand=function(u){var t;t=this.length>u.length?u:this;for(var e=0;e<t.length;e++)this.words[e]=this.words[e]&u.words[e];return this.length=t.length,this._strip()},i.prototype.iand=function(u){return E((this.negative|u.negative)==0),this.iuand(u)},i.prototype.and=function(u){return this.length>u.length?this.clone().iand(u):u.clone().iand(this)},i.prototype.uand=function(u){return this.length>u.length?this.clone().iuand(u):u.clone().iuand(this)},i.prototype.iuxor=function(u){var t,e;this.length>u.length?(t=this,e=u):(t=u,e=this);for(var r=0;r<e.length;r++)this.words[r]=t.words[r]^e.words[r];if(this!==t)for(;r<t.length;r++)this.words[r]=t.words[r];return this.length=t.length,this._strip()},i.prototype.ixor=function(u){return E((this.negative|u.negative)==0),this.iuxor(u)},i.prototype.xor=function(u){return this.length>u.length?this.clone().ixor(u):u.clone().ixor(this)},i.prototype.uxor=function(u){return this.length>u.length?this.clone().iuxor(u):u.clone().iuxor(this)},i.prototype.inotn=function(u){E(typeof u=="number"&&u>=0);var t=0|Math.ceil(u/26),e=u%26;this._expand(t),e>0&&t--;for(var r=0;r<t;r++)this.words[r]=67108863&~this.words[r];return e>0&&(this.words[r]=~this.words[r]&67108863>>26-e),this._strip()},i.prototype.notn=function(u){return this.clone().inotn(u)},i.prototype.setn=function(u,t){E(typeof u=="number"&&u>=0);var e=u/26|0,r=u%26;return this._expand(e+1),this.words[e]=t?this.words[e]|1<<r:this.words[e]&~(1<<r),this._strip()},i.prototype.iadd=function(u){var t,e,r;if(this.negative!==0&&u.negative===0)return this.negative=0,t=this.isub(u),this.negative^=1,this._normSign();if(this.negative===0&&u.negative!==0)return u.negative=0,t=this.isub(u),u.negative=1,t._normSign();this.length>u.length?(e=this,r=u):(e=u,r=this);for(var c=0,P=0;P<r.length;P++)t=(0|e.words[P])+(0|r.words[P])+c,this.words[P]=67108863&t,c=t>>>26;for(;c!==0&&P<e.length;P++)t=(0|e.words[P])+c,this.words[P]=67108863&t,c=t>>>26;if(this.length=e.length,c!==0)this.words[this.length]=c,this.length++;else if(e!==this)for(;P<e.length;P++)this.words[P]=e.words[P];return this},i.prototype.add=function(u){var t;return u.negative!==0&&this.negative===0?(u.negative=0,t=this.sub(u),u.negative^=1,t):u.negative===0&&this.negative!==0?(this.negative=0,t=u.sub(this),this.negative=1,t):this.length>u.length?this.clone().iadd(u):u.clone().iadd(this)},i.prototype.isub=function(u){if(u.negative!==0){u.negative=0;var t=this.iadd(u);return u.negative=1,t._normSign()}if(this.negative!==0)return this.negative=0,this.iadd(u),this.negative=1,this._normSign();var e,r,c=this.cmp(u);if(c===0)return this.negative=0,this.length=1,this.words[0]=0,this;c>0?(e=this,r=u):(e=u,r=this);for(var P=0,K=0;K<r.length;K++)P=(t=(0|e.words[K])-(0|r.words[K])+P)>>26,this.words[K]=67108863&t;for(;P!==0&&K<e.length;K++)P=(t=(0|e.words[K])+P)>>26,this.words[K]=67108863&t;if(P===0&&K<e.length&&e!==this)for(;K<e.length;K++)this.words[K]=e.words[K];return this.length=Math.max(this.length,K),e!==this&&(this.negative=1),this._strip()},i.prototype.sub=function(u){return this.clone().isub(u)};var g=function(u,t,e){var r,c,P,K=u.words,W=t.words,o2=e.words,r2=0,b2=0|K[0],_2=8191&b2,$=b2>>>13,Z=0|K[1],p2=8191&Z,w2=Z>>>13,R2=0|K[2],P2=8191&R2,J=R2>>>13,a2=0|K[3],Y=8191&a2,G=a2>>>13,i2=0|K[4],v2=8191&i2,g2=i2>>>13,w=0|K[5],k=8191&w,v=w>>>13,D=0|K[6],j=8191&D,q=D>>>13,V=0|K[7],l2=8191&V,n2=V>>>13,t2=0|K[8],s2=8191&t2,h2=t2>>>13,d2=0|K[9],I2=8191&d2,T2=d2>>>13,L2=0|W[0],q2=8191&L2,j2=L2>>>13,Q2=0|W[1],z2=8191&Q2,C2=Q2>>>13,l3=0|W[2],m3=8191&l3,X2=l3>>>13,v3=0|W[3],h3=8191&v3,$2=v3>>>13,s3=0|W[4],o3=8191&s3,N2=s3>>>13,M3=0|W[5],I3=8191&M3,r3=M3>>>13,B3=0|W[6],T3=8191&B3,n3=B3>>>13,k3=0|W[7],S3=8191&k3,u3=k3>>>13,y3=0|W[8],R3=8191&y3,t3=y3>>>13,O3=0|W[9],A3=8191&O3,E3=O3>>>13;e.negative=u.negative^t.negative,e.length=19;var v4=(r2+(r=Math.imul(_2,q2))|0)+((8191&(c=(c=Math.imul(_2,j2))+Math.imul($,q2)|0))<<13)|0;r2=((P=Math.imul($,j2))+(c>>>13)|0)+(v4>>>26)|0,v4&=67108863,r=Math.imul(p2,q2),c=(c=Math.imul(p2,j2))+Math.imul(w2,q2)|0,P=Math.imul(w2,j2);var y4=(r2+(r=r+Math.imul(_2,z2)|0)|0)+((8191&(c=(c=c+Math.imul(_2,C2)|0)+Math.imul($,z2)|0))<<13)|0;r2=((P=P+Math.imul($,C2)|0)+(c>>>13)|0)+(y4>>>26)|0,y4&=67108863,r=Math.imul(P2,q2),c=(c=Math.imul(P2,j2))+Math.imul(J,q2)|0,P=Math.imul(J,j2),r=r+Math.imul(p2,z2)|0,c=(c=c+Math.imul(p2,C2)|0)+Math.imul(w2,z2)|0,P=P+Math.imul(w2,C2)|0;var w4=(r2+(r=r+Math.imul(_2,m3)|0)|0)+((8191&(c=(c=c+Math.imul(_2,X2)|0)+Math.imul($,m3)|0))<<13)|0;r2=((P=P+Math.imul($,X2)|0)+(c>>>13)|0)+(w4>>>26)|0,w4&=67108863,r=Math.imul(Y,q2),c=(c=Math.imul(Y,j2))+Math.imul(G,q2)|0,P=Math.imul(G,j2),r=r+Math.imul(P2,z2)|0,c=(c=c+Math.imul(P2,C2)|0)+Math.imul(J,z2)|0,P=P+Math.imul(J,C2)|0,r=r+Math.imul(p2,m3)|0,c=(c=c+Math.imul(p2,X2)|0)+Math.imul(w2,m3)|0,P=P+Math.imul(w2,X2)|0;var E4=(r2+(r=r+Math.imul(_2,h3)|0)|0)+((8191&(c=(c=c+Math.imul(_2,$2)|0)+Math.imul($,h3)|0))<<13)|0;r2=((P=P+Math.imul($,$2)|0)+(c>>>13)|0)+(E4>>>26)|0,E4&=67108863,r=Math.imul(v2,q2),c=(c=Math.imul(v2,j2))+Math.imul(g2,q2)|0,P=Math.imul(g2,j2),r=r+Math.imul(Y,z2)|0,c=(c=c+Math.imul(Y,C2)|0)+Math.imul(G,z2)|0,P=P+Math.imul(G,C2)|0,r=r+Math.imul(P2,m3)|0,c=(c=c+Math.imul(P2,X2)|0)+Math.imul(J,m3)|0,P=P+Math.imul(J,X2)|0,r=r+Math.imul(p2,h3)|0,c=(c=c+Math.imul(p2,$2)|0)+Math.imul(w2,h3)|0,P=P+Math.imul(w2,$2)|0;var I4=(r2+(r=r+Math.imul(_2,o3)|0)|0)+((8191&(c=(c=c+Math.imul(_2,N2)|0)+Math.imul($,o3)|0))<<13)|0;r2=((P=P+Math.imul($,N2)|0)+(c>>>13)|0)+(I4>>>26)|0,I4&=67108863,r=Math.imul(k,q2),c=(c=Math.imul(k,j2))+Math.imul(v,q2)|0,P=Math.imul(v,j2),r=r+Math.imul(v2,z2)|0,c=(c=c+Math.imul(v2,C2)|0)+Math.imul(g2,z2)|0,P=P+Math.imul(g2,C2)|0,r=r+Math.imul(Y,m3)|0,c=(c=c+Math.imul(Y,X2)|0)+Math.imul(G,m3)|0,P=P+Math.imul(G,X2)|0,r=r+Math.imul(P2,h3)|0,c=(c=c+Math.imul(P2,$2)|0)+Math.imul(J,h3)|0,P=P+Math.imul(J,$2)|0,r=r+Math.imul(p2,o3)|0,c=(c=c+Math.imul(p2,N2)|0)+Math.imul(w2,o3)|0,P=P+Math.imul(w2,N2)|0;var B4=(r2+(r=r+Math.imul(_2,I3)|0)|0)+((8191&(c=(c=c+Math.imul(_2,r3)|0)+Math.imul($,I3)|0))<<13)|0;r2=((P=P+Math.imul($,r3)|0)+(c>>>13)|0)+(B4>>>26)|0,B4&=67108863,r=Math.imul(j,q2),c=(c=Math.imul(j,j2))+Math.imul(q,q2)|0,P=Math.imul(q,j2),r=r+Math.imul(k,z2)|0,c=(c=c+Math.imul(k,C2)|0)+Math.imul(v,z2)|0,P=P+Math.imul(v,C2)|0,r=r+Math.imul(v2,m3)|0,c=(c=c+Math.imul(v2,X2)|0)+Math.imul(g2,m3)|0,P=P+Math.imul(g2,X2)|0,r=r+Math.imul(Y,h3)|0,c=(c=c+Math.imul(Y,$2)|0)+Math.imul(G,h3)|0,P=P+Math.imul(G,$2)|0,r=r+Math.imul(P2,o3)|0,c=(c=c+Math.imul(P2,N2)|0)+Math.imul(J,o3)|0,P=P+Math.imul(J,N2)|0,r=r+Math.imul(p2,I3)|0,c=(c=c+Math.imul(p2,r3)|0)+Math.imul(w2,I3)|0,P=P+Math.imul(w2,r3)|0;var T4=(r2+(r=r+Math.imul(_2,T3)|0)|0)+((8191&(c=(c=c+Math.imul(_2,n3)|0)+Math.imul($,T3)|0))<<13)|0;r2=((P=P+Math.imul($,n3)|0)+(c>>>13)|0)+(T4>>>26)|0,T4&=67108863,r=Math.imul(l2,q2),c=(c=Math.imul(l2,j2))+Math.imul(n2,q2)|0,P=Math.imul(n2,j2),r=r+Math.imul(j,z2)|0,c=(c=c+Math.imul(j,C2)|0)+Math.imul(q,z2)|0,P=P+Math.imul(q,C2)|0,r=r+Math.imul(k,m3)|0,c=(c=c+Math.imul(k,X2)|0)+Math.imul(v,m3)|0,P=P+Math.imul(v,X2)|0,r=r+Math.imul(v2,h3)|0,c=(c=c+Math.imul(v2,$2)|0)+Math.imul(g2,h3)|0,P=P+Math.imul(g2,$2)|0,r=r+Math.imul(Y,o3)|0,c=(c=c+Math.imul(Y,N2)|0)+Math.imul(G,o3)|0,P=P+Math.imul(G,N2)|0,r=r+Math.imul(P2,I3)|0,c=(c=c+Math.imul(P2,r3)|0)+Math.imul(J,I3)|0,P=P+Math.imul(J,r3)|0,r=r+Math.imul(p2,T3)|0,c=(c=c+Math.imul(p2,n3)|0)+Math.imul(w2,T3)|0,P=P+Math.imul(w2,n3)|0;var p4=(r2+(r=r+Math.imul(_2,S3)|0)|0)+((8191&(c=(c=c+Math.imul(_2,u3)|0)+Math.imul($,S3)|0))<<13)|0;r2=((P=P+Math.imul($,u3)|0)+(c>>>13)|0)+(p4>>>26)|0,p4&=67108863,r=Math.imul(s2,q2),c=(c=Math.imul(s2,j2))+Math.imul(h2,q2)|0,P=Math.imul(h2,j2),r=r+Math.imul(l2,z2)|0,c=(c=c+Math.imul(l2,C2)|0)+Math.imul(n2,z2)|0,P=P+Math.imul(n2,C2)|0,r=r+Math.imul(j,m3)|0,c=(c=c+Math.imul(j,X2)|0)+Math.imul(q,m3)|0,P=P+Math.imul(q,X2)|0,r=r+Math.imul(k,h3)|0,c=(c=c+Math.imul(k,$2)|0)+Math.imul(v,h3)|0,P=P+Math.imul(v,$2)|0,r=r+Math.imul(v2,o3)|0,c=(c=c+Math.imul(v2,N2)|0)+Math.imul(g2,o3)|0,P=P+Math.imul(g2,N2)|0,r=r+Math.imul(Y,I3)|0,c=(c=c+Math.imul(Y,r3)|0)+Math.imul(G,I3)|0,P=P+Math.imul(G,r3)|0,r=r+Math.imul(P2,T3)|0,c=(c=c+Math.imul(P2,n3)|0)+Math.imul(J,T3)|0,P=P+Math.imul(J,n3)|0,r=r+Math.imul(p2,S3)|0,c=(c=c+Math.imul(p2,u3)|0)+Math.imul(w2,S3)|0,P=P+Math.imul(w2,u3)|0;var k4=(r2+(r=r+Math.imul(_2,R3)|0)|0)+((8191&(c=(c=c+Math.imul(_2,t3)|0)+Math.imul($,R3)|0))<<13)|0;r2=((P=P+Math.imul($,t3)|0)+(c>>>13)|0)+(k4>>>26)|0,k4&=67108863,r=Math.imul(I2,q2),c=(c=Math.imul(I2,j2))+Math.imul(T2,q2)|0,P=Math.imul(T2,j2),r=r+Math.imul(s2,z2)|0,c=(c=c+Math.imul(s2,C2)|0)+Math.imul(h2,z2)|0,P=P+Math.imul(h2,C2)|0,r=r+Math.imul(l2,m3)|0,c=(c=c+Math.imul(l2,X2)|0)+Math.imul(n2,m3)|0,P=P+Math.imul(n2,X2)|0,r=r+Math.imul(j,h3)|0,c=(c=c+Math.imul(j,$2)|0)+Math.imul(q,h3)|0,P=P+Math.imul(q,$2)|0,r=r+Math.imul(k,o3)|0,c=(c=c+Math.imul(k,N2)|0)+Math.imul(v,o3)|0,P=P+Math.imul(v,N2)|0,r=r+Math.imul(v2,I3)|0,c=(c=c+Math.imul(v2,r3)|0)+Math.imul(g2,I3)|0,P=P+Math.imul(g2,r3)|0,r=r+Math.imul(Y,T3)|0,c=(c=c+Math.imul(Y,n3)|0)+Math.imul(G,T3)|0,P=P+Math.imul(G,n3)|0,r=r+Math.imul(P2,S3)|0,c=(c=c+Math.imul(P2,u3)|0)+Math.imul(J,S3)|0,P=P+Math.imul(J,u3)|0,r=r+Math.imul(p2,R3)|0,c=(c=c+Math.imul(p2,t3)|0)+Math.imul(w2,R3)|0,P=P+Math.imul(w2,t3)|0;var R4=(r2+(r=r+Math.imul(_2,A3)|0)|0)+((8191&(c=(c=c+Math.imul(_2,E3)|0)+Math.imul($,A3)|0))<<13)|0;r2=((P=P+Math.imul($,E3)|0)+(c>>>13)|0)+(R4>>>26)|0,R4&=67108863,r=Math.imul(I2,z2),c=(c=Math.imul(I2,C2))+Math.imul(T2,z2)|0,P=Math.imul(T2,C2),r=r+Math.imul(s2,m3)|0,c=(c=c+Math.imul(s2,X2)|0)+Math.imul(h2,m3)|0,P=P+Math.imul(h2,X2)|0,r=r+Math.imul(l2,h3)|0,c=(c=c+Math.imul(l2,$2)|0)+Math.imul(n2,h3)|0,P=P+Math.imul(n2,$2)|0,r=r+Math.imul(j,o3)|0,c=(c=c+Math.imul(j,N2)|0)+Math.imul(q,o3)|0,P=P+Math.imul(q,N2)|0,r=r+Math.imul(k,I3)|0,c=(c=c+Math.imul(k,r3)|0)+Math.imul(v,I3)|0,P=P+Math.imul(v,r3)|0,r=r+Math.imul(v2,T3)|0,c=(c=c+Math.imul(v2,n3)|0)+Math.imul(g2,T3)|0,P=P+Math.imul(g2,n3)|0,r=r+Math.imul(Y,S3)|0,c=(c=c+Math.imul(Y,u3)|0)+Math.imul(G,S3)|0,P=P+Math.imul(G,u3)|0,r=r+Math.imul(P2,R3)|0,c=(c=c+Math.imul(P2,t3)|0)+Math.imul(J,R3)|0,P=P+Math.imul(J,t3)|0;var O4=(r2+(r=r+Math.imul(p2,A3)|0)|0)+((8191&(c=(c=c+Math.imul(p2,E3)|0)+Math.imul(w2,A3)|0))<<13)|0;r2=((P=P+Math.imul(w2,E3)|0)+(c>>>13)|0)+(O4>>>26)|0,O4&=67108863,r=Math.imul(I2,m3),c=(c=Math.imul(I2,X2))+Math.imul(T2,m3)|0,P=Math.imul(T2,X2),r=r+Math.imul(s2,h3)|0,c=(c=c+Math.imul(s2,$2)|0)+Math.imul(h2,h3)|0,P=P+Math.imul(h2,$2)|0,r=r+Math.imul(l2,o3)|0,c=(c=c+Math.imul(l2,N2)|0)+Math.imul(n2,o3)|0,P=P+Math.imul(n2,N2)|0,r=r+Math.imul(j,I3)|0,c=(c=c+Math.imul(j,r3)|0)+Math.imul(q,I3)|0,P=P+Math.imul(q,r3)|0,r=r+Math.imul(k,T3)|0,c=(c=c+Math.imul(k,n3)|0)+Math.imul(v,T3)|0,P=P+Math.imul(v,n3)|0,r=r+Math.imul(v2,S3)|0,c=(c=c+Math.imul(v2,u3)|0)+Math.imul(g2,S3)|0,P=P+Math.imul(g2,u3)|0,r=r+Math.imul(Y,R3)|0,c=(c=c+Math.imul(Y,t3)|0)+Math.imul(G,R3)|0,P=P+Math.imul(G,t3)|0;var P4=(r2+(r=r+Math.imul(P2,A3)|0)|0)+((8191&(c=(c=c+Math.imul(P2,E3)|0)+Math.imul(J,A3)|0))<<13)|0;r2=((P=P+Math.imul(J,E3)|0)+(c>>>13)|0)+(P4>>>26)|0,P4&=67108863,r=Math.imul(I2,h3),c=(c=Math.imul(I2,$2))+Math.imul(T2,h3)|0,P=Math.imul(T2,$2),r=r+Math.imul(s2,o3)|0,c=(c=c+Math.imul(s2,N2)|0)+Math.imul(h2,o3)|0,P=P+Math.imul(h2,N2)|0,r=r+Math.imul(l2,I3)|0,c=(c=c+Math.imul(l2,r3)|0)+Math.imul(n2,I3)|0,P=P+Math.imul(n2,r3)|0,r=r+Math.imul(j,T3)|0,c=(c=c+Math.imul(j,n3)|0)+Math.imul(q,T3)|0,P=P+Math.imul(q,n3)|0,r=r+Math.imul(k,S3)|0,c=(c=c+Math.imul(k,u3)|0)+Math.imul(v,S3)|0,P=P+Math.imul(v,u3)|0,r=r+Math.imul(v2,R3)|0,c=(c=c+Math.imul(v2,t3)|0)+Math.imul(g2,R3)|0,P=P+Math.imul(g2,t3)|0;var L4=(r2+(r=r+Math.imul(Y,A3)|0)|0)+((8191&(c=(c=c+Math.imul(Y,E3)|0)+Math.imul(G,A3)|0))<<13)|0;r2=((P=P+Math.imul(G,E3)|0)+(c>>>13)|0)+(L4>>>26)|0,L4&=67108863,r=Math.imul(I2,o3),c=(c=Math.imul(I2,N2))+Math.imul(T2,o3)|0,P=Math.imul(T2,N2),r=r+Math.imul(s2,I3)|0,c=(c=c+Math.imul(s2,r3)|0)+Math.imul(h2,I3)|0,P=P+Math.imul(h2,r3)|0,r=r+Math.imul(l2,T3)|0,c=(c=c+Math.imul(l2,n3)|0)+Math.imul(n2,T3)|0,P=P+Math.imul(n2,n3)|0,r=r+Math.imul(j,S3)|0,c=(c=c+Math.imul(j,u3)|0)+Math.imul(q,S3)|0,P=P+Math.imul(q,u3)|0,r=r+Math.imul(k,R3)|0,c=(c=c+Math.imul(k,t3)|0)+Math.imul(v,R3)|0,P=P+Math.imul(v,t3)|0;var g3=(r2+(r=r+Math.imul(v2,A3)|0)|0)+((8191&(c=(c=c+Math.imul(v2,E3)|0)+Math.imul(g2,A3)|0))<<13)|0;r2=((P=P+Math.imul(g2,E3)|0)+(c>>>13)|0)+(g3>>>26)|0,g3&=67108863,r=Math.imul(I2,I3),c=(c=Math.imul(I2,r3))+Math.imul(T2,I3)|0,P=Math.imul(T2,r3),r=r+Math.imul(s2,T3)|0,c=(c=c+Math.imul(s2,n3)|0)+Math.imul(h2,T3)|0,P=P+Math.imul(h2,n3)|0,r=r+Math.imul(l2,S3)|0,c=(c=c+Math.imul(l2,u3)|0)+Math.imul(n2,S3)|0,P=P+Math.imul(n2,u3)|0,r=r+Math.imul(j,R3)|0,c=(c=c+Math.imul(j,t3)|0)+Math.imul(q,R3)|0,P=P+Math.imul(q,t3)|0;var p3=(r2+(r=r+Math.imul(k,A3)|0)|0)+((8191&(c=(c=c+Math.imul(k,E3)|0)+Math.imul(v,A3)|0))<<13)|0;r2=((P=P+Math.imul(v,E3)|0)+(c>>>13)|0)+(p3>>>26)|0,p3&=67108863,r=Math.imul(I2,T3),c=(c=Math.imul(I2,n3))+Math.imul(T2,T3)|0,P=Math.imul(T2,n3),r=r+Math.imul(s2,S3)|0,c=(c=c+Math.imul(s2,u3)|0)+Math.imul(h2,S3)|0,P=P+Math.imul(h2,u3)|0,r=r+Math.imul(l2,R3)|0,c=(c=c+Math.imul(l2,t3)|0)+Math.imul(n2,R3)|0,P=P+Math.imul(n2,t3)|0;var C4=(r2+(r=r+Math.imul(j,A3)|0)|0)+((8191&(c=(c=c+Math.imul(j,E3)|0)+Math.imul(q,A3)|0))<<13)|0;r2=((P=P+Math.imul(q,E3)|0)+(c>>>13)|0)+(C4>>>26)|0,C4&=67108863,r=Math.imul(I2,S3),c=(c=Math.imul(I2,u3))+Math.imul(T2,S3)|0,P=Math.imul(T2,u3),r=r+Math.imul(s2,R3)|0,c=(c=c+Math.imul(s2,t3)|0)+Math.imul(h2,R3)|0,P=P+Math.imul(h2,t3)|0;var D4=(r2+(r=r+Math.imul(l2,A3)|0)|0)+((8191&(c=(c=c+Math.imul(l2,E3)|0)+Math.imul(n2,A3)|0))<<13)|0;r2=((P=P+Math.imul(n2,E3)|0)+(c>>>13)|0)+(D4>>>26)|0,D4&=67108863,r=Math.imul(I2,R3),c=(c=Math.imul(I2,t3))+Math.imul(T2,R3)|0,P=Math.imul(T2,t3);var I1=(r2+(r=r+Math.imul(s2,A3)|0)|0)+((8191&(c=(c=c+Math.imul(s2,E3)|0)+Math.imul(h2,A3)|0))<<13)|0;r2=((P=P+Math.imul(h2,E3)|0)+(c>>>13)|0)+(I1>>>26)|0,I1&=67108863;var p1=(r2+(r=Math.imul(I2,A3))|0)+((8191&(c=(c=Math.imul(I2,E3))+Math.imul(T2,A3)|0))<<13)|0;return r2=((P=Math.imul(T2,E3))+(c>>>13)|0)+(p1>>>26)|0,p1&=67108863,o2[0]=v4,o2[1]=y4,o2[2]=w4,o2[3]=E4,o2[4]=I4,o2[5]=B4,o2[6]=T4,o2[7]=p4,o2[8]=k4,o2[9]=R4,o2[10]=O4,o2[11]=P4,o2[12]=L4,o2[13]=g3,o2[14]=p3,o2[15]=C4,o2[16]=D4,o2[17]=I1,o2[18]=p1,r2!==0&&(o2[19]=r2,e.length++),e};function B(u,t,e){e.negative=t.negative^u.negative,e.length=u.length+t.length;for(var r=0,c=0,P=0;P<e.length-1;P++){var K=c;c=0;for(var W=67108863&r,o2=Math.min(P,t.length-1),r2=Math.max(0,P-u.length+1);r2<=o2;r2++){var b2=P-r2,_2=(0|u.words[b2])*(0|t.words[r2]),$=67108863&_2;W=67108863&($=$+W|0),c+=(K=(K=K+(_2/67108864|0)|0)+($>>>26)|0)>>>26,K&=67108863}e.words[P]=W,r=K,K=c}return r!==0?e.words[P]=r:e.length--,e._strip()}function _(u,t,e){return B(u,t,e)}Math.imul||(g=y),i.prototype.mulTo=function(u,t){var e=this.length+u.length;return this.length===10&&u.length===10?g(this,u,t):e<63?y(this,u,t):e<1024?B(this,u,t):_(this,u,t)},i.prototype.mul=function(u){var t=new i(null);return t.words=new Array(this.length+u.length),this.mulTo(u,t)},i.prototype.mulf=function(u){var t=new i(null);return t.words=new Array(this.length+u.length),_(this,u,t)},i.prototype.imul=function(u){return this.clone().mulTo(u,this)},i.prototype.imuln=function(u){var t=u<0;t&&(u=-u),E(typeof u=="number"),E(u<67108864);for(var e=0,r=0;r<this.length;r++){var c=(0|this.words[r])*u,P=(67108863&c)+(67108863&e);e>>=26,e+=c/67108864|0,e+=P>>>26,this.words[r]=67108863&P}return e!==0&&(this.words[r]=e,this.length++),t?this.ineg():this},i.prototype.muln=function(u){return this.clone().imuln(u)},i.prototype.sqr=function(){return this.mul(this)},i.prototype.isqr=function(){return this.imul(this.clone())},i.prototype.pow=function(u){var t=function(P){for(var K=new Array(P.bitLength()),W=0;W<K.length;W++){var o2=W/26|0,r2=W%26;K[W]=P.words[o2]>>>r2&1}return K}(u);if(t.length===0)return new i(1);for(var e=this,r=0;r<t.length&&t[r]===0;r++,e=e.sqr());if(++r<t.length)for(var c=e.sqr();r<t.length;r++,c=c.sqr())t[r]!==0&&(e=e.mul(c));return e},i.prototype.iushln=function(u){E(typeof u=="number"&&u>=0);var t,e=u%26,r=(u-e)/26,c=67108863>>>26-e<<26-e;if(e!==0){var P=0;for(t=0;t<this.length;t++){var K=this.words[t]&c,W=(0|this.words[t])-K<<e;this.words[t]=W|P,P=K>>>26-e}P&&(this.words[t]=P,this.length++)}if(r!==0){for(t=this.length-1;t>=0;t--)this.words[t+r]=this.words[t];for(t=0;t<r;t++)this.words[t]=0;this.length+=r}return this._strip()},i.prototype.ishln=function(u){return E(this.negative===0),this.iushln(u)},i.prototype.iushrn=function(u,t,e){var r;E(typeof u=="number"&&u>=0),r=t?(t-t%26)/26:0;var c=u%26,P=Math.min((u-c)/26,this.length),K=67108863^67108863>>>c<<c,W=e;if(r-=P,r=Math.max(0,r),W){for(var o2=0;o2<P;o2++)W.words[o2]=this.words[o2];W.length=P}if(P!==0)if(this.length>P)for(this.length-=P,o2=0;o2<this.length;o2++)this.words[o2]=this.words[o2+P];else this.words[0]=0,this.length=1;var r2=0;for(o2=this.length-1;o2>=0&&(r2!==0||o2>=r);o2--){var b2=0|this.words[o2];this.words[o2]=r2<<26-c|b2>>>c,r2=b2&K}return W&&r2!==0&&(W.words[W.length++]=r2),this.length===0&&(this.words[0]=0,this.length=1),this._strip()},i.prototype.ishrn=function(u,t,e){return E(this.negative===0),this.iushrn(u,t,e)},i.prototype.shln=function(u){return this.clone().ishln(u)},i.prototype.ushln=function(u){return this.clone().iushln(u)},i.prototype.shrn=function(u){return this.clone().ishrn(u)},i.prototype.ushrn=function(u){return this.clone().iushrn(u)},i.prototype.testn=function(u){E(typeof u=="number"&&u>=0);var t=u%26,e=(u-t)/26,r=1<<t;return!(this.length<=e||!(this.words[e]&r))},i.prototype.imaskn=function(u){E(typeof u=="number"&&u>=0);var t=u%26,e=(u-t)/26;if(E(this.negative===0,"imaskn works only with positive numbers"),this.length<=e)return this;if(t!==0&&e++,this.length=Math.min(e,this.length),t!==0){var r=67108863^67108863>>>t<<t;this.words[this.length-1]&=r}return this._strip()},i.prototype.maskn=function(u){return this.clone().imaskn(u)},i.prototype.iaddn=function(u){return E(typeof u=="number"),E(u<67108864),u<0?this.isubn(-u):this.negative!==0?this.length===1&&(0|this.words[0])<=u?(this.words[0]=u-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(u),this.negative=1,this):this._iaddn(u)},i.prototype._iaddn=function(u){this.words[0]+=u;for(var t=0;t<this.length&&this.words[t]>=67108864;t++)this.words[t]-=67108864,t===this.length-1?this.words[t+1]=1:this.words[t+1]++;return this.length=Math.max(this.length,t+1),this},i.prototype.isubn=function(u){if(E(typeof u=="number"),E(u<67108864),u<0)return this.iaddn(-u);if(this.negative!==0)return this.negative=0,this.iaddn(u),this.negative=1,this;if(this.words[0]-=u,this.length===1&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var t=0;t<this.length&&this.words[t]<0;t++)this.words[t]+=67108864,this.words[t+1]-=1;return this._strip()},i.prototype.addn=function(u){return this.clone().iaddn(u)},i.prototype.subn=function(u){return this.clone().isubn(u)},i.prototype.iabs=function(){return this.negative=0,this},i.prototype.abs=function(){return this.clone().iabs()},i.prototype._ishlnsubmul=function(u,t,e){var r,c,P=u.length+e;this._expand(P);var K=0;for(r=0;r<u.length;r++){c=(0|this.words[r+e])+K;var W=(0|u.words[r])*t;K=((c-=67108863&W)>>26)-(W/67108864|0),this.words[r+e]=67108863&c}for(;r<this.length-e;r++)K=(c=(0|this.words[r+e])+K)>>26,this.words[r+e]=67108863&c;if(K===0)return this._strip();for(E(K===-1),K=0,r=0;r<this.length;r++)K=(c=-(0|this.words[r])+K)>>26,this.words[r]=67108863&c;return this.negative=1,this._strip()},i.prototype._wordDiv=function(u,t){var e=(this.length,u.length),r=this.clone(),c=u,P=0|c.words[c.length-1];(e=26-this._countBits(P))!=0&&(c=c.ushln(e),r.iushln(e),P=0|c.words[c.length-1]);var K,W=r.length-c.length;if(t!=="mod"){(K=new i(null)).length=W+1,K.words=new Array(K.length);for(var o2=0;o2<K.length;o2++)K.words[o2]=0}var r2=r.clone()._ishlnsubmul(c,1,W);r2.negative===0&&(r=r2,K&&(K.words[W]=1));for(var b2=W-1;b2>=0;b2--){var _2=67108864*(0|r.words[c.length+b2])+(0|r.words[c.length+b2-1]);for(_2=Math.min(_2/P|0,67108863),r._ishlnsubmul(c,_2,b2);r.negative!==0;)_2--,r.negative=0,r._ishlnsubmul(c,1,b2),r.isZero()||(r.negative^=1);K&&(K.words[b2]=_2)}return K&&K._strip(),r._strip(),t!=="div"&&e!==0&&r.iushrn(e),{div:K||null,mod:r}},i.prototype.divmod=function(u,t,e){return E(!u.isZero()),this.isZero()?{div:new i(0),mod:new i(0)}:this.negative!==0&&u.negative===0?(P=this.neg().divmod(u,t),t!=="mod"&&(r=P.div.neg()),t!=="div"&&(c=P.mod.neg(),e&&c.negative!==0&&c.iadd(u)),{div:r,mod:c}):this.negative===0&&u.negative!==0?(P=this.divmod(u.neg(),t),t!=="mod"&&(r=P.div.neg()),{div:r,mod:P.mod}):this.negative&u.negative?(P=this.neg().divmod(u.neg(),t),t!=="div"&&(c=P.mod.neg(),e&&c.negative!==0&&c.isub(u)),{div:P.div,mod:c}):u.length>this.length||this.cmp(u)<0?{div:new i(0),mod:this}:u.length===1?t==="div"?{div:this.divn(u.words[0]),mod:null}:t==="mod"?{div:null,mod:new i(this.modrn(u.words[0]))}:{div:this.divn(u.words[0]),mod:new i(this.modrn(u.words[0]))}:this._wordDiv(u,t);var r,c,P},i.prototype.div=function(u){return this.divmod(u,"div",!1).div},i.prototype.mod=function(u){return this.divmod(u,"mod",!1).mod},i.prototype.umod=function(u){return this.divmod(u,"mod",!0).mod},i.prototype.divRound=function(u){var t=this.divmod(u);if(t.mod.isZero())return t.div;var e=t.div.negative!==0?t.mod.isub(u):t.mod,r=u.ushrn(1),c=u.andln(1),P=e.cmp(r);return P<0||c===1&&P===0?t.div:t.div.negative!==0?t.div.isubn(1):t.div.iaddn(1)},i.prototype.modrn=function(u){var t=u<0;t&&(u=-u),E(u<=67108863);for(var e=67108864%u,r=0,c=this.length-1;c>=0;c--)r=(e*r+(0|this.words[c]))%u;return t?-r:r},i.prototype.modn=function(u){return this.modrn(u)},i.prototype.idivn=function(u){var t=u<0;t&&(u=-u),E(u<=67108863);for(var e=0,r=this.length-1;r>=0;r--){var c=(0|this.words[r])+67108864*e;this.words[r]=c/u|0,e=c%u}return this._strip(),t?this.ineg():this},i.prototype.divn=function(u){return this.clone().idivn(u)},i.prototype.egcd=function(u){E(u.negative===0),E(!u.isZero());var t=this,e=u.clone();t=t.negative!==0?t.umod(u):t.clone();for(var r=new i(1),c=new i(0),P=new i(0),K=new i(1),W=0;t.isEven()&&e.isEven();)t.iushrn(1),e.iushrn(1),++W;for(var o2=e.clone(),r2=t.clone();!t.isZero();){for(var b2=0,_2=1;!(t.words[0]&_2)&&b2<26;++b2,_2<<=1);if(b2>0)for(t.iushrn(b2);b2-- >0;)(r.isOdd()||c.isOdd())&&(r.iadd(o2),c.isub(r2)),r.iushrn(1),c.iushrn(1);for(var $=0,Z=1;!(e.words[0]&Z)&&$<26;++$,Z<<=1);if($>0)for(e.iushrn($);$-- >0;)(P.isOdd()||K.isOdd())&&(P.iadd(o2),K.isub(r2)),P.iushrn(1),K.iushrn(1);t.cmp(e)>=0?(t.isub(e),r.isub(P),c.isub(K)):(e.isub(t),P.isub(r),K.isub(c))}return{a:P,b:K,gcd:e.iushln(W)}},i.prototype._invmp=function(u){E(u.negative===0),E(!u.isZero());var t=this,e=u.clone();t=t.negative!==0?t.umod(u):t.clone();for(var r,c=new i(1),P=new i(0),K=e.clone();t.cmpn(1)>0&&e.cmpn(1)>0;){for(var W=0,o2=1;!(t.words[0]&o2)&&W<26;++W,o2<<=1);if(W>0)for(t.iushrn(W);W-- >0;)c.isOdd()&&c.iadd(K),c.iushrn(1);for(var r2=0,b2=1;!(e.words[0]&b2)&&r2<26;++r2,b2<<=1);if(r2>0)for(e.iushrn(r2);r2-- >0;)P.isOdd()&&P.iadd(K),P.iushrn(1);t.cmp(e)>=0?(t.isub(e),c.isub(P)):(e.isub(t),P.isub(c))}return(r=t.cmpn(1)===0?c:P).cmpn(0)<0&&r.iadd(u),r},i.prototype.gcd=function(u){if(this.isZero())return u.abs();if(u.isZero())return this.abs();var t=this.clone(),e=u.clone();t.negative=0,e.negative=0;for(var r=0;t.isEven()&&e.isEven();r++)t.iushrn(1),e.iushrn(1);for(;;){for(;t.isEven();)t.iushrn(1);for(;e.isEven();)e.iushrn(1);var c=t.cmp(e);if(c<0){var P=t;t=e,e=P}else if(c===0||e.cmpn(1)===0)break;t.isub(e)}return e.iushln(r)},i.prototype.invm=function(u){return this.egcd(u).a.umod(u)},i.prototype.isEven=function(){return(1&this.words[0])==0},i.prototype.isOdd=function(){return(1&this.words[0])==1},i.prototype.andln=function(u){return this.words[0]&u},i.prototype.bincn=function(u){E(typeof u=="number");var t=u%26,e=(u-t)/26,r=1<<t;if(this.length<=e)return this._expand(e+1),this.words[e]|=r,this;for(var c=r,P=e;c!==0&&P<this.length;P++){var K=0|this.words[P];c=(K+=c)>>>26,K&=67108863,this.words[P]=K}return c!==0&&(this.words[P]=c,this.length++),this},i.prototype.isZero=function(){return this.length===1&&this.words[0]===0},i.prototype.cmpn=function(u){var t,e=u<0;if(this.negative!==0&&!e)return-1;if(this.negative===0&&e)return 1;if(this._strip(),this.length>1)t=1;else{e&&(u=-u),E(u<=67108863,"Number is too big");var r=0|this.words[0];t=r===u?0:r<u?-1:1}return this.negative!==0?0|-t:t},i.prototype.cmp=function(u){if(this.negative!==0&&u.negative===0)return-1;if(this.negative===0&&u.negative!==0)return 1;var t=this.ucmp(u);return this.negative!==0?0|-t:t},i.prototype.ucmp=function(u){if(this.length>u.length)return 1;if(this.length<u.length)return-1;for(var t=0,e=this.length-1;e>=0;e--){var r=0|this.words[e],c=0|u.words[e];if(r!==c){r<c?t=-1:r>c&&(t=1);break}}return t},i.prototype.gtn=function(u){return this.cmpn(u)===1},i.prototype.gt=function(u){return this.cmp(u)===1},i.prototype.gten=function(u){return this.cmpn(u)>=0},i.prototype.gte=function(u){return this.cmp(u)>=0},i.prototype.ltn=function(u){return this.cmpn(u)===-1},i.prototype.lt=function(u){return this.cmp(u)===-1},i.prototype.lten=function(u){return this.cmpn(u)<=0},i.prototype.lte=function(u){return this.cmp(u)<=0},i.prototype.eqn=function(u){return this.cmpn(u)===0},i.prototype.eq=function(u){return this.cmp(u)===0},i.red=function(u){return new d(u)},i.prototype.toRed=function(u){return E(!this.red,"Already a number in reduction context"),E(this.negative===0,"red works only with positives"),u.convertTo(this)._forceRed(u)},i.prototype.fromRed=function(){return E(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},i.prototype._forceRed=function(u){return this.red=u,this},i.prototype.forceRed=function(u){return E(!this.red,"Already a number in reduction context"),this._forceRed(u)},i.prototype.redAdd=function(u){return E(this.red,"redAdd works only with red numbers"),this.red.add(this,u)},i.prototype.redIAdd=function(u){return E(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,u)},i.prototype.redSub=function(u){return E(this.red,"redSub works only with red numbers"),this.red.sub(this,u)},i.prototype.redISub=function(u){return E(this.red,"redISub works only with red numbers"),this.red.isub(this,u)},i.prototype.redShl=function(u){return E(this.red,"redShl works only with red numbers"),this.red.shl(this,u)},i.prototype.redMul=function(u){return E(this.red,"redMul works only with red numbers"),this.red._verify2(this,u),this.red.mul(this,u)},i.prototype.redIMul=function(u){return E(this.red,"redMul works only with red numbers"),this.red._verify2(this,u),this.red.imul(this,u)},i.prototype.redSqr=function(){return E(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},i.prototype.redISqr=function(){return E(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},i.prototype.redSqrt=function(){return E(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},i.prototype.redInvm=function(){return E(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},i.prototype.redNeg=function(){return E(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},i.prototype.redPow=function(u){return E(this.red&&!u.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,u)};var L={k256:null,p224:null,p192:null,p25519:null};function N(u,t){this.name=u,this.p=new i(t,16),this.n=this.p.bitLength(),this.k=new i(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function F(){N.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function z(){N.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function Q(){N.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function c2(){N.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function d(u){if(typeof u=="string"){var t=i._prime(u);this.m=t.p,this.prime=t}else E(u.gtn(1),"modulus must be greater than 1"),this.m=u,this.prime=null}function T(u){d.call(this,u),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new i(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}N.prototype._tmp=function(){var u=new i(null);return u.words=new Array(Math.ceil(this.n/13)),u},N.prototype.ireduce=function(u){var t,e=u;do this.split(e,this.tmp),t=(e=(e=this.imulK(e)).iadd(this.tmp)).bitLength();while(t>this.n);var r=t<this.n?-1:e.ucmp(this.p);return r===0?(e.words[0]=0,e.length=1):r>0?e.isub(this.p):e.strip!==void 0?e.strip():e._strip(),e},N.prototype.split=function(u,t){u.iushrn(this.n,0,t)},N.prototype.imulK=function(u){return u.imul(this.k)},I(F,N),F.prototype.split=function(u,t){for(var e=4194303,r=Math.min(u.length,9),c=0;c<r;c++)t.words[c]=u.words[c];if(t.length=r,u.length<=9)return u.words[0]=0,void(u.length=1);var P=u.words[9];for(t.words[t.length++]=P&e,c=10;c<u.length;c++){var K=0|u.words[c];u.words[c-10]=(K&e)<<4|P>>>22,P=K}P>>>=22,u.words[c-10]=P,P===0&&u.length>10?u.length-=10:u.length-=9},F.prototype.imulK=function(u){u.words[u.length]=0,u.words[u.length+1]=0,u.length+=2;for(var t=0,e=0;e<u.length;e++){var r=0|u.words[e];t+=977*r,u.words[e]=67108863&t,t=64*r+(t/67108864|0)}return u.words[u.length-1]===0&&(u.length--,u.words[u.length-1]===0&&u.length--),u},I(z,N),I(Q,N),I(c2,N),c2.prototype.imulK=function(u){for(var t=0,e=0;e<u.length;e++){var r=19*(0|u.words[e])+t,c=67108863&r;r>>>=26,u.words[e]=c,t=r}return t!==0&&(u.words[u.length++]=t),u},i._prime=function(u){if(L[u])return L[u];var t;if(u==="k256")t=new F;else if(u==="p224")t=new z;else if(u==="p192")t=new Q;else{if(u!=="p25519")throw new Error("Unknown prime "+u);t=new c2}return L[u]=t,t},d.prototype._verify1=function(u){E(u.negative===0,"red works only with positives"),E(u.red,"red works only with red numbers")},d.prototype._verify2=function(u,t){E((u.negative|t.negative)==0,"red works only with positives"),E(u.red&&u.red===t.red,"red works only with red numbers")},d.prototype.imod=function(u){return this.prime?this.prime.ireduce(u)._forceRed(this):(s(u,u.umod(this.m)._forceRed(this)),u)},d.prototype.neg=function(u){return u.isZero()?u.clone():this.m.sub(u)._forceRed(this)},d.prototype.add=function(u,t){this._verify2(u,t);var e=u.add(t);return e.cmp(this.m)>=0&&e.isub(this.m),e._forceRed(this)},d.prototype.iadd=function(u,t){this._verify2(u,t);var e=u.iadd(t);return e.cmp(this.m)>=0&&e.isub(this.m),e},d.prototype.sub=function(u,t){this._verify2(u,t);var e=u.sub(t);return e.cmpn(0)<0&&e.iadd(this.m),e._forceRed(this)},d.prototype.isub=function(u,t){this._verify2(u,t);var e=u.isub(t);return e.cmpn(0)<0&&e.iadd(this.m),e},d.prototype.shl=function(u,t){return this._verify1(u),this.imod(u.ushln(t))},d.prototype.imul=function(u,t){return this._verify2(u,t),this.imod(u.imul(t))},d.prototype.mul=function(u,t){return this._verify2(u,t),this.imod(u.mul(t))},d.prototype.isqr=function(u){return this.imul(u,u.clone())},d.prototype.sqr=function(u){return this.mul(u,u)},d.prototype.sqrt=function(u){if(u.isZero())return u.clone();var t=this.m.andln(3);if(E(t%2==1),t===3){var e=this.m.add(new i(1)).iushrn(2);return this.pow(u,e)}for(var r=this.m.subn(1),c=0;!r.isZero()&&r.andln(1)===0;)c++,r.iushrn(1);E(!r.isZero());var P=new i(1).toRed(this),K=P.redNeg(),W=this.m.subn(1).iushrn(1),o2=this.m.bitLength();for(o2=new i(2*o2*o2).toRed(this);this.pow(o2,W).cmp(K)!==0;)o2.redIAdd(K);for(var r2=this.pow(o2,r),b2=this.pow(u,r.addn(1).iushrn(1)),_2=this.pow(u,r),$=c;_2.cmp(P)!==0;){for(var Z=_2,p2=0;Z.cmp(P)!==0;p2++)Z=Z.redSqr();E(p2<$);var w2=this.pow(r2,new i(1).iushln($-p2-1));b2=b2.redMul(w2),r2=w2.redSqr(),_2=_2.redMul(r2),$=p2}return b2},d.prototype.invm=function(u){var t=u._invmp(this.m);return t.negative!==0?(t.negative=0,this.imod(t).redNeg()):this.imod(t)},d.prototype.pow=function(u,t){if(t.isZero())return new i(1).toRed(this);if(t.cmpn(1)===0)return u.clone();var e=new Array(16);e[0]=new i(1).toRed(this),e[1]=u;for(var r=2;r<e.length;r++)e[r]=this.mul(e[r-1],u);var c=e[0],P=0,K=0,W=t.bitLength()%26;for(W===0&&(W=26),r=t.length-1;r>=0;r--){for(var o2=t.words[r],r2=W-1;r2>=0;r2--){var b2=o2>>r2&1;c!==e[0]&&(c=this.sqr(c)),b2!==0||P!==0?(P<<=1,P|=b2,(++K==4||r===0&&r2===0)&&(c=this.mul(c,e[P]),K=0,P=0)):K=0}W=26}return c},d.prototype.convertTo=function(u){var t=u.umod(this.m);return t===u?t.clone():t},d.prototype.convertFrom=function(u){var t=u.clone();return t.red=null,t},i.mont=function(u){return new T(u)},I(T,d),T.prototype.convertTo=function(u){return this.imod(u.ushln(this.shift))},T.prototype.convertFrom=function(u){var t=this.imod(u.mul(this.rinv));return t.red=null,t},T.prototype.imul=function(u,t){if(u.isZero()||t.isZero())return u.words[0]=0,u.length=1,u;var e=u.imul(t),r=e.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),c=e.isub(r).iushrn(this.shift),P=c;return c.cmp(this.m)>=0?P=c.isub(this.m):c.cmpn(0)<0&&(P=c.iadd(this.m)),P._forceRed(this)},T.prototype.mul=function(u,t){if(u.isZero()||t.isZero())return new i(0)._forceRed(this);var e=u.mul(t),r=e.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),c=e.isub(r).iushrn(this.shift),P=c;return c.cmp(this.m)>=0?P=c.isub(this.m):c.cmpn(0)<0&&(P=c.iadd(this.m)),P._forceRed(this)},T.prototype.invm=function(u){return this.imod(u._invmp(this.m).mul(this.r2))._forceRed(this)}})(u2=A.nmd(u2),this)},9931:(u2,O,A)=>{var C;function b(I){this.rand=I}if(u2.exports=function(I){return C||(C=new b(null)),C.generate(I)},u2.exports.Rand=b,b.prototype.generate=function(I){return this._rand(I)},b.prototype._rand=function(I){if(this.rand.getBytes)return this.rand.getBytes(I);for(var i=new Uint8Array(I),M=0;M<i.length;M++)i[M]=this.rand.getByte();return i},typeof self=="object")self.crypto&&self.crypto.getRandomValues?b.prototype._rand=function(I){var i=new Uint8Array(I);return self.crypto.getRandomValues(i),i}:self.msCrypto&&self.msCrypto.getRandomValues?b.prototype._rand=function(I){var i=new Uint8Array(I);return self.msCrypto.getRandomValues(i),i}:typeof window=="object"&&(b.prototype._rand=function(){throw new Error("Not implemented yet")});else try{var E=A(9214);if(typeof E.randomBytes!="function")throw new Error("Not supported");b.prototype._rand=function(I){return E.randomBytes(I)}}catch{}},7191:(u2,O,A)=>{const C=A(8162);u2.exports=C("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz")},8764:(u2,O,A)=>{const C=A(9742),b=A(645),E=typeof Symbol=="function"&&typeof Symbol.for=="function"?Symbol.for("nodejs.util.inspect.custom"):null;O.Buffer=M,O.SlowBuffer=function(w){return+w!=w&&(w=0),M.alloc(+w)},O.INSPECT_MAX_BYTES=50;const I=2147483647;function i(w){if(w>I)throw new RangeError('The value "'+w+'" is invalid for option "size"');const k=new Uint8Array(w);return Object.setPrototypeOf(k,M.prototype),k}function M(w,k,v){if(typeof w=="number"){if(typeof k=="string")throw new TypeError('The "string" argument must be of type string. Received type number');return o(w)}return h(w,k,v)}function h(w,k,v){if(typeof w=="string")return function(q,V){if(typeof V=="string"&&V!==""||(V="utf8"),!M.isEncoding(V))throw new TypeError("Unknown encoding: "+V);const l2=0|S(q,V);let n2=i(l2);const t2=n2.write(q,V);return t2!==l2&&(n2=n2.slice(0,t2)),n2}(w,k);if(ArrayBuffer.isView(w))return function(q){if(Y(q,Uint8Array)){const V=new Uint8Array(q);return m(V.buffer,V.byteOffset,V.byteLength)}return s(q)}(w);if(w==null)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof w);if(Y(w,ArrayBuffer)||w&&Y(w.buffer,ArrayBuffer)||typeof SharedArrayBuffer<"u"&&(Y(w,SharedArrayBuffer)||w&&Y(w.buffer,SharedArrayBuffer)))return m(w,k,v);if(typeof w=="number")throw new TypeError('The "value" argument must not be of type number. Received type number');const D=w.valueOf&&w.valueOf();if(D!=null&&D!==w)return M.from(D,k,v);const j=function(q){if(M.isBuffer(q)){const V=0|x(q.length),l2=i(V);return l2.length===0||q.copy(l2,0,0,V),l2}return q.length!==void 0?typeof q.length!="number"||G(q.length)?i(0):s(q):q.type==="Buffer"&&Array.isArray(q.data)?s(q.data):void 0}(w);if(j)return j;if(typeof Symbol<"u"&&Symbol.toPrimitive!=null&&typeof w[Symbol.toPrimitive]=="function")return M.from(w[Symbol.toPrimitive]("string"),k,v);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof w)}function a(w){if(typeof w!="number")throw new TypeError('"size" argument must be of type number');if(w<0)throw new RangeError('The value "'+w+'" is invalid for option "size"')}function o(w){return a(w),i(w<0?0:0|x(w))}function s(w){const k=w.length<0?0:0|x(w.length),v=i(k);for(let D=0;D<k;D+=1)v[D]=255&w[D];return v}function m(w,k,v){if(k<0||w.byteLength<k)throw new RangeError('"offset" is outside of buffer bounds');if(w.byteLength<k+(v||0))throw new RangeError('"length" is outside of buffer bounds');let D;return D=k===void 0&&v===void 0?new Uint8Array(w):v===void 0?new Uint8Array(w,k):new Uint8Array(w,k,v),Object.setPrototypeOf(D,M.prototype),D}function x(w){if(w>=I)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+I.toString(16)+" bytes");return 0|w}function S(w,k){if(M.isBuffer(w))return w.length;if(ArrayBuffer.isView(w)||Y(w,ArrayBuffer))return w.byteLength;if(typeof w!="string")throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof w);const v=w.length,D=arguments.length>2&&arguments[2]===!0;if(!D&&v===0)return 0;let j=!1;for(;;)switch(k){case"ascii":case"latin1":case"binary":return v;case"utf8":case"utf-8":return P2(w).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*v;case"hex":return v>>>1;case"base64":return J(w).length;default:if(j)return D?-1:P2(w).length;k=(""+k).toLowerCase(),j=!0}}function p(w,k,v){let D=!1;if((k===void 0||k<0)&&(k=0),k>this.length||((v===void 0||v>this.length)&&(v=this.length),v<=0)||(v>>>=0)<=(k>>>=0))return"";for(w||(w="utf8");;)switch(w){case"hex":return t(this,k,v);case"utf8":case"utf-8":return c2(this,k,v);case"ascii":return T(this,k,v);case"latin1":case"binary":return u(this,k,v);case"base64":return Q(this,k,v);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return e(this,k,v);default:if(D)throw new TypeError("Unknown encoding: "+w);w=(w+"").toLowerCase(),D=!0}}function y(w,k,v){const D=w[k];w[k]=w[v],w[v]=D}function g(w,k,v,D,j){if(w.length===0)return-1;if(typeof v=="string"?(D=v,v=0):v>2147483647?v=2147483647:v<-2147483648&&(v=-2147483648),G(v=+v)&&(v=j?0:w.length-1),v<0&&(v=w.length+v),v>=w.length){if(j)return-1;v=w.length-1}else if(v<0){if(!j)return-1;v=0}if(typeof k=="string"&&(k=M.from(k,D)),M.isBuffer(k))return k.length===0?-1:B(w,k,v,D,j);if(typeof k=="number")return k&=255,typeof Uint8Array.prototype.indexOf=="function"?j?Uint8Array.prototype.indexOf.call(w,k,v):Uint8Array.prototype.lastIndexOf.call(w,k,v):B(w,[k],v,D,j);throw new TypeError("val must be string, number or Buffer")}function B(w,k,v,D,j){let q,V=1,l2=w.length,n2=k.length;if(D!==void 0&&((D=String(D).toLowerCase())==="ucs2"||D==="ucs-2"||D==="utf16le"||D==="utf-16le")){if(w.length<2||k.length<2)return-1;V=2,l2/=2,n2/=2,v/=2}function t2(s2,h2){return V===1?s2[h2]:s2.readUInt16BE(h2*V)}if(j){let s2=-1;for(q=v;q<l2;q++)if(t2(w,q)===t2(k,s2===-1?0:q-s2)){if(s2===-1&&(s2=q),q-s2+1===n2)return s2*V}else s2!==-1&&(q-=q-s2),s2=-1}else for(v+n2>l2&&(v=l2-n2),q=v;q>=0;q--){let s2=!0;for(let h2=0;h2<n2;h2++)if(t2(w,q+h2)!==t2(k,h2)){s2=!1;break}if(s2)return q}return-1}function _(w,k,v,D){v=Number(v)||0;const j=w.length-v;D?(D=Number(D))>j&&(D=j):D=j;const q=k.length;let V;for(D>q/2&&(D=q/2),V=0;V<D;++V){const l2=parseInt(k.substr(2*V,2),16);if(G(l2))return V;w[v+V]=l2}return V}function L(w,k,v,D){return a2(P2(k,w.length-v),w,v,D)}function N(w,k,v,D){return a2(function(j){const q=[];for(let V=0;V<j.length;++V)q.push(255&j.charCodeAt(V));return q}(k),w,v,D)}function F(w,k,v,D){return a2(J(k),w,v,D)}function z(w,k,v,D){return a2(function(j,q){let V,l2,n2;const t2=[];for(let s2=0;s2<j.length&&!((q-=2)<0);++s2)V=j.charCodeAt(s2),l2=V>>8,n2=V%256,t2.push(n2),t2.push(l2);return t2}(k,w.length-v),w,v,D)}function Q(w,k,v){return k===0&&v===w.length?C.fromByteArray(w):C.fromByteArray(w.slice(k,v))}function c2(w,k,v){v=Math.min(w.length,v);const D=[];let j=k;for(;j<v;){const q=w[j];let V=null,l2=q>239?4:q>223?3:q>191?2:1;if(j+l2<=v){let n2,t2,s2,h2;switch(l2){case 1:q<128&&(V=q);break;case 2:n2=w[j+1],(192&n2)==128&&(h2=(31&q)<<6|63&n2,h2>127&&(V=h2));break;case 3:n2=w[j+1],t2=w[j+2],(192&n2)==128&&(192&t2)==128&&(h2=(15&q)<<12|(63&n2)<<6|63&t2,h2>2047&&(h2<55296||h2>57343)&&(V=h2));break;case 4:n2=w[j+1],t2=w[j+2],s2=w[j+3],(192&n2)==128&&(192&t2)==128&&(192&s2)==128&&(h2=(15&q)<<18|(63&n2)<<12|(63&t2)<<6|63&s2,h2>65535&&h2<1114112&&(V=h2))}}V===null?(V=65533,l2=1):V>65535&&(V-=65536,D.push(V>>>10&1023|55296),V=56320|1023&V),D.push(V),j+=l2}return function(q){const V=q.length;if(V<=d)return String.fromCharCode.apply(String,q);let l2="",n2=0;for(;n2<V;)l2+=String.fromCharCode.apply(String,q.slice(n2,n2+=d));return l2}(D)}O.kMaxLength=I,M.TYPED_ARRAY_SUPPORT=function(){try{const w=new Uint8Array(1),k={foo:function(){return 42}};return Object.setPrototypeOf(k,Uint8Array.prototype),Object.setPrototypeOf(w,k),w.foo()===42}catch{return!1}}(),M.TYPED_ARRAY_SUPPORT||typeof console>"u"||typeof console.error!="function"||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(M.prototype,"parent",{enumerable:!0,get:function(){if(M.isBuffer(this))return this.buffer}}),Object.defineProperty(M.prototype,"offset",{enumerable:!0,get:function(){if(M.isBuffer(this))return this.byteOffset}}),M.poolSize=8192,M.from=function(w,k,v){return h(w,k,v)},Object.setPrototypeOf(M.prototype,Uint8Array.prototype),Object.setPrototypeOf(M,Uint8Array),M.alloc=function(w,k,v){return function(D,j,q){return a(D),D<=0?i(D):j!==void 0?typeof q=="string"?i(D).fill(j,q):i(D).fill(j):i(D)}(w,k,v)},M.allocUnsafe=function(w){return o(w)},M.allocUnsafeSlow=function(w){return o(w)},M.isBuffer=function(w){return w!=null&&w._isBuffer===!0&&w!==M.prototype},M.compare=function(w,k){if(Y(w,Uint8Array)&&(w=M.from(w,w.offset,w.byteLength)),Y(k,Uint8Array)&&(k=M.from(k,k.offset,k.byteLength)),!M.isBuffer(w)||!M.isBuffer(k))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(w===k)return 0;let v=w.length,D=k.length;for(let j=0,q=Math.min(v,D);j<q;++j)if(w[j]!==k[j]){v=w[j],D=k[j];break}return v<D?-1:D<v?1:0},M.isEncoding=function(w){switch(String(w).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},M.concat=function(w,k){if(!Array.isArray(w))throw new TypeError('"list" argument must be an Array of Buffers');if(w.length===0)return M.alloc(0);let v;if(k===void 0)for(k=0,v=0;v<w.length;++v)k+=w[v].length;const D=M.allocUnsafe(k);let j=0;for(v=0;v<w.length;++v){let q=w[v];if(Y(q,Uint8Array))j+q.length>D.length?(M.isBuffer(q)||(q=M.from(q)),q.copy(D,j)):Uint8Array.prototype.set.call(D,q,j);else{if(!M.isBuffer(q))throw new TypeError('"list" argument must be an Array of Buffers');q.copy(D,j)}j+=q.length}return D},M.byteLength=S,M.prototype._isBuffer=!0,M.prototype.swap16=function(){const w=this.length;if(w%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let k=0;k<w;k+=2)y(this,k,k+1);return this},M.prototype.swap32=function(){const w=this.length;if(w%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let k=0;k<w;k+=4)y(this,k,k+3),y(this,k+1,k+2);return this},M.prototype.swap64=function(){const w=this.length;if(w%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let k=0;k<w;k+=8)y(this,k,k+7),y(this,k+1,k+6),y(this,k+2,k+5),y(this,k+3,k+4);return this},M.prototype.toString=function(){const w=this.length;return w===0?"":arguments.length===0?c2(this,0,w):p.apply(this,arguments)},M.prototype.toLocaleString=M.prototype.toString,M.prototype.equals=function(w){if(!M.isBuffer(w))throw new TypeError("Argument must be a Buffer");return this===w||M.compare(this,w)===0},M.prototype.inspect=function(){let w="";const k=O.INSPECT_MAX_BYTES;return w=this.toString("hex",0,k).replace(/(.{2})/g,"$1 ").trim(),this.length>k&&(w+=" ... "),"<Buffer "+w+">"},E&&(M.prototype[E]=M.prototype.inspect),M.prototype.compare=function(w,k,v,D,j){if(Y(w,Uint8Array)&&(w=M.from(w,w.offset,w.byteLength)),!M.isBuffer(w))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof w);if(k===void 0&&(k=0),v===void 0&&(v=w?w.length:0),D===void 0&&(D=0),j===void 0&&(j=this.length),k<0||v>w.length||D<0||j>this.length)throw new RangeError("out of range index");if(D>=j&&k>=v)return 0;if(D>=j)return-1;if(k>=v)return 1;if(this===w)return 0;let q=(j>>>=0)-(D>>>=0),V=(v>>>=0)-(k>>>=0);const l2=Math.min(q,V),n2=this.slice(D,j),t2=w.slice(k,v);for(let s2=0;s2<l2;++s2)if(n2[s2]!==t2[s2]){q=n2[s2],V=t2[s2];break}return q<V?-1:V<q?1:0},M.prototype.includes=function(w,k,v){return this.indexOf(w,k,v)!==-1},M.prototype.indexOf=function(w,k,v){return g(this,w,k,v,!0)},M.prototype.lastIndexOf=function(w,k,v){return g(this,w,k,v,!1)},M.prototype.write=function(w,k,v,D){if(k===void 0)D="utf8",v=this.length,k=0;else if(v===void 0&&typeof k=="string")D=k,v=this.length,k=0;else{if(!isFinite(k))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");k>>>=0,isFinite(v)?(v>>>=0,D===void 0&&(D="utf8")):(D=v,v=void 0)}const j=this.length-k;if((v===void 0||v>j)&&(v=j),w.length>0&&(v<0||k<0)||k>this.length)throw new RangeError("Attempt to write outside buffer bounds");D||(D="utf8");let q=!1;for(;;)switch(D){case"hex":return _(this,w,k,v);case"utf8":case"utf-8":return L(this,w,k,v);case"ascii":case"latin1":case"binary":return N(this,w,k,v);case"base64":return F(this,w,k,v);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return z(this,w,k,v);default:if(q)throw new TypeError("Unknown encoding: "+D);D=(""+D).toLowerCase(),q=!0}},M.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};const d=4096;function T(w,k,v){let D="";v=Math.min(w.length,v);for(let j=k;j<v;++j)D+=String.fromCharCode(127&w[j]);return D}function u(w,k,v){let D="";v=Math.min(w.length,v);for(let j=k;j<v;++j)D+=String.fromCharCode(w[j]);return D}function t(w,k,v){const D=w.length;(!k||k<0)&&(k=0),(!v||v<0||v>D)&&(v=D);let j="";for(let q=k;q<v;++q)j+=i2[w[q]];return j}function e(w,k,v){const D=w.slice(k,v);let j="";for(let q=0;q<D.length-1;q+=2)j+=String.fromCharCode(D[q]+256*D[q+1]);return j}function r(w,k,v){if(w%1!=0||w<0)throw new RangeError("offset is not uint");if(w+k>v)throw new RangeError("Trying to access beyond buffer length")}function c(w,k,v,D,j,q){if(!M.isBuffer(w))throw new TypeError('"buffer" argument must be a Buffer instance');if(k>j||k<q)throw new RangeError('"value" argument is out of bounds');if(v+D>w.length)throw new RangeError("Index out of range")}function P(w,k,v,D,j){Z(k,D,j,w,v,7);let q=Number(k&BigInt(4294967295));w[v++]=q,q>>=8,w[v++]=q,q>>=8,w[v++]=q,q>>=8,w[v++]=q;let V=Number(k>>BigInt(32)&BigInt(4294967295));return w[v++]=V,V>>=8,w[v++]=V,V>>=8,w[v++]=V,V>>=8,w[v++]=V,v}function K(w,k,v,D,j){Z(k,D,j,w,v,7);let q=Number(k&BigInt(4294967295));w[v+7]=q,q>>=8,w[v+6]=q,q>>=8,w[v+5]=q,q>>=8,w[v+4]=q;let V=Number(k>>BigInt(32)&BigInt(4294967295));return w[v+3]=V,V>>=8,w[v+2]=V,V>>=8,w[v+1]=V,V>>=8,w[v]=V,v+8}function W(w,k,v,D,j,q){if(v+D>w.length)throw new RangeError("Index out of range");if(v<0)throw new RangeError("Index out of range")}function o2(w,k,v,D,j){return k=+k,v>>>=0,j||W(w,0,v,4),b.write(w,k,v,D,23,4),v+4}function r2(w,k,v,D,j){return k=+k,v>>>=0,j||W(w,0,v,8),b.write(w,k,v,D,52,8),v+8}M.prototype.slice=function(w,k){const v=this.length;(w=~~w)<0?(w+=v)<0&&(w=0):w>v&&(w=v),(k=k===void 0?v:~~k)<0?(k+=v)<0&&(k=0):k>v&&(k=v),k<w&&(k=w);const D=this.subarray(w,k);return Object.setPrototypeOf(D,M.prototype),D},M.prototype.readUintLE=M.prototype.readUIntLE=function(w,k,v){w>>>=0,k>>>=0,v||r(w,k,this.length);let D=this[w],j=1,q=0;for(;++q<k&&(j*=256);)D+=this[w+q]*j;return D},M.prototype.readUintBE=M.prototype.readUIntBE=function(w,k,v){w>>>=0,k>>>=0,v||r(w,k,this.length);let D=this[w+--k],j=1;for(;k>0&&(j*=256);)D+=this[w+--k]*j;return D},M.prototype.readUint8=M.prototype.readUInt8=function(w,k){return w>>>=0,k||r(w,1,this.length),this[w]},M.prototype.readUint16LE=M.prototype.readUInt16LE=function(w,k){return w>>>=0,k||r(w,2,this.length),this[w]|this[w+1]<<8},M.prototype.readUint16BE=M.prototype.readUInt16BE=function(w,k){return w>>>=0,k||r(w,2,this.length),this[w]<<8|this[w+1]},M.prototype.readUint32LE=M.prototype.readUInt32LE=function(w,k){return w>>>=0,k||r(w,4,this.length),(this[w]|this[w+1]<<8|this[w+2]<<16)+16777216*this[w+3]},M.prototype.readUint32BE=M.prototype.readUInt32BE=function(w,k){return w>>>=0,k||r(w,4,this.length),16777216*this[w]+(this[w+1]<<16|this[w+2]<<8|this[w+3])},M.prototype.readBigUInt64LE=v2(function(w){p2(w>>>=0,"offset");const k=this[w],v=this[w+7];k!==void 0&&v!==void 0||w2(w,this.length-8);const D=k+256*this[++w]+65536*this[++w]+this[++w]*2**24,j=this[++w]+256*this[++w]+65536*this[++w]+v*2**24;return BigInt(D)+(BigInt(j)<<BigInt(32))}),M.prototype.readBigUInt64BE=v2(function(w){p2(w>>>=0,"offset");const k=this[w],v=this[w+7];k!==void 0&&v!==void 0||w2(w,this.length-8);const D=k*2**24+65536*this[++w]+256*this[++w]+this[++w],j=this[++w]*2**24+65536*this[++w]+256*this[++w]+v;return(BigInt(D)<<BigInt(32))+BigInt(j)}),M.prototype.readIntLE=function(w,k,v){w>>>=0,k>>>=0,v||r(w,k,this.length);let D=this[w],j=1,q=0;for(;++q<k&&(j*=256);)D+=this[w+q]*j;return j*=128,D>=j&&(D-=Math.pow(2,8*k)),D},M.prototype.readIntBE=function(w,k,v){w>>>=0,k>>>=0,v||r(w,k,this.length);let D=k,j=1,q=this[w+--D];for(;D>0&&(j*=256);)q+=this[w+--D]*j;return j*=128,q>=j&&(q-=Math.pow(2,8*k)),q},M.prototype.readInt8=function(w,k){return w>>>=0,k||r(w,1,this.length),128&this[w]?-1*(255-this[w]+1):this[w]},M.prototype.readInt16LE=function(w,k){w>>>=0,k||r(w,2,this.length);const v=this[w]|this[w+1]<<8;return 32768&v?4294901760|v:v},M.prototype.readInt16BE=function(w,k){w>>>=0,k||r(w,2,this.length);const v=this[w+1]|this[w]<<8;return 32768&v?4294901760|v:v},M.prototype.readInt32LE=function(w,k){return w>>>=0,k||r(w,4,this.length),this[w]|this[w+1]<<8|this[w+2]<<16|this[w+3]<<24},M.prototype.readInt32BE=function(w,k){return w>>>=0,k||r(w,4,this.length),this[w]<<24|this[w+1]<<16|this[w+2]<<8|this[w+3]},M.prototype.readBigInt64LE=v2(function(w){p2(w>>>=0,"offset");const k=this[w],v=this[w+7];k!==void 0&&v!==void 0||w2(w,this.length-8);const D=this[w+4]+256*this[w+5]+65536*this[w+6]+(v<<24);return(BigInt(D)<<BigInt(32))+BigInt(k+256*this[++w]+65536*this[++w]+this[++w]*16777216)}),M.prototype.readBigInt64BE=v2(function(w){p2(w>>>=0,"offset");const k=this[w],v=this[w+7];k!==void 0&&v!==void 0||w2(w,this.length-8);const D=(k<<24)+65536*this[++w]+256*this[++w]+this[++w];return(BigInt(D)<<BigInt(32))+BigInt(this[++w]*16777216+65536*this[++w]+256*this[++w]+v)}),M.prototype.readFloatLE=function(w,k){return w>>>=0,k||r(w,4,this.length),b.read(this,w,!0,23,4)},M.prototype.readFloatBE=function(w,k){return w>>>=0,k||r(w,4,this.length),b.read(this,w,!1,23,4)},M.prototype.readDoubleLE=function(w,k){return w>>>=0,k||r(w,8,this.length),b.read(this,w,!0,52,8)},M.prototype.readDoubleBE=function(w,k){return w>>>=0,k||r(w,8,this.length),b.read(this,w,!1,52,8)},M.prototype.writeUintLE=M.prototype.writeUIntLE=function(w,k,v,D){w=+w,k>>>=0,v>>>=0,D||c(this,w,k,v,Math.pow(2,8*v)-1,0);let j=1,q=0;for(this[k]=255&w;++q<v&&(j*=256);)this[k+q]=w/j&255;return k+v},M.prototype.writeUintBE=M.prototype.writeUIntBE=function(w,k,v,D){w=+w,k>>>=0,v>>>=0,D||c(this,w,k,v,Math.pow(2,8*v)-1,0);let j=v-1,q=1;for(this[k+j]=255&w;--j>=0&&(q*=256);)this[k+j]=w/q&255;return k+v},M.prototype.writeUint8=M.prototype.writeUInt8=function(w,k,v){return w=+w,k>>>=0,v||c(this,w,k,1,255,0),this[k]=255&w,k+1},M.prototype.writeUint16LE=M.prototype.writeUInt16LE=function(w,k,v){return w=+w,k>>>=0,v||c(this,w,k,2,65535,0),this[k]=255&w,this[k+1]=w>>>8,k+2},M.prototype.writeUint16BE=M.prototype.writeUInt16BE=function(w,k,v){return w=+w,k>>>=0,v||c(this,w,k,2,65535,0),this[k]=w>>>8,this[k+1]=255&w,k+2},M.prototype.writeUint32LE=M.prototype.writeUInt32LE=function(w,k,v){return w=+w,k>>>=0,v||c(this,w,k,4,4294967295,0),this[k+3]=w>>>24,this[k+2]=w>>>16,this[k+1]=w>>>8,this[k]=255&w,k+4},M.prototype.writeUint32BE=M.prototype.writeUInt32BE=function(w,k,v){return w=+w,k>>>=0,v||c(this,w,k,4,4294967295,0),this[k]=w>>>24,this[k+1]=w>>>16,this[k+2]=w>>>8,this[k+3]=255&w,k+4},M.prototype.writeBigUInt64LE=v2(function(w,k=0){return P(this,w,k,BigInt(0),BigInt("0xffffffffffffffff"))}),M.prototype.writeBigUInt64BE=v2(function(w,k=0){return K(this,w,k,BigInt(0),BigInt("0xffffffffffffffff"))}),M.prototype.writeIntLE=function(w,k,v,D){if(w=+w,k>>>=0,!D){const l2=Math.pow(2,8*v-1);c(this,w,k,v,l2-1,-l2)}let j=0,q=1,V=0;for(this[k]=255&w;++j<v&&(q*=256);)w<0&&V===0&&this[k+j-1]!==0&&(V=1),this[k+j]=(w/q>>0)-V&255;return k+v},M.prototype.writeIntBE=function(w,k,v,D){if(w=+w,k>>>=0,!D){const l2=Math.pow(2,8*v-1);c(this,w,k,v,l2-1,-l2)}let j=v-1,q=1,V=0;for(this[k+j]=255&w;--j>=0&&(q*=256);)w<0&&V===0&&this[k+j+1]!==0&&(V=1),this[k+j]=(w/q>>0)-V&255;return k+v},M.prototype.writeInt8=function(w,k,v){return w=+w,k>>>=0,v||c(this,w,k,1,127,-128),w<0&&(w=255+w+1),this[k]=255&w,k+1},M.prototype.writeInt16LE=function(w,k,v){return w=+w,k>>>=0,v||c(this,w,k,2,32767,-32768),this[k]=255&w,this[k+1]=w>>>8,k+2},M.prototype.writeInt16BE=function(w,k,v){return w=+w,k>>>=0,v||c(this,w,k,2,32767,-32768),this[k]=w>>>8,this[k+1]=255&w,k+2},M.prototype.writeInt32LE=function(w,k,v){return w=+w,k>>>=0,v||c(this,w,k,4,2147483647,-2147483648),this[k]=255&w,this[k+1]=w>>>8,this[k+2]=w>>>16,this[k+3]=w>>>24,k+4},M.prototype.writeInt32BE=function(w,k,v){return w=+w,k>>>=0,v||c(this,w,k,4,2147483647,-2147483648),w<0&&(w=4294967295+w+1),this[k]=w>>>24,this[k+1]=w>>>16,this[k+2]=w>>>8,this[k+3]=255&w,k+4},M.prototype.writeBigInt64LE=v2(function(w,k=0){return P(this,w,k,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),M.prototype.writeBigInt64BE=v2(function(w,k=0){return K(this,w,k,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))}),M.prototype.writeFloatLE=function(w,k,v){return o2(this,w,k,!0,v)},M.prototype.writeFloatBE=function(w,k,v){return o2(this,w,k,!1,v)},M.prototype.writeDoubleLE=function(w,k,v){return r2(this,w,k,!0,v)},M.prototype.writeDoubleBE=function(w,k,v){return r2(this,w,k,!1,v)},M.prototype.copy=function(w,k,v,D){if(!M.isBuffer(w))throw new TypeError("argument should be a Buffer");if(v||(v=0),D||D===0||(D=this.length),k>=w.length&&(k=w.length),k||(k=0),D>0&&D<v&&(D=v),D===v||w.length===0||this.length===0)return 0;if(k<0)throw new RangeError("targetStart out of bounds");if(v<0||v>=this.length)throw new RangeError("Index out of range");if(D<0)throw new RangeError("sourceEnd out of bounds");D>this.length&&(D=this.length),w.length-k<D-v&&(D=w.length-k+v);const j=D-v;return this===w&&typeof Uint8Array.prototype.copyWithin=="function"?this.copyWithin(k,v,D):Uint8Array.prototype.set.call(w,this.subarray(v,D),k),j},M.prototype.fill=function(w,k,v,D){if(typeof w=="string"){if(typeof k=="string"?(D=k,k=0,v=this.length):typeof v=="string"&&(D=v,v=this.length),D!==void 0&&typeof D!="string")throw new TypeError("encoding must be a string");if(typeof D=="string"&&!M.isEncoding(D))throw new TypeError("Unknown encoding: "+D);if(w.length===1){const q=w.charCodeAt(0);(D==="utf8"&&q<128||D==="latin1")&&(w=q)}}else typeof w=="number"?w&=255:typeof w=="boolean"&&(w=Number(w));if(k<0||this.length<k||this.length<v)throw new RangeError("Out of range index");if(v<=k)return this;let j;if(k>>>=0,v=v===void 0?this.length:v>>>0,w||(w=0),typeof w=="number")for(j=k;j<v;++j)this[j]=w;else{const q=M.isBuffer(w)?w:M.from(w,D),V=q.length;if(V===0)throw new TypeError('The value "'+w+'" is invalid for argument "value"');for(j=0;j<v-k;++j)this[j+k]=q[j%V]}return this};const b2={};function _2(w,k,v){b2[w]=class extends v{constructor(){super(),Object.defineProperty(this,"message",{value:k.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${w}]`,this.stack,delete this.name}get code(){return w}set code(D){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:D,writable:!0})}toString(){return`${this.name} [${w}]: ${this.message}`}}}function $(w){let k="",v=w.length;const D=w[0]==="-"?1:0;for(;v>=D+4;v-=3)k=`_${w.slice(v-3,v)}${k}`;return`${w.slice(0,v)}${k}`}function Z(w,k,v,D,j,q){if(w>v||w<k){const V=typeof k=="bigint"?"n":"";let l2;throw l2=k===0||k===BigInt(0)?`>= 0${V} and < 2${V} ** ${8*(q+1)}${V}`:`>= -(2${V} ** ${8*(q+1)-1}${V}) and < 2 ** ${8*(q+1)-1}${V}`,new b2.ERR_OUT_OF_RANGE("value",l2,w)}(function(V,l2,n2){p2(l2,"offset"),V[l2]!==void 0&&V[l2+n2]!==void 0||w2(l2,V.length-(n2+1))})(D,j,q)}function p2(w,k){if(typeof w!="number")throw new b2.ERR_INVALID_ARG_TYPE(k,"number",w)}function w2(w,k,v){throw Math.floor(w)!==w?(p2(w,v),new b2.ERR_OUT_OF_RANGE("offset","an integer",w)):k<0?new b2.ERR_BUFFER_OUT_OF_BOUNDS:new b2.ERR_OUT_OF_RANGE("offset",`>= 0 and <= ${k}`,w)}_2("ERR_BUFFER_OUT_OF_BOUNDS",function(w){return w?`${w} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"},RangeError),_2("ERR_INVALID_ARG_TYPE",function(w,k){return`The "${w}" argument must be of type number. Received type ${typeof k}`},TypeError),_2("ERR_OUT_OF_RANGE",function(w,k,v){let D=`The value of "${w}" is out of range.`,j=v;return Number.isInteger(v)&&Math.abs(v)>4294967296?j=$(String(v)):typeof v=="bigint"&&(j=String(v),(v>BigInt(2)**BigInt(32)||v<-(BigInt(2)**BigInt(32)))&&(j=$(j)),j+="n"),D+=` It must be ${k}. Received ${j}`,D},RangeError);const R2=/[^+/0-9A-Za-z-_]/g;function P2(w,k){let v;k=k||1/0;const D=w.length;let j=null;const q=[];for(let V=0;V<D;++V){if(v=w.charCodeAt(V),v>55295&&v<57344){if(!j){if(v>56319){(k-=3)>-1&&q.push(239,191,189);continue}if(V+1===D){(k-=3)>-1&&q.push(239,191,189);continue}j=v;continue}if(v<56320){(k-=3)>-1&&q.push(239,191,189),j=v;continue}v=65536+(j-55296<<10|v-56320)}else j&&(k-=3)>-1&&q.push(239,191,189);if(j=null,v<128){if((k-=1)<0)break;q.push(v)}else if(v<2048){if((k-=2)<0)break;q.push(v>>6|192,63&v|128)}else if(v<65536){if((k-=3)<0)break;q.push(v>>12|224,v>>6&63|128,63&v|128)}else{if(!(v<1114112))throw new Error("Invalid code point");if((k-=4)<0)break;q.push(v>>18|240,v>>12&63|128,v>>6&63|128,63&v|128)}}return q}function J(w){return C.toByteArray(function(k){if((k=(k=k.split("=")[0]).trim().replace(R2,"")).length<2)return"";for(;k.length%4!=0;)k+="=";return k}(w))}function a2(w,k,v,D){let j;for(j=0;j<D&&!(j+v>=k.length||j>=w.length);++j)k[j+v]=w[j];return j}function Y(w,k){return w instanceof k||w!=null&&w.constructor!=null&&w.constructor.name!=null&&w.constructor.name===k.name}function G(w){return w!=w}const i2=function(){const w="0123456789abcdef",k=new Array(256);for(let v=0;v<16;++v){const D=16*v;for(let j=0;j<16;++j)k[D+j]=w[v]+w[j]}return k}();function v2(w){return typeof BigInt>"u"?g2:w}function g2(){throw new Error("BigInt not supported")}},8028:(u2,O,A)=>{var C=A(2318);u2.exports=function(b){return new C().update(b).digest()}},6266:(u2,O,A)=>{var C=O;C.version=A(8597).i8,C.utils=A(953),C.rand=A(9931),C.curve=A(8254),C.curves=A(5427),C.ec=A(7954),C.eddsa=A(5980)},4918:(u2,O,A)=>{var C=A(3785),b=A(953),E=b.getNAF,I=b.getJSF,i=b.assert;function M(a,o){this.type=a,this.p=new C(o.p,16),this.red=o.prime?C.red(o.prime):C.mont(this.p),this.zero=new C(0).toRed(this.red),this.one=new C(1).toRed(this.red),this.two=new C(2).toRed(this.red),this.n=o.n&&new C(o.n,16),this.g=o.g&&this.pointFromJSON(o.g,o.gRed),this._wnafT1=new Array(4),this._wnafT2=new Array(4),this._wnafT3=new Array(4),this._wnafT4=new Array(4),this._bitLength=this.n?this.n.bitLength():0;var s=this.n&&this.p.div(this.n);!s||s.cmpn(100)>0?this.redN=null:(this._maxwellTrick=!0,this.redN=this.n.toRed(this.red))}function h(a,o){this.curve=a,this.type=o,this.precomputed=null}u2.exports=M,M.prototype.point=function(){throw new Error("Not implemented")},M.prototype.validate=function(){throw new Error("Not implemented")},M.prototype._fixedNafMul=function(a,o){i(a.precomputed);var s=a._getDoubles(),m=E(o,1,this._bitLength),x=(1<<s.step+1)-(s.step%2==0?2:1);x/=3;var S,p,y=[];for(S=0;S<m.length;S+=s.step){p=0;for(var g=S+s.step-1;g>=S;g--)p=(p<<1)+m[g];y.push(p)}for(var B=this.jpoint(null,null,null),_=this.jpoint(null,null,null),L=x;L>0;L--){for(S=0;S<y.length;S++)(p=y[S])===L?_=_.mixedAdd(s.points[S]):p===-L&&(_=_.mixedAdd(s.points[S].neg()));B=B.add(_)}return B.toP()},M.prototype._wnafMul=function(a,o){var s=4,m=a._getNAFPoints(s);s=m.wnd;for(var x=m.points,S=E(o,s,this._bitLength),p=this.jpoint(null,null,null),y=S.length-1;y>=0;y--){for(var g=0;y>=0&&S[y]===0;y--)g++;if(y>=0&&g++,p=p.dblp(g),y<0)break;var B=S[y];i(B!==0),p=a.type==="affine"?B>0?p.mixedAdd(x[B-1>>1]):p.mixedAdd(x[-B-1>>1].neg()):B>0?p.add(x[B-1>>1]):p.add(x[-B-1>>1].neg())}return a.type==="affine"?p.toP():p},M.prototype._wnafMulAdd=function(a,o,s,m,x){var S,p,y,g=this._wnafT1,B=this._wnafT2,_=this._wnafT3,L=0;for(S=0;S<m;S++){var N=(y=o[S])._getNAFPoints(a);g[S]=N.wnd,B[S]=N.points}for(S=m-1;S>=1;S-=2){var F=S-1,z=S;if(g[F]===1&&g[z]===1){var Q=[o[F],null,null,o[z]];o[F].y.cmp(o[z].y)===0?(Q[1]=o[F].add(o[z]),Q[2]=o[F].toJ().mixedAdd(o[z].neg())):o[F].y.cmp(o[z].y.redNeg())===0?(Q[1]=o[F].toJ().mixedAdd(o[z]),Q[2]=o[F].add(o[z].neg())):(Q[1]=o[F].toJ().mixedAdd(o[z]),Q[2]=o[F].toJ().mixedAdd(o[z].neg()));var c2=[-3,-1,-5,-7,0,7,5,1,3],d=I(s[F],s[z]);for(L=Math.max(d[0].length,L),_[F]=new Array(L),_[z]=new Array(L),p=0;p<L;p++){var T=0|d[0][p],u=0|d[1][p];_[F][p]=c2[3*(T+1)+(u+1)],_[z][p]=0,B[F]=Q}}else _[F]=E(s[F],g[F],this._bitLength),_[z]=E(s[z],g[z],this._bitLength),L=Math.max(_[F].length,L),L=Math.max(_[z].length,L)}var t=this.jpoint(null,null,null),e=this._wnafT4;for(S=L;S>=0;S--){for(var r=0;S>=0;){var c=!0;for(p=0;p<m;p++)e[p]=0|_[p][S],e[p]!==0&&(c=!1);if(!c)break;r++,S--}if(S>=0&&r++,t=t.dblp(r),S<0)break;for(p=0;p<m;p++){var P=e[p];P!==0&&(P>0?y=B[p][P-1>>1]:P<0&&(y=B[p][-P-1>>1].neg()),t=y.type==="affine"?t.mixedAdd(y):t.add(y))}}for(S=0;S<m;S++)B[S]=null;return x?t:t.toP()},M.BasePoint=h,h.prototype.eq=function(){throw new Error("Not implemented")},h.prototype.validate=function(){return this.curve.validate(this)},M.prototype.decodePoint=function(a,o){a=b.toArray(a,o);var s=this.p.byteLength();if((a[0]===4||a[0]===6||a[0]===7)&&a.length-1==2*s)return a[0]===6?i(a[a.length-1]%2==0):a[0]===7&&i(a[a.length-1]%2==1),this.point(a.slice(1,1+s),a.slice(1+s,1+2*s));if((a[0]===2||a[0]===3)&&a.length-1===s)return this.pointFromX(a.slice(1,1+s),a[0]===3);throw new Error("Unknown point format")},h.prototype.encodeCompressed=function(a){return this.encode(a,!0)},h.prototype._encode=function(a){var o=this.curve.p.byteLength(),s=this.getX().toArray("be",o);return a?[this.getY().isEven()?2:3].concat(s):[4].concat(s,this.getY().toArray("be",o))},h.prototype.encode=function(a,o){return b.encode(this._encode(o),a)},h.prototype.precompute=function(a){if(this.precomputed)return this;var o={doubles:null,naf:null,beta:null};return o.naf=this._getNAFPoints(8),o.doubles=this._getDoubles(4,a),o.beta=this._getBeta(),this.precomputed=o,this},h.prototype._hasDoubles=function(a){if(!this.precomputed)return!1;var o=this.precomputed.doubles;return!!o&&o.points.length>=Math.ceil((a.bitLength()+1)/o.step)},h.prototype._getDoubles=function(a,o){if(this.precomputed&&this.precomputed.doubles)return this.precomputed.doubles;for(var s=[this],m=this,x=0;x<o;x+=a){for(var S=0;S<a;S++)m=m.dbl();s.push(m)}return{step:a,points:s}},h.prototype._getNAFPoints=function(a){if(this.precomputed&&this.precomputed.naf)return this.precomputed.naf;for(var o=[this],s=(1<<a)-1,m=s===1?null:this.dbl(),x=1;x<s;x++)o[x]=o[x-1].add(m);return{wnd:a,points:o}},h.prototype._getBeta=function(){return null},h.prototype.dblp=function(a){for(var o=this,s=0;s<a;s++)o=o.dbl();return o}},1138:(u2,O,A)=>{var C=A(953),b=A(3785),E=A(5717),I=A(4918),i=C.assert;function M(a){this.twisted=(0|a.a)!=1,this.mOneA=this.twisted&&(0|a.a)==-1,this.extended=this.mOneA,I.call(this,"edwards",a),this.a=new b(a.a,16).umod(this.red.m),this.a=this.a.toRed(this.red),this.c=new b(a.c,16).toRed(this.red),this.c2=this.c.redSqr(),this.d=new b(a.d,16).toRed(this.red),this.dd=this.d.redAdd(this.d),i(!this.twisted||this.c.fromRed().cmpn(1)===0),this.oneC=(0|a.c)==1}function h(a,o,s,m,x){I.BasePoint.call(this,a,"projective"),o===null&&s===null&&m===null?(this.x=this.curve.zero,this.y=this.curve.one,this.z=this.curve.one,this.t=this.curve.zero,this.zOne=!0):(this.x=new b(o,16),this.y=new b(s,16),this.z=m?new b(m,16):this.curve.one,this.t=x&&new b(x,16),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.t&&!this.t.red&&(this.t=this.t.toRed(this.curve.red)),this.zOne=this.z===this.curve.one,this.curve.extended&&!this.t&&(this.t=this.x.redMul(this.y),this.zOne||(this.t=this.t.redMul(this.z.redInvm()))))}E(M,I),u2.exports=M,M.prototype._mulA=function(a){return this.mOneA?a.redNeg():this.a.redMul(a)},M.prototype._mulC=function(a){return this.oneC?a:this.c.redMul(a)},M.prototype.jpoint=function(a,o,s,m){return this.point(a,o,s,m)},M.prototype.pointFromX=function(a,o){(a=new b(a,16)).red||(a=a.toRed(this.red));var s=a.redSqr(),m=this.c2.redSub(this.a.redMul(s)),x=this.one.redSub(this.c2.redMul(this.d).redMul(s)),S=m.redMul(x.redInvm()),p=S.redSqrt();if(p.redSqr().redSub(S).cmp(this.zero)!==0)throw new Error("invalid point");var y=p.fromRed().isOdd();return(o&&!y||!o&&y)&&(p=p.redNeg()),this.point(a,p)},M.prototype.pointFromY=function(a,o){(a=new b(a,16)).red||(a=a.toRed(this.red));var s=a.redSqr(),m=s.redSub(this.c2),x=s.redMul(this.d).redMul(this.c2).redSub(this.a),S=m.redMul(x.redInvm());if(S.cmp(this.zero)===0){if(o)throw new Error("invalid point");return this.point(this.zero,a)}var p=S.redSqrt();if(p.redSqr().redSub(S).cmp(this.zero)!==0)throw new Error("invalid point");return p.fromRed().isOdd()!==o&&(p=p.redNeg()),this.point(p,a)},M.prototype.validate=function(a){if(a.isInfinity())return!0;a.normalize();var o=a.x.redSqr(),s=a.y.redSqr(),m=o.redMul(this.a).redAdd(s),x=this.c2.redMul(this.one.redAdd(this.d.redMul(o).redMul(s)));return m.cmp(x)===0},E(h,I.BasePoint),M.prototype.pointFromJSON=function(a){return h.fromJSON(this,a)},M.prototype.point=function(a,o,s,m){return new h(this,a,o,s,m)},h.fromJSON=function(a,o){return new h(a,o[0],o[1],o[2])},h.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+" z: "+this.z.fromRed().toString(16,2)+">"},h.prototype.isInfinity=function(){return this.x.cmpn(0)===0&&(this.y.cmp(this.z)===0||this.zOne&&this.y.cmp(this.curve.c)===0)},h.prototype._extDbl=function(){var a=this.x.redSqr(),o=this.y.redSqr(),s=this.z.redSqr();s=s.redIAdd(s);var m=this.curve._mulA(a),x=this.x.redAdd(this.y).redSqr().redISub(a).redISub(o),S=m.redAdd(o),p=S.redSub(s),y=m.redSub(o),g=x.redMul(p),B=S.redMul(y),_=x.redMul(y),L=p.redMul(S);return this.curve.point(g,B,L,_)},h.prototype._projDbl=function(){var a,o,s,m,x,S,p=this.x.redAdd(this.y).redSqr(),y=this.x.redSqr(),g=this.y.redSqr();if(this.curve.twisted){var B=(m=this.curve._mulA(y)).redAdd(g);this.zOne?(a=p.redSub(y).redSub(g).redMul(B.redSub(this.curve.two)),o=B.redMul(m.redSub(g)),s=B.redSqr().redSub(B).redSub(B)):(x=this.z.redSqr(),S=B.redSub(x).redISub(x),a=p.redSub(y).redISub(g).redMul(S),o=B.redMul(m.redSub(g)),s=B.redMul(S))}else m=y.redAdd(g),x=this.curve._mulC(this.z).redSqr(),S=m.redSub(x).redSub(x),a=this.curve._mulC(p.redISub(m)).redMul(S),o=this.curve._mulC(m).redMul(y.redISub(g)),s=m.redMul(S);return this.curve.point(a,o,s)},h.prototype.dbl=function(){return this.isInfinity()?this:this.curve.extended?this._extDbl():this._projDbl()},h.prototype._extAdd=function(a){var o=this.y.redSub(this.x).redMul(a.y.redSub(a.x)),s=this.y.redAdd(this.x).redMul(a.y.redAdd(a.x)),m=this.t.redMul(this.curve.dd).redMul(a.t),x=this.z.redMul(a.z.redAdd(a.z)),S=s.redSub(o),p=x.redSub(m),y=x.redAdd(m),g=s.redAdd(o),B=S.redMul(p),_=y.redMul(g),L=S.redMul(g),N=p.redMul(y);return this.curve.point(B,_,N,L)},h.prototype._projAdd=function(a){var o,s,m=this.z.redMul(a.z),x=m.redSqr(),S=this.x.redMul(a.x),p=this.y.redMul(a.y),y=this.curve.d.redMul(S).redMul(p),g=x.redSub(y),B=x.redAdd(y),_=this.x.redAdd(this.y).redMul(a.x.redAdd(a.y)).redISub(S).redISub(p),L=m.redMul(g).redMul(_);return this.curve.twisted?(o=m.redMul(B).redMul(p.redSub(this.curve._mulA(S))),s=g.redMul(B)):(o=m.redMul(B).redMul(p.redSub(S)),s=this.curve._mulC(g).redMul(B)),this.curve.point(L,o,s)},h.prototype.add=function(a){return this.isInfinity()?a:a.isInfinity()?this:this.curve.extended?this._extAdd(a):this._projAdd(a)},h.prototype.mul=function(a){return this._hasDoubles(a)?this.curve._fixedNafMul(this,a):this.curve._wnafMul(this,a)},h.prototype.mulAdd=function(a,o,s){return this.curve._wnafMulAdd(1,[this,o],[a,s],2,!1)},h.prototype.jmulAdd=function(a,o,s){return this.curve._wnafMulAdd(1,[this,o],[a,s],2,!0)},h.prototype.normalize=function(){if(this.zOne)return this;var a=this.z.redInvm();return this.x=this.x.redMul(a),this.y=this.y.redMul(a),this.t&&(this.t=this.t.redMul(a)),this.z=this.curve.one,this.zOne=!0,this},h.prototype.neg=function(){return this.curve.point(this.x.redNeg(),this.y,this.z,this.t&&this.t.redNeg())},h.prototype.getX=function(){return this.normalize(),this.x.fromRed()},h.prototype.getY=function(){return this.normalize(),this.y.fromRed()},h.prototype.eq=function(a){return this===a||this.getX().cmp(a.getX())===0&&this.getY().cmp(a.getY())===0},h.prototype.eqXToP=function(a){var o=a.toRed(this.curve.red).redMul(this.z);if(this.x.cmp(o)===0)return!0;for(var s=a.clone(),m=this.curve.redN.redMul(this.z);;){if(s.iadd(this.curve.n),s.cmp(this.curve.p)>=0)return!1;if(o.redIAdd(m),this.x.cmp(o)===0)return!0}},h.prototype.toP=h.prototype.normalize,h.prototype.mixedAdd=h.prototype.add},8254:(u2,O,A)=>{var C=O;C.base=A(4918),C.short=A(6673),C.mont=A(2881),C.edwards=A(1138)},2881:(u2,O,A)=>{var C=A(3785),b=A(5717),E=A(4918),I=A(953);function i(h){E.call(this,"mont",h),this.a=new C(h.a,16).toRed(this.red),this.b=new C(h.b,16).toRed(this.red),this.i4=new C(4).toRed(this.red).redInvm(),this.two=new C(2).toRed(this.red),this.a24=this.i4.redMul(this.a.redAdd(this.two))}function M(h,a,o){E.BasePoint.call(this,h,"projective"),a===null&&o===null?(this.x=this.curve.one,this.z=this.curve.zero):(this.x=new C(a,16),this.z=new C(o,16),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)))}b(i,E),u2.exports=i,i.prototype.validate=function(h){var a=h.normalize().x,o=a.redSqr(),s=o.redMul(a).redAdd(o.redMul(this.a)).redAdd(a);return s.redSqrt().redSqr().cmp(s)===0},b(M,E.BasePoint),i.prototype.decodePoint=function(h,a){return this.point(I.toArray(h,a),1)},i.prototype.point=function(h,a){return new M(this,h,a)},i.prototype.pointFromJSON=function(h){return M.fromJSON(this,h)},M.prototype.precompute=function(){},M.prototype._encode=function(){return this.getX().toArray("be",this.curve.p.byteLength())},M.fromJSON=function(h,a){return new M(h,a[0],a[1]||h.one)},M.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" z: "+this.z.fromRed().toString(16,2)+">"},M.prototype.isInfinity=function(){return this.z.cmpn(0)===0},M.prototype.dbl=function(){var h=this.x.redAdd(this.z).redSqr(),a=this.x.redSub(this.z).redSqr(),o=h.redSub(a),s=h.redMul(a),m=o.redMul(a.redAdd(this.curve.a24.redMul(o)));return this.curve.point(s,m)},M.prototype.add=function(){throw new Error("Not supported on Montgomery curve")},M.prototype.diffAdd=function(h,a){var o=this.x.redAdd(this.z),s=this.x.redSub(this.z),m=h.x.redAdd(h.z),x=h.x.redSub(h.z).redMul(o),S=m.redMul(s),p=a.z.redMul(x.redAdd(S).redSqr()),y=a.x.redMul(x.redISub(S).redSqr());return this.curve.point(p,y)},M.prototype.mul=function(h){for(var a=h.clone(),o=this,s=this.curve.point(null,null),m=[];a.cmpn(0)!==0;a.iushrn(1))m.push(a.andln(1));for(var x=m.length-1;x>=0;x--)m[x]===0?(o=o.diffAdd(s,this),s=s.dbl()):(s=o.diffAdd(s,this),o=o.dbl());return s},M.prototype.mulAdd=function(){throw new Error("Not supported on Montgomery curve")},M.prototype.jumlAdd=function(){throw new Error("Not supported on Montgomery curve")},M.prototype.eq=function(h){return this.getX().cmp(h.getX())===0},M.prototype.normalize=function(){return this.x=this.x.redMul(this.z.redInvm()),this.z=this.curve.one,this},M.prototype.getX=function(){return this.normalize(),this.x.fromRed()}},6673:(u2,O,A)=>{var C=A(953),b=A(3785),E=A(5717),I=A(4918),i=C.assert;function M(o){I.call(this,"short",o),this.a=new b(o.a,16).toRed(this.red),this.b=new b(o.b,16).toRed(this.red),this.tinv=this.two.redInvm(),this.zeroA=this.a.fromRed().cmpn(0)===0,this.threeA=this.a.fromRed().sub(this.p).cmpn(-3)===0,this.endo=this._getEndomorphism(o),this._endoWnafT1=new Array(4),this._endoWnafT2=new Array(4)}function h(o,s,m,x){I.BasePoint.call(this,o,"affine"),s===null&&m===null?(this.x=null,this.y=null,this.inf=!0):(this.x=new b(s,16),this.y=new b(m,16),x&&(this.x.forceRed(this.curve.red),this.y.forceRed(this.curve.red)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.inf=!1)}function a(o,s,m,x){I.BasePoint.call(this,o,"jacobian"),s===null&&m===null&&x===null?(this.x=this.curve.one,this.y=this.curve.one,this.z=new b(0)):(this.x=new b(s,16),this.y=new b(m,16),this.z=new b(x,16)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.zOne=this.z===this.curve.one}E(M,I),u2.exports=M,M.prototype._getEndomorphism=function(o){if(this.zeroA&&this.g&&this.n&&this.p.modn(3)===1){var s,m;if(o.beta)s=new b(o.beta,16).toRed(this.red);else{var x=this._getEndoRoots(this.p);s=(s=x[0].cmp(x[1])<0?x[0]:x[1]).toRed(this.red)}if(o.lambda)m=new b(o.lambda,16);else{var S=this._getEndoRoots(this.n);this.g.mul(S[0]).x.cmp(this.g.x.redMul(s))===0?m=S[0]:(m=S[1],i(this.g.mul(m).x.cmp(this.g.x.redMul(s))===0))}return{beta:s,lambda:m,basis:o.basis?o.basis.map(function(p){return{a:new b(p.a,16),b:new b(p.b,16)}}):this._getEndoBasis(m)}}},M.prototype._getEndoRoots=function(o){var s=o===this.p?this.red:b.mont(o),m=new b(2).toRed(s).redInvm(),x=m.redNeg(),S=new b(3).toRed(s).redNeg().redSqrt().redMul(m);return[x.redAdd(S).fromRed(),x.redSub(S).fromRed()]},M.prototype._getEndoBasis=function(o){for(var s,m,x,S,p,y,g,B,_,L=this.n.ushrn(Math.floor(this.n.bitLength()/2)),N=o,F=this.n.clone(),z=new b(1),Q=new b(0),c2=new b(0),d=new b(1),T=0;N.cmpn(0)!==0;){var u=F.div(N);B=F.sub(u.mul(N)),_=c2.sub(u.mul(z));var t=d.sub(u.mul(Q));if(!x&&B.cmp(L)<0)s=g.neg(),m=z,x=B.neg(),S=_;else if(x&&++T==2)break;g=B,F=N,N=B,c2=z,z=_,d=Q,Q=t}p=B.neg(),y=_;var e=x.sqr().add(S.sqr());return p.sqr().add(y.sqr()).cmp(e)>=0&&(p=s,y=m),x.negative&&(x=x.neg(),S=S.neg()),p.negative&&(p=p.neg(),y=y.neg()),[{a:x,b:S},{a:p,b:y}]},M.prototype._endoSplit=function(o){var s=this.endo.basis,m=s[0],x=s[1],S=x.b.mul(o).divRound(this.n),p=m.b.neg().mul(o).divRound(this.n),y=S.mul(m.a),g=p.mul(x.a),B=S.mul(m.b),_=p.mul(x.b);return{k1:o.sub(y).sub(g),k2:B.add(_).neg()}},M.prototype.pointFromX=function(o,s){(o=new b(o,16)).red||(o=o.toRed(this.red));var m=o.redSqr().redMul(o).redIAdd(o.redMul(this.a)).redIAdd(this.b),x=m.redSqrt();if(x.redSqr().redSub(m).cmp(this.zero)!==0)throw new Error("invalid point");var S=x.fromRed().isOdd();return(s&&!S||!s&&S)&&(x=x.redNeg()),this.point(o,x)},M.prototype.validate=function(o){if(o.inf)return!0;var s=o.x,m=o.y,x=this.a.redMul(s),S=s.redSqr().redMul(s).redIAdd(x).redIAdd(this.b);return m.redSqr().redISub(S).cmpn(0)===0},M.prototype._endoWnafMulAdd=function(o,s,m){for(var x=this._endoWnafT1,S=this._endoWnafT2,p=0;p<o.length;p++){var y=this._endoSplit(s[p]),g=o[p],B=g._getBeta();y.k1.negative&&(y.k1.ineg(),g=g.neg(!0)),y.k2.negative&&(y.k2.ineg(),B=B.neg(!0)),x[2*p]=g,x[2*p+1]=B,S[2*p]=y.k1,S[2*p+1]=y.k2}for(var _=this._wnafMulAdd(1,x,S,2*p,m),L=0;L<2*p;L++)x[L]=null,S[L]=null;return _},E(h,I.BasePoint),M.prototype.point=function(o,s,m){return new h(this,o,s,m)},M.prototype.pointFromJSON=function(o,s){return h.fromJSON(this,o,s)},h.prototype._getBeta=function(){if(this.curve.endo){var o=this.precomputed;if(o&&o.beta)return o.beta;var s=this.curve.point(this.x.redMul(this.curve.endo.beta),this.y);if(o){var m=this.curve,x=function(S){return m.point(S.x.redMul(m.endo.beta),S.y)};o.beta=s,s.precomputed={beta:null,naf:o.naf&&{wnd:o.naf.wnd,points:o.naf.points.map(x)},doubles:o.doubles&&{step:o.doubles.step,points:o.doubles.points.map(x)}}}return s}},h.prototype.toJSON=function(){return this.precomputed?[this.x,this.y,this.precomputed&&{doubles:this.precomputed.doubles&&{step:this.precomputed.doubles.step,points:this.precomputed.doubles.points.slice(1)},naf:this.precomputed.naf&&{wnd:this.precomputed.naf.wnd,points:this.precomputed.naf.points.slice(1)}}]:[this.x,this.y]},h.fromJSON=function(o,s,m){typeof s=="string"&&(s=JSON.parse(s));var x=o.point(s[0],s[1],m);if(!s[2])return x;function S(y){return o.point(y[0],y[1],m)}var p=s[2];return x.precomputed={beta:null,doubles:p.doubles&&{step:p.doubles.step,points:[x].concat(p.doubles.points.map(S))},naf:p.naf&&{wnd:p.naf.wnd,points:[x].concat(p.naf.points.map(S))}},x},h.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+">"},h.prototype.isInfinity=function(){return this.inf},h.prototype.add=function(o){if(this.inf)return o;if(o.inf)return this;if(this.eq(o))return this.dbl();if(this.neg().eq(o))return this.curve.point(null,null);if(this.x.cmp(o.x)===0)return this.curve.point(null,null);var s=this.y.redSub(o.y);s.cmpn(0)!==0&&(s=s.redMul(this.x.redSub(o.x).redInvm()));var m=s.redSqr().redISub(this.x).redISub(o.x),x=s.redMul(this.x.redSub(m)).redISub(this.y);return this.curve.point(m,x)},h.prototype.dbl=function(){if(this.inf)return this;var o=this.y.redAdd(this.y);if(o.cmpn(0)===0)return this.curve.point(null,null);var s=this.curve.a,m=this.x.redSqr(),x=o.redInvm(),S=m.redAdd(m).redIAdd(m).redIAdd(s).redMul(x),p=S.redSqr().redISub(this.x.redAdd(this.x)),y=S.redMul(this.x.redSub(p)).redISub(this.y);return this.curve.point(p,y)},h.prototype.getX=function(){return this.x.fromRed()},h.prototype.getY=function(){return this.y.fromRed()},h.prototype.mul=function(o){return o=new b(o,16),this.isInfinity()?this:this._hasDoubles(o)?this.curve._fixedNafMul(this,o):this.curve.endo?this.curve._endoWnafMulAdd([this],[o]):this.curve._wnafMul(this,o)},h.prototype.mulAdd=function(o,s,m){var x=[this,s],S=[o,m];return this.curve.endo?this.curve._endoWnafMulAdd(x,S):this.curve._wnafMulAdd(1,x,S,2)},h.prototype.jmulAdd=function(o,s,m){var x=[this,s],S=[o,m];return this.curve.endo?this.curve._endoWnafMulAdd(x,S,!0):this.curve._wnafMulAdd(1,x,S,2,!0)},h.prototype.eq=function(o){return this===o||this.inf===o.inf&&(this.inf||this.x.cmp(o.x)===0&&this.y.cmp(o.y)===0)},h.prototype.neg=function(o){if(this.inf)return this;var s=this.curve.point(this.x,this.y.redNeg());if(o&&this.precomputed){var m=this.precomputed,x=function(S){return S.neg()};s.precomputed={naf:m.naf&&{wnd:m.naf.wnd,points:m.naf.points.map(x)},doubles:m.doubles&&{step:m.doubles.step,points:m.doubles.points.map(x)}}}return s},h.prototype.toJ=function(){return this.inf?this.curve.jpoint(null,null,null):this.curve.jpoint(this.x,this.y,this.curve.one)},E(a,I.BasePoint),M.prototype.jpoint=function(o,s,m){return new a(this,o,s,m)},a.prototype.toP=function(){if(this.isInfinity())return this.curve.point(null,null);var o=this.z.redInvm(),s=o.redSqr(),m=this.x.redMul(s),x=this.y.redMul(s).redMul(o);return this.curve.point(m,x)},a.prototype.neg=function(){return this.curve.jpoint(this.x,this.y.redNeg(),this.z)},a.prototype.add=function(o){if(this.isInfinity())return o;if(o.isInfinity())return this;var s=o.z.redSqr(),m=this.z.redSqr(),x=this.x.redMul(s),S=o.x.redMul(m),p=this.y.redMul(s.redMul(o.z)),y=o.y.redMul(m.redMul(this.z)),g=x.redSub(S),B=p.redSub(y);if(g.cmpn(0)===0)return B.cmpn(0)!==0?this.curve.jpoint(null,null,null):this.dbl();var _=g.redSqr(),L=_.redMul(g),N=x.redMul(_),F=B.redSqr().redIAdd(L).redISub(N).redISub(N),z=B.redMul(N.redISub(F)).redISub(p.redMul(L)),Q=this.z.redMul(o.z).redMul(g);return this.curve.jpoint(F,z,Q)},a.prototype.mixedAdd=function(o){if(this.isInfinity())return o.toJ();if(o.isInfinity())return this;var s=this.z.redSqr(),m=this.x,x=o.x.redMul(s),S=this.y,p=o.y.redMul(s).redMul(this.z),y=m.redSub(x),g=S.redSub(p);if(y.cmpn(0)===0)return g.cmpn(0)!==0?this.curve.jpoint(null,null,null):this.dbl();var B=y.redSqr(),_=B.redMul(y),L=m.redMul(B),N=g.redSqr().redIAdd(_).redISub(L).redISub(L),F=g.redMul(L.redISub(N)).redISub(S.redMul(_)),z=this.z.redMul(y);return this.curve.jpoint(N,F,z)},a.prototype.dblp=function(o){if(o===0)return this;if(this.isInfinity())return this;if(!o)return this.dbl();var s;if(this.curve.zeroA||this.curve.threeA){var m=this;for(s=0;s<o;s++)m=m.dbl();return m}var x=this.curve.a,S=this.curve.tinv,p=this.x,y=this.y,g=this.z,B=g.redSqr().redSqr(),_=y.redAdd(y);for(s=0;s<o;s++){var L=p.redSqr(),N=_.redSqr(),F=N.redSqr(),z=L.redAdd(L).redIAdd(L).redIAdd(x.redMul(B)),Q=p.redMul(N),c2=z.redSqr().redISub(Q.redAdd(Q)),d=Q.redISub(c2),T=z.redMul(d);T=T.redIAdd(T).redISub(F);var u=_.redMul(g);s+1<o&&(B=B.redMul(F)),p=c2,g=u,_=T}return this.curve.jpoint(p,_.redMul(S),g)},a.prototype.dbl=function(){return this.isInfinity()?this:this.curve.zeroA?this._zeroDbl():this.curve.threeA?this._threeDbl():this._dbl()},a.prototype._zeroDbl=function(){var o,s,m;if(this.zOne){var x=this.x.redSqr(),S=this.y.redSqr(),p=S.redSqr(),y=this.x.redAdd(S).redSqr().redISub(x).redISub(p);y=y.redIAdd(y);var g=x.redAdd(x).redIAdd(x),B=g.redSqr().redISub(y).redISub(y),_=p.redIAdd(p);_=(_=_.redIAdd(_)).redIAdd(_),o=B,s=g.redMul(y.redISub(B)).redISub(_),m=this.y.redAdd(this.y)}else{var L=this.x.redSqr(),N=this.y.redSqr(),F=N.redSqr(),z=this.x.redAdd(N).redSqr().redISub(L).redISub(F);z=z.redIAdd(z);var Q=L.redAdd(L).redIAdd(L),c2=Q.redSqr(),d=F.redIAdd(F);d=(d=d.redIAdd(d)).redIAdd(d),o=c2.redISub(z).redISub(z),s=Q.redMul(z.redISub(o)).redISub(d),m=(m=this.y.redMul(this.z)).redIAdd(m)}return this.curve.jpoint(o,s,m)},a.prototype._threeDbl=function(){var o,s,m;if(this.zOne){var x=this.x.redSqr(),S=this.y.redSqr(),p=S.redSqr(),y=this.x.redAdd(S).redSqr().redISub(x).redISub(p);y=y.redIAdd(y);var g=x.redAdd(x).redIAdd(x).redIAdd(this.curve.a),B=g.redSqr().redISub(y).redISub(y);o=B;var _=p.redIAdd(p);_=(_=_.redIAdd(_)).redIAdd(_),s=g.redMul(y.redISub(B)).redISub(_),m=this.y.redAdd(this.y)}else{var L=this.z.redSqr(),N=this.y.redSqr(),F=this.x.redMul(N),z=this.x.redSub(L).redMul(this.x.redAdd(L));z=z.redAdd(z).redIAdd(z);var Q=F.redIAdd(F),c2=(Q=Q.redIAdd(Q)).redAdd(Q);o=z.redSqr().redISub(c2),m=this.y.redAdd(this.z).redSqr().redISub(N).redISub(L);var d=N.redSqr();d=(d=(d=d.redIAdd(d)).redIAdd(d)).redIAdd(d),s=z.redMul(Q.redISub(o)).redISub(d)}return this.curve.jpoint(o,s,m)},a.prototype._dbl=function(){var o=this.curve.a,s=this.x,m=this.y,x=this.z,S=x.redSqr().redSqr(),p=s.redSqr(),y=m.redSqr(),g=p.redAdd(p).redIAdd(p).redIAdd(o.redMul(S)),B=s.redAdd(s),_=(B=B.redIAdd(B)).redMul(y),L=g.redSqr().redISub(_.redAdd(_)),N=_.redISub(L),F=y.redSqr();F=(F=(F=F.redIAdd(F)).redIAdd(F)).redIAdd(F);var z=g.redMul(N).redISub(F),Q=m.redAdd(m).redMul(x);return this.curve.jpoint(L,z,Q)},a.prototype.trpl=function(){if(!this.curve.zeroA)return this.dbl().add(this);var o=this.x.redSqr(),s=this.y.redSqr(),m=this.z.redSqr(),x=s.redSqr(),S=o.redAdd(o).redIAdd(o),p=S.redSqr(),y=this.x.redAdd(s).redSqr().redISub(o).redISub(x),g=(y=(y=(y=y.redIAdd(y)).redAdd(y).redIAdd(y)).redISub(p)).redSqr(),B=x.redIAdd(x);B=(B=(B=B.redIAdd(B)).redIAdd(B)).redIAdd(B);var _=S.redIAdd(y).redSqr().redISub(p).redISub(g).redISub(B),L=s.redMul(_);L=(L=L.redIAdd(L)).redIAdd(L);var N=this.x.redMul(g).redISub(L);N=(N=N.redIAdd(N)).redIAdd(N);var F=this.y.redMul(_.redMul(B.redISub(_)).redISub(y.redMul(g)));F=(F=(F=F.redIAdd(F)).redIAdd(F)).redIAdd(F);var z=this.z.redAdd(y).redSqr().redISub(m).redISub(g);return this.curve.jpoint(N,F,z)},a.prototype.mul=function(o,s){return o=new b(o,s),this.curve._wnafMul(this,o)},a.prototype.eq=function(o){if(o.type==="affine")return this.eq(o.toJ());if(this===o)return!0;var s=this.z.redSqr(),m=o.z.redSqr();if(this.x.redMul(m).redISub(o.x.redMul(s)).cmpn(0)!==0)return!1;var x=s.redMul(this.z),S=m.redMul(o.z);return this.y.redMul(S).redISub(o.y.redMul(x)).cmpn(0)===0},a.prototype.eqXToP=function(o){var s=this.z.redSqr(),m=o.toRed(this.curve.red).redMul(s);if(this.x.cmp(m)===0)return!0;for(var x=o.clone(),S=this.curve.redN.redMul(s);;){if(x.iadd(this.curve.n),x.cmp(this.curve.p)>=0)return!1;if(m.redIAdd(S),this.x.cmp(m)===0)return!0}},a.prototype.inspect=function(){return this.isInfinity()?"<EC JPoint Infinity>":"<EC JPoint x: "+this.x.toString(16,2)+" y: "+this.y.toString(16,2)+" z: "+this.z.toString(16,2)+">"},a.prototype.isInfinity=function(){return this.z.cmpn(0)===0}},5427:(u2,O,A)=>{var C,b=O,E=A(3715),I=A(8254),i=A(953).assert;function M(a){a.type==="short"?this.curve=new I.short(a):a.type==="edwards"?this.curve=new I.edwards(a):this.curve=new I.mont(a),this.g=this.curve.g,this.n=this.curve.n,this.hash=a.hash,i(this.g.validate(),"Invalid curve"),i(this.g.mul(this.n).isInfinity(),"Invalid curve, G*N != O")}function h(a,o){Object.defineProperty(b,a,{configurable:!0,enumerable:!0,get:function(){var s=new M(o);return Object.defineProperty(b,a,{configurable:!0,enumerable:!0,value:s}),s}})}b.PresetCurve=M,h("p192",{type:"short",prime:"p192",p:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",a:"ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",b:"64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",n:"ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",hash:E.sha256,gRed:!1,g:["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012","07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]}),h("p224",{type:"short",prime:"p224",p:"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",a:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",b:"b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",n:"ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",hash:E.sha256,gRed:!1,g:["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21","bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]}),h("p256",{type:"short",prime:null,p:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",a:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",b:"5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",n:"ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",hash:E.sha256,gRed:!1,g:["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296","4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]}),h("p384",{type:"short",prime:null,p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",a:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",b:"b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",n:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",hash:E.sha384,gRed:!1,g:["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7","3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]}),h("p521",{type:"short",prime:null,p:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",a:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",b:"00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",n:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",hash:E.sha512,gRed:!1,g:["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66","00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]}),h("curve25519",{type:"mont",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"76d06",b:"1",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:E.sha256,gRed:!1,g:["9"]}),h("ed25519",{type:"edwards",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"-1",c:"1",d:"52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:E.sha256,gRed:!1,g:["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a","6666666666666666666666666666666666666666666666666666666666666658"]});try{C=A(1037)}catch{C=void 0}h("secp256k1",{type:"short",prime:"k256",p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",a:"0",b:"7",n:"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",h:"1",hash:E.sha256,beta:"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",lambda:"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",basis:[{a:"3086d221a7d46bcde86c90e49284eb15",b:"-e4437ed6010e88286f547fa90abfe4c3"},{a:"114ca50f7a8e2f3f657c1108d9d44cfd8",b:"3086d221a7d46bcde86c90e49284eb15"}],gRed:!1,g:["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798","483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",C]})},7954:(u2,O,A)=>{var C=A(3785),b=A(2156),E=A(953),I=A(5427),i=A(9931),M=E.assert,h=A(1251),a=A(611);function o(s){if(!(this instanceof o))return new o(s);typeof s=="string"&&(M(Object.prototype.hasOwnProperty.call(I,s),"Unknown curve "+s),s=I[s]),s instanceof I.PresetCurve&&(s={curve:s}),this.curve=s.curve.curve,this.n=this.curve.n,this.nh=this.n.ushrn(1),this.g=this.curve.g,this.g=s.curve.g,this.g.precompute(s.curve.n.bitLength()+1),this.hash=s.hash||s.curve.hash}u2.exports=o,o.prototype.keyPair=function(s){return new h(this,s)},o.prototype.keyFromPrivate=function(s,m){return h.fromPrivate(this,s,m)},o.prototype.keyFromPublic=function(s,m){return h.fromPublic(this,s,m)},o.prototype.genKeyPair=function(s){s||(s={});for(var m=new b({hash:this.hash,pers:s.pers,persEnc:s.persEnc||"utf8",entropy:s.entropy||i(this.hash.hmacStrength),entropyEnc:s.entropy&&s.entropyEnc||"utf8",nonce:this.n.toArray()}),x=this.n.byteLength(),S=this.n.sub(new C(2));;){var p=new C(m.generate(x));if(!(p.cmp(S)>0))return p.iaddn(1),this.keyFromPrivate(p)}},o.prototype._truncateToN=function(s,m){var x=8*s.byteLength()-this.n.bitLength();return x>0&&(s=s.ushrn(x)),!m&&s.cmp(this.n)>=0?s.sub(this.n):s},o.prototype.sign=function(s,m,x,S){typeof x=="object"&&(S=x,x=null),S||(S={}),m=this.keyFromPrivate(m,x),s=this._truncateToN(new C(s,16));for(var p=this.n.byteLength(),y=m.getPrivate().toArray("be",p),g=s.toArray("be",p),B=new b({hash:this.hash,entropy:y,nonce:g,pers:S.pers,persEnc:S.persEnc||"utf8"}),_=this.n.sub(new C(1)),L=0;;L++){var N=S.k?S.k(L):new C(B.generate(this.n.byteLength()));if(!((N=this._truncateToN(N,!0)).cmpn(1)<=0||N.cmp(_)>=0)){var F=this.g.mul(N);if(!F.isInfinity()){var z=F.getX(),Q=z.umod(this.n);if(Q.cmpn(0)!==0){var c2=N.invm(this.n).mul(Q.mul(m.getPrivate()).iadd(s));if((c2=c2.umod(this.n)).cmpn(0)!==0){var d=(F.getY().isOdd()?1:0)|(z.cmp(Q)!==0?2:0);return S.canonical&&c2.cmp(this.nh)>0&&(c2=this.n.sub(c2),d^=1),new a({r:Q,s:c2,recoveryParam:d})}}}}}},o.prototype.verify=function(s,m,x,S){s=this._truncateToN(new C(s,16)),x=this.keyFromPublic(x,S);var p=(m=new a(m,"hex")).r,y=m.s;if(p.cmpn(1)<0||p.cmp(this.n)>=0||y.cmpn(1)<0||y.cmp(this.n)>=0)return!1;var g,B=y.invm(this.n),_=B.mul(s).umod(this.n),L=B.mul(p).umod(this.n);return this.curve._maxwellTrick?!(g=this.g.jmulAdd(_,x.getPublic(),L)).isInfinity()&&g.eqXToP(p):!(g=this.g.mulAdd(_,x.getPublic(),L)).isInfinity()&&g.getX().umod(this.n).cmp(p)===0},o.prototype.recoverPubKey=function(s,m,x,S){M((3&x)===x,"The recovery param is more than two bits"),m=new a(m,S);var p=this.n,y=new C(s),g=m.r,B=m.s,_=1&x,L=x>>1;if(g.cmp(this.curve.p.umod(this.curve.n))>=0&&L)throw new Error("Unable to find sencond key candinate");g=L?this.curve.pointFromX(g.add(this.curve.n),_):this.curve.pointFromX(g,_);var N=m.r.invm(p),F=p.sub(y).mul(N).umod(p),z=B.mul(N).umod(p);return this.g.mulAdd(F,g,z)},o.prototype.getKeyRecoveryParam=function(s,m,x,S){if((m=new a(m,S)).recoveryParam!==null)return m.recoveryParam;for(var p=0;p<4;p++){var y;try{y=this.recoverPubKey(s,m,p)}catch{continue}if(y.eq(x))return p}throw new Error("Unable to find valid recovery factor")}},1251:(u2,O,A)=>{var C=A(3785),b=A(953).assert;function E(I,i){this.ec=I,this.priv=null,this.pub=null,i.priv&&this._importPrivate(i.priv,i.privEnc),i.pub&&this._importPublic(i.pub,i.pubEnc)}u2.exports=E,E.fromPublic=function(I,i,M){return i instanceof E?i:new E(I,{pub:i,pubEnc:M})},E.fromPrivate=function(I,i,M){return i instanceof E?i:new E(I,{priv:i,privEnc:M})},E.prototype.validate=function(){var I=this.getPublic();return I.isInfinity()?{result:!1,reason:"Invalid public key"}:I.validate()?I.mul(this.ec.curve.n).isInfinity()?{result:!0,reason:null}:{result:!1,reason:"Public key * N != O"}:{result:!1,reason:"Public key is not a point"}},E.prototype.getPublic=function(I,i){return typeof I=="string"&&(i=I,I=null),this.pub||(this.pub=this.ec.g.mul(this.priv)),i?this.pub.encode(i,I):this.pub},E.prototype.getPrivate=function(I){return I==="hex"?this.priv.toString(16,2):this.priv},E.prototype._importPrivate=function(I,i){this.priv=new C(I,i||16),this.priv=this.priv.umod(this.ec.curve.n)},E.prototype._importPublic=function(I,i){if(I.x||I.y)return this.ec.curve.type==="mont"?b(I.x,"Need x coordinate"):this.ec.curve.type!=="short"&&this.ec.curve.type!=="edwards"||b(I.x&&I.y,"Need both x and y coordinate"),void(this.pub=this.ec.curve.point(I.x,I.y));this.pub=this.ec.curve.decodePoint(I,i)},E.prototype.derive=function(I){return I.validate()||b(I.validate(),"public point not validated"),I.mul(this.priv).getX()},E.prototype.sign=function(I,i,M){return this.ec.sign(I,this,i,M)},E.prototype.verify=function(I,i){return this.ec.verify(I,i,this)},E.prototype.inspect=function(){return"<Key priv: "+(this.priv&&this.priv.toString(16,2))+" pub: "+(this.pub&&this.pub.inspect())+" >"}},611:(u2,O,A)=>{var C=A(3785),b=A(953),E=b.assert;function I(o,s){if(o instanceof I)return o;this._importDER(o,s)||(E(o.r&&o.s,"Signature without r or s"),this.r=new C(o.r,16),this.s=new C(o.s,16),o.recoveryParam===void 0?this.recoveryParam=null:this.recoveryParam=o.recoveryParam)}function i(){this.place=0}function M(o,s){var m=o[s.place++];if(!(128&m))return m;var x=15&m;if(x===0||x>4)return!1;for(var S=0,p=0,y=s.place;p<x;p++,y++)S<<=8,S|=o[y],S>>>=0;return!(S<=127)&&(s.place=y,S)}function h(o){for(var s=0,m=o.length-1;!o[s]&&!(128&o[s+1])&&s<m;)s++;return s===0?o:o.slice(s)}function a(o,s){if(s<128)o.push(s);else{var m=1+(Math.log(s)/Math.LN2>>>3);for(o.push(128|m);--m;)o.push(s>>>(m<<3)&255);o.push(s)}}u2.exports=I,I.prototype._importDER=function(o,s){o=b.toArray(o,s);var m=new i;if(o[m.place++]!==48)return!1;var x=M(o,m);if(x===!1||x+m.place!==o.length||o[m.place++]!==2)return!1;var S=M(o,m);if(S===!1)return!1;var p=o.slice(m.place,S+m.place);if(m.place+=S,o[m.place++]!==2)return!1;var y=M(o,m);if(y===!1||o.length!==y+m.place)return!1;var g=o.slice(m.place,y+m.place);if(p[0]===0){if(!(128&p[1]))return!1;p=p.slice(1)}if(g[0]===0){if(!(128&g[1]))return!1;g=g.slice(1)}return this.r=new C(p),this.s=new C(g),this.recoveryParam=null,!0},I.prototype.toDER=function(o){var s=this.r.toArray(),m=this.s.toArray();for(128&s[0]&&(s=[0].concat(s)),128&m[0]&&(m=[0].concat(m)),s=h(s),m=h(m);!(m[0]||128&m[1]);)m=m.slice(1);var x=[2];a(x,s.length),(x=x.concat(s)).push(2),a(x,m.length);var S=x.concat(m),p=[48];return a(p,S.length),p=p.concat(S),b.encode(p,o)}},5980:(u2,O,A)=>{var C=A(3715),b=A(5427),E=A(953),I=E.assert,i=E.parseBytes,M=A(9087),h=A(3622);function a(o){if(I(o==="ed25519","only tested with ed25519 so far"),!(this instanceof a))return new a(o);o=b[o].curve,this.curve=o,this.g=o.g,this.g.precompute(o.n.bitLength()+1),this.pointClass=o.point().constructor,this.encodingLength=Math.ceil(o.n.bitLength()/8),this.hash=C.sha512}u2.exports=a,a.prototype.sign=function(o,s){o=i(o);var m=this.keyFromSecret(s),x=this.hashInt(m.messagePrefix(),o),S=this.g.mul(x),p=this.encodePoint(S),y=this.hashInt(p,m.pubBytes(),o).mul(m.priv()),g=x.add(y).umod(this.curve.n);return this.makeSignature({R:S,S:g,Rencoded:p})},a.prototype.verify=function(o,s,m){o=i(o),s=this.makeSignature(s);var x=this.keyFromPublic(m),S=this.hashInt(s.Rencoded(),x.pubBytes(),o),p=this.g.mul(s.S());return s.R().add(x.pub().mul(S)).eq(p)},a.prototype.hashInt=function(){for(var o=this.hash(),s=0;s<arguments.length;s++)o.update(arguments[s]);return E.intFromLE(o.digest()).umod(this.curve.n)},a.prototype.keyFromPublic=function(o){return M.fromPublic(this,o)},a.prototype.keyFromSecret=function(o){return M.fromSecret(this,o)},a.prototype.makeSignature=function(o){return o instanceof h?o:new h(this,o)},a.prototype.encodePoint=function(o){var s=o.getY().toArray("le",this.encodingLength);return s[this.encodingLength-1]|=o.getX().isOdd()?128:0,s},a.prototype.decodePoint=function(o){var s=(o=E.parseBytes(o)).length-1,m=o.slice(0,s).concat(-129&o[s]),x=(128&o[s])!=0,S=E.intFromLE(m);return this.curve.pointFromY(S,x)},a.prototype.encodeInt=function(o){return o.toArray("le",this.encodingLength)},a.prototype.decodeInt=function(o){return E.intFromLE(o)},a.prototype.isPoint=function(o){return o instanceof this.pointClass}},9087:(u2,O,A)=>{var C=A(953),b=C.assert,E=C.parseBytes,I=C.cachedProperty;function i(M,h){this.eddsa=M,this._secret=E(h.secret),M.isPoint(h.pub)?this._pub=h.pub:this._pubBytes=E(h.pub)}i.fromPublic=function(M,h){return h instanceof i?h:new i(M,{pub:h})},i.fromSecret=function(M,h){return h instanceof i?h:new i(M,{secret:h})},i.prototype.secret=function(){return this._secret},I(i,"pubBytes",function(){return this.eddsa.encodePoint(this.pub())}),I(i,"pub",function(){return this._pubBytes?this.eddsa.decodePoint(this._pubBytes):this.eddsa.g.mul(this.priv())}),I(i,"privBytes",function(){var M=this.eddsa,h=this.hash(),a=M.encodingLength-1,o=h.slice(0,M.encodingLength);return o[0]&=248,o[a]&=127,o[a]|=64,o}),I(i,"priv",function(){return this.eddsa.decodeInt(this.privBytes())}),I(i,"hash",function(){return this.eddsa.hash().update(this.secret()).digest()}),I(i,"messagePrefix",function(){return this.hash().slice(this.eddsa.encodingLength)}),i.prototype.sign=function(M){return b(this._secret,"KeyPair can only verify"),this.eddsa.sign(M,this)},i.prototype.verify=function(M,h){return this.eddsa.verify(M,h,this)},i.prototype.getSecret=function(M){return b(this._secret,"KeyPair is public only"),C.encode(this.secret(),M)},i.prototype.getPublic=function(M){return C.encode(this.pubBytes(),M)},u2.exports=i},3622:(u2,O,A)=>{var C=A(3785),b=A(953),E=b.assert,I=b.cachedProperty,i=b.parseBytes;function M(h,a){this.eddsa=h,typeof a!="object"&&(a=i(a)),Array.isArray(a)&&(a={R:a.slice(0,h.encodingLength),S:a.slice(h.encodingLength)}),E(a.R&&a.S,"Signature without R or S"),h.isPoint(a.R)&&(this._R=a.R),a.S instanceof C&&(this._S=a.S),this._Rencoded=Array.isArray(a.R)?a.R:a.Rencoded,this._Sencoded=Array.isArray(a.S)?a.S:a.Sencoded}I(M,"S",function(){return this.eddsa.decodeInt(this.Sencoded())}),I(M,"R",function(){return this.eddsa.decodePoint(this.Rencoded())}),I(M,"Rencoded",function(){return this.eddsa.encodePoint(this.R())}),I(M,"Sencoded",function(){return this.eddsa.encodeInt(this.S())}),M.prototype.toBytes=function(){return this.Rencoded().concat(this.Sencoded())},M.prototype.toHex=function(){return b.encode(this.toBytes(),"hex").toUpperCase()},u2.exports=M},1037:u2=>{u2.exports={doubles:{step:4,points:[["e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a","f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"],["8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508","11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"],["175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739","d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"],["363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640","4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"],["8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c","4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"],["723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda","96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"],["eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa","5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"],["100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0","cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"],["e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d","9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"],["feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d","e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"],["da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1","9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"],["53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0","5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"],["8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047","10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"],["385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862","283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"],["6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7","7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"],["3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd","56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"],["85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83","7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"],["948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a","53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"],["6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8","bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"],["e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d","4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"],["e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725","7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"],["213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754","4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"],["4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c","17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"],["fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6","6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"],["76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39","c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"],["c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891","893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"],["d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b","febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"],["b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03","2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"],["e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d","eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"],["a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070","7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"],["90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4","e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"],["8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da","662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"],["e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11","1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"],["8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e","efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"],["e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41","2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"],["b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef","67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"],["d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8","db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"],["324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d","648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"],["4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96","35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"],["9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd","ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"],["6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5","9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"],["a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266","40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"],["7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71","34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"],["928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac","c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"],["85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751","1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"],["ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e","493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"],["827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241","c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"],["eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3","be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"],["e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f","4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"],["1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19","aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"],["146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be","b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"],["fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9","6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"],["da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2","8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"],["a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13","7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"],["174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c","ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"],["959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba","2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"],["d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151","e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"],["64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073","d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"],["8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458","38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"],["13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b","69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"],["bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366","d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"],["8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa","40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"],["8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0","620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"],["dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787","7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"],["f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e","ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"]]},naf:{wnd:7,points:[["f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9","388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"],["2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4","d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"],["5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc","6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"],["acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe","cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"],["774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb","d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"],["f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8","ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"],["d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e","581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"],["defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34","4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"],["2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c","85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"],["352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5","321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"],["2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f","2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"],["9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714","73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"],["daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729","a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"],["c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db","2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"],["6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4","e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"],["1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5","b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"],["605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479","2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"],["62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d","80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"],["80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f","1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"],["7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb","d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"],["d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9","eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"],["49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963","758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"],["77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74","958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"],["f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530","e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"],["463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b","5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"],["f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247","cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"],["caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1","cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"],["2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120","4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"],["7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435","91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"],["754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18","673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"],["e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8","59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"],["186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb","3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"],["df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f","55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"],["5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143","efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"],["290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba","e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"],["af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45","f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"],["766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a","744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"],["59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e","c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"],["f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8","e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"],["7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c","30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"],["948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519","e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"],["7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab","100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"],["3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca","ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"],["d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf","8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"],["1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610","68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"],["733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4","f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"],["15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c","d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"],["a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940","edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"],["e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980","a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"],["311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3","66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"],["34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf","9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"],["f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63","4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"],["d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448","fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"],["32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf","5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"],["7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5","8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"],["ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6","8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"],["16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5","5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"],["eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99","f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"],["78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51","f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"],["494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5","42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"],["a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5","204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"],["c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997","4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"],["841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881","73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"],["5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5","39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"],["36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66","d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"],["336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726","ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"],["8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede","6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"],["1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94","60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"],["85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31","3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"],["29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51","b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"],["a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252","ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"],["4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5","cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"],["d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b","6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"],["ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4","322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"],["af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f","6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"],["e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889","2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"],["591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246","b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"],["11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984","998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"],["3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a","b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"],["cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030","bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"],["c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197","6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"],["c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593","c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"],["a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef","21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"],["347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38","60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"],["da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a","49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"],["c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111","5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"],["4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502","7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"],["3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea","be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"],["cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26","8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"],["b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986","39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"],["d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e","62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"],["48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4","25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"],["dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda","ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"],["6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859","cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"],["e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f","f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"],["eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c","6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"],["13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942","fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"],["ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a","1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"],["b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80","5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"],["ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d","438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"],["8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1","cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"],["52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63","c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"],["e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352","6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"],["7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193","ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"],["5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00","9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"],["32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58","ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"],["e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7","d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"],["8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8","c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"],["4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e","67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"],["3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d","cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"],["674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b","299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"],["d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f","f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"],["30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6","462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"],["be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297","62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"],["93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a","7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"],["b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c","ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"],["d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52","4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"],["d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb","bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"],["463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065","bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"],["7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917","603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"],["74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9","cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"],["30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3","553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"],["9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57","712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"],["176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66","ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"],["75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8","9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"],["809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721","9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"],["1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180","4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"]]}}},953:(u2,O,A)=>{var C=O,b=A(3785),E=A(9746),I=A(4504);C.assert=E,C.toArray=I.toArray,C.zero2=I.zero2,C.toHex=I.toHex,C.encode=I.encode,C.getNAF=function(i,M,h){var a=new Array(Math.max(i.bitLength(),h)+1);a.fill(0);for(var o=1<<M+1,s=i.clone(),m=0;m<a.length;m++){var x,S=s.andln(o-1);s.isOdd()?(x=S>(o>>1)-1?(o>>1)-S:S,s.isubn(x)):x=0,a[m]=x,s.iushrn(1)}return a},C.getJSF=function(i,M){var h=[[],[]];i=i.clone(),M=M.clone();for(var a,o=0,s=0;i.cmpn(-o)>0||M.cmpn(-s)>0;){var m,x,S=i.andln(3)+o&3,p=M.andln(3)+s&3;S===3&&(S=-1),p===3&&(p=-1),m=1&S?(a=i.andln(7)+o&7)!=3&&a!==5||p!==2?S:-S:0,h[0].push(m),x=1&p?(a=M.andln(7)+s&7)!=3&&a!==5||S!==2?p:-p:0,h[1].push(x),2*o===m+1&&(o=1-o),2*s===x+1&&(s=1-s),i.iushrn(1),M.iushrn(1)}return h},C.cachedProperty=function(i,M,h){var a="_"+M;i.prototype[M]=function(){return this[a]!==void 0?this[a]:this[a]=h.call(this)}},C.parseBytes=function(i){return typeof i=="string"?C.toArray(i,"hex"):i},C.intFromLE=function(i){return new b(i,"hex","le")}},3785:function(u2,O,A){(function(C,b){function E(d,T){if(!d)throw new Error(T||"Assertion failed")}function I(d,T){d.super_=T;var u=function(){};u.prototype=T.prototype,d.prototype=new u,d.prototype.constructor=d}function i(d,T,u){if(i.isBN(d))return d;this.negative=0,this.words=null,this.length=0,this.red=null,d!==null&&(T!=="le"&&T!=="be"||(u=T,T=10),this._init(d||0,T||10,u||"be"))}var M;typeof C=="object"?C.exports=i:b.BN=i,i.BN=i,i.wordSize=26;try{M=typeof window<"u"&&window.Buffer!==void 0?window.Buffer:A(5568).Buffer}catch{}function h(d,T){var u=d.charCodeAt(T);return u>=65&&u<=70?u-55:u>=97&&u<=102?u-87:u-48&15}function a(d,T,u){var t=h(d,u);return u-1>=T&&(t|=h(d,u-1)<<4),t}function o(d,T,u,t){for(var e=0,r=Math.min(d.length,u),c=T;c<r;c++){var P=d.charCodeAt(c)-48;e*=t,e+=P>=49?P-49+10:P>=17?P-17+10:P}return e}i.isBN=function(d){return d instanceof i||d!==null&&typeof d=="object"&&d.constructor.wordSize===i.wordSize&&Array.isArray(d.words)},i.max=function(d,T){return d.cmp(T)>0?d:T},i.min=function(d,T){return d.cmp(T)<0?d:T},i.prototype._init=function(d,T,u){if(typeof d=="number")return this._initNumber(d,T,u);if(typeof d=="object")return this._initArray(d,T,u);T==="hex"&&(T=16),E(T===(0|T)&&T>=2&&T<=36);var t=0;(d=d.toString().replace(/\s+/g,""))[0]==="-"&&(t++,this.negative=1),t<d.length&&(T===16?this._parseHex(d,t,u):(this._parseBase(d,T,t),u==="le"&&this._initArray(this.toArray(),T,u)))},i.prototype._initNumber=function(d,T,u){d<0&&(this.negative=1,d=-d),d<67108864?(this.words=[67108863&d],this.length=1):d<4503599627370496?(this.words=[67108863&d,d/67108864&67108863],this.length=2):(E(d<9007199254740992),this.words=[67108863&d,d/67108864&67108863,1],this.length=3),u==="le"&&this._initArray(this.toArray(),T,u)},i.prototype._initArray=function(d,T,u){if(E(typeof d.length=="number"),d.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(d.length/3),this.words=new Array(this.length);for(var t=0;t<this.length;t++)this.words[t]=0;var e,r,c=0;if(u==="be")for(t=d.length-1,e=0;t>=0;t-=3)r=d[t]|d[t-1]<<8|d[t-2]<<16,this.words[e]|=r<<c&67108863,this.words[e+1]=r>>>26-c&67108863,(c+=24)>=26&&(c-=26,e++);else if(u==="le")for(t=0,e=0;t<d.length;t+=3)r=d[t]|d[t+1]<<8|d[t+2]<<16,this.words[e]|=r<<c&67108863,this.words[e+1]=r>>>26-c&67108863,(c+=24)>=26&&(c-=26,e++);return this.strip()},i.prototype._parseHex=function(d,T,u){this.length=Math.ceil((d.length-T)/6),this.words=new Array(this.length);for(var t=0;t<this.length;t++)this.words[t]=0;var e,r=0,c=0;if(u==="be")for(t=d.length-1;t>=T;t-=2)e=a(d,T,t)<<r,this.words[c]|=67108863&e,r>=18?(r-=18,c+=1,this.words[c]|=e>>>26):r+=8;else for(t=(d.length-T)%2==0?T+1:T;t<d.length;t+=2)e=a(d,T,t)<<r,this.words[c]|=67108863&e,r>=18?(r-=18,c+=1,this.words[c]|=e>>>26):r+=8;this.strip()},i.prototype._parseBase=function(d,T,u){this.words=[0],this.length=1;for(var t=0,e=1;e<=67108863;e*=T)t++;t--,e=e/T|0;for(var r=d.length-u,c=r%t,P=Math.min(r,r-c)+u,K=0,W=u;W<P;W+=t)K=o(d,W,W+t,T),this.imuln(e),this.words[0]+K<67108864?this.words[0]+=K:this._iaddn(K);if(c!==0){var o2=1;for(K=o(d,W,d.length,T),W=0;W<c;W++)o2*=T;this.imuln(o2),this.words[0]+K<67108864?this.words[0]+=K:this._iaddn(K)}this.strip()},i.prototype.copy=function(d){d.words=new Array(this.length);for(var T=0;T<this.length;T++)d.words[T]=this.words[T];d.length=this.length,d.negative=this.negative,d.red=this.red},i.prototype.clone=function(){var d=new i(null);return this.copy(d),d},i.prototype._expand=function(d){for(;this.length<d;)this.words[this.length++]=0;return this},i.prototype.strip=function(){for(;this.length>1&&this.words[this.length-1]===0;)this.length--;return this._normSign()},i.prototype._normSign=function(){return this.length===1&&this.words[0]===0&&(this.negative=0),this},i.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var s=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],m=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],x=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function S(d,T,u){u.negative=T.negative^d.negative;var t=d.length+T.length|0;u.length=t,t=t-1|0;var e=0|d.words[0],r=0|T.words[0],c=e*r,P=67108863&c,K=c/67108864|0;u.words[0]=P;for(var W=1;W<t;W++){for(var o2=K>>>26,r2=67108863&K,b2=Math.min(W,T.length-1),_2=Math.max(0,W-d.length+1);_2<=b2;_2++){var $=W-_2|0;o2+=(c=(e=0|d.words[$])*(r=0|T.words[_2])+r2)/67108864|0,r2=67108863&c}u.words[W]=0|r2,K=0|o2}return K!==0?u.words[W]=0|K:u.length--,u.strip()}i.prototype.toString=function(d,T){var u;if(T=0|T||1,(d=d||10)===16||d==="hex"){u="";for(var t=0,e=0,r=0;r<this.length;r++){var c=this.words[r],P=(16777215&(c<<t|e)).toString(16);u=(e=c>>>24-t&16777215)!=0||r!==this.length-1?s[6-P.length]+P+u:P+u,(t+=2)>=26&&(t-=26,r--)}for(e!==0&&(u=e.toString(16)+u);u.length%T!=0;)u="0"+u;return this.negative!==0&&(u="-"+u),u}if(d===(0|d)&&d>=2&&d<=36){var K=m[d],W=x[d];u="";var o2=this.clone();for(o2.negative=0;!o2.isZero();){var r2=o2.modn(W).toString(d);u=(o2=o2.idivn(W)).isZero()?r2+u:s[K-r2.length]+r2+u}for(this.isZero()&&(u="0"+u);u.length%T!=0;)u="0"+u;return this.negative!==0&&(u="-"+u),u}E(!1,"Base should be between 2 and 36")},i.prototype.toNumber=function(){var d=this.words[0];return this.length===2?d+=67108864*this.words[1]:this.length===3&&this.words[2]===1?d+=4503599627370496+67108864*this.words[1]:this.length>2&&E(!1,"Number can only safely store up to 53 bits"),this.negative!==0?-d:d},i.prototype.toJSON=function(){return this.toString(16)},i.prototype.toBuffer=function(d,T){return E(M!==void 0),this.toArrayLike(M,d,T)},i.prototype.toArray=function(d,T){return this.toArrayLike(Array,d,T)},i.prototype.toArrayLike=function(d,T,u){var t=this.byteLength(),e=u||Math.max(1,t);E(t<=e,"byte array longer than desired length"),E(e>0,"Requested array length <= 0"),this.strip();var r,c,P=T==="le",K=new d(e),W=this.clone();if(P){for(c=0;!W.isZero();c++)r=W.andln(255),W.iushrn(8),K[c]=r;for(;c<e;c++)K[c]=0}else{for(c=0;c<e-t;c++)K[c]=0;for(c=0;!W.isZero();c++)r=W.andln(255),W.iushrn(8),K[e-c-1]=r}return K},Math.clz32?i.prototype._countBits=function(d){return 32-Math.clz32(d)}:i.prototype._countBits=function(d){var T=d,u=0;return T>=4096&&(u+=13,T>>>=13),T>=64&&(u+=7,T>>>=7),T>=8&&(u+=4,T>>>=4),T>=2&&(u+=2,T>>>=2),u+T},i.prototype._zeroBits=function(d){if(d===0)return 26;var T=d,u=0;return!(8191&T)&&(u+=13,T>>>=13),!(127&T)&&(u+=7,T>>>=7),!(15&T)&&(u+=4,T>>>=4),!(3&T)&&(u+=2,T>>>=2),!(1&T)&&u++,u},i.prototype.bitLength=function(){var d=this.words[this.length-1],T=this._countBits(d);return 26*(this.length-1)+T},i.prototype.zeroBits=function(){if(this.isZero())return 0;for(var d=0,T=0;T<this.length;T++){var u=this._zeroBits(this.words[T]);if(d+=u,u!==26)break}return d},i.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},i.prototype.toTwos=function(d){return this.negative!==0?this.abs().inotn(d).iaddn(1):this.clone()},i.prototype.fromTwos=function(d){return this.testn(d-1)?this.notn(d).iaddn(1).ineg():this.clone()},i.prototype.isNeg=function(){return this.negative!==0},i.prototype.neg=function(){return this.clone().ineg()},i.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},i.prototype.iuor=function(d){for(;this.length<d.length;)this.words[this.length++]=0;for(var T=0;T<d.length;T++)this.words[T]=this.words[T]|d.words[T];return this.strip()},i.prototype.ior=function(d){return E((this.negative|d.negative)==0),this.iuor(d)},i.prototype.or=function(d){return this.length>d.length?this.clone().ior(d):d.clone().ior(this)},i.prototype.uor=function(d){return this.length>d.length?this.clone().iuor(d):d.clone().iuor(this)},i.prototype.iuand=function(d){var T;T=this.length>d.length?d:this;for(var u=0;u<T.length;u++)this.words[u]=this.words[u]&d.words[u];return this.length=T.length,this.strip()},i.prototype.iand=function(d){return E((this.negative|d.negative)==0),this.iuand(d)},i.prototype.and=function(d){return this.length>d.length?this.clone().iand(d):d.clone().iand(this)},i.prototype.uand=function(d){return this.length>d.length?this.clone().iuand(d):d.clone().iuand(this)},i.prototype.iuxor=function(d){var T,u;this.length>d.length?(T=this,u=d):(T=d,u=this);for(var t=0;t<u.length;t++)this.words[t]=T.words[t]^u.words[t];if(this!==T)for(;t<T.length;t++)this.words[t]=T.words[t];return this.length=T.length,this.strip()},i.prototype.ixor=function(d){return E((this.negative|d.negative)==0),this.iuxor(d)},i.prototype.xor=function(d){return this.length>d.length?this.clone().ixor(d):d.clone().ixor(this)},i.prototype.uxor=function(d){return this.length>d.length?this.clone().iuxor(d):d.clone().iuxor(this)},i.prototype.inotn=function(d){E(typeof d=="number"&&d>=0);var T=0|Math.ceil(d/26),u=d%26;this._expand(T),u>0&&T--;for(var t=0;t<T;t++)this.words[t]=67108863&~this.words[t];return u>0&&(this.words[t]=~this.words[t]&67108863>>26-u),this.strip()},i.prototype.notn=function(d){return this.clone().inotn(d)},i.prototype.setn=function(d,T){E(typeof d=="number"&&d>=0);var u=d/26|0,t=d%26;return this._expand(u+1),this.words[u]=T?this.words[u]|1<<t:this.words[u]&~(1<<t),this.strip()},i.prototype.iadd=function(d){var T,u,t;if(this.negative!==0&&d.negative===0)return this.negative=0,T=this.isub(d),this.negative^=1,this._normSign();if(this.negative===0&&d.negative!==0)return d.negative=0,T=this.isub(d),d.negative=1,T._normSign();this.length>d.length?(u=this,t=d):(u=d,t=this);for(var e=0,r=0;r<t.length;r++)T=(0|u.words[r])+(0|t.words[r])+e,this.words[r]=67108863&T,e=T>>>26;for(;e!==0&&r<u.length;r++)T=(0|u.words[r])+e,this.words[r]=67108863&T,e=T>>>26;if(this.length=u.length,e!==0)this.words[this.length]=e,this.length++;else if(u!==this)for(;r<u.length;r++)this.words[r]=u.words[r];return this},i.prototype.add=function(d){var T;return d.negative!==0&&this.negative===0?(d.negative=0,T=this.sub(d),d.negative^=1,T):d.negative===0&&this.negative!==0?(this.negative=0,T=d.sub(this),this.negative=1,T):this.length>d.length?this.clone().iadd(d):d.clone().iadd(this)},i.prototype.isub=function(d){if(d.negative!==0){d.negative=0;var T=this.iadd(d);return d.negative=1,T._normSign()}if(this.negative!==0)return this.negative=0,this.iadd(d),this.negative=1,this._normSign();var u,t,e=this.cmp(d);if(e===0)return this.negative=0,this.length=1,this.words[0]=0,this;e>0?(u=this,t=d):(u=d,t=this);for(var r=0,c=0;c<t.length;c++)r=(T=(0|u.words[c])-(0|t.words[c])+r)>>26,this.words[c]=67108863&T;for(;r!==0&&c<u.length;c++)r=(T=(0|u.words[c])+r)>>26,this.words[c]=67108863&T;if(r===0&&c<u.length&&u!==this)for(;c<u.length;c++)this.words[c]=u.words[c];return this.length=Math.max(this.length,c),u!==this&&(this.negative=1),this.strip()},i.prototype.sub=function(d){return this.clone().isub(d)};var p=function(d,T,u){var t,e,r,c=d.words,P=T.words,K=u.words,W=0,o2=0|c[0],r2=8191&o2,b2=o2>>>13,_2=0|c[1],$=8191&_2,Z=_2>>>13,p2=0|c[2],w2=8191&p2,R2=p2>>>13,P2=0|c[3],J=8191&P2,a2=P2>>>13,Y=0|c[4],G=8191&Y,i2=Y>>>13,v2=0|c[5],g2=8191&v2,w=v2>>>13,k=0|c[6],v=8191&k,D=k>>>13,j=0|c[7],q=8191&j,V=j>>>13,l2=0|c[8],n2=8191&l2,t2=l2>>>13,s2=0|c[9],h2=8191&s2,d2=s2>>>13,I2=0|P[0],T2=8191&I2,L2=I2>>>13,q2=0|P[1],j2=8191&q2,Q2=q2>>>13,z2=0|P[2],C2=8191&z2,l3=z2>>>13,m3=0|P[3],X2=8191&m3,v3=m3>>>13,h3=0|P[4],$2=8191&h3,s3=h3>>>13,o3=0|P[5],N2=8191&o3,M3=o3>>>13,I3=0|P[6],r3=8191&I3,B3=I3>>>13,T3=0|P[7],n3=8191&T3,k3=T3>>>13,S3=0|P[8],u3=8191&S3,y3=S3>>>13,R3=0|P[9],t3=8191&R3,O3=R3>>>13;u.negative=d.negative^T.negative,u.length=19;var A3=(W+(t=Math.imul(r2,T2))|0)+((8191&(e=(e=Math.imul(r2,L2))+Math.imul(b2,T2)|0))<<13)|0;W=((r=Math.imul(b2,L2))+(e>>>13)|0)+(A3>>>26)|0,A3&=67108863,t=Math.imul($,T2),e=(e=Math.imul($,L2))+Math.imul(Z,T2)|0,r=Math.imul(Z,L2);var E3=(W+(t=t+Math.imul(r2,j2)|0)|0)+((8191&(e=(e=e+Math.imul(r2,Q2)|0)+Math.imul(b2,j2)|0))<<13)|0;W=((r=r+Math.imul(b2,Q2)|0)+(e>>>13)|0)+(E3>>>26)|0,E3&=67108863,t=Math.imul(w2,T2),e=(e=Math.imul(w2,L2))+Math.imul(R2,T2)|0,r=Math.imul(R2,L2),t=t+Math.imul($,j2)|0,e=(e=e+Math.imul($,Q2)|0)+Math.imul(Z,j2)|0,r=r+Math.imul(Z,Q2)|0;var v4=(W+(t=t+Math.imul(r2,C2)|0)|0)+((8191&(e=(e=e+Math.imul(r2,l3)|0)+Math.imul(b2,C2)|0))<<13)|0;W=((r=r+Math.imul(b2,l3)|0)+(e>>>13)|0)+(v4>>>26)|0,v4&=67108863,t=Math.imul(J,T2),e=(e=Math.imul(J,L2))+Math.imul(a2,T2)|0,r=Math.imul(a2,L2),t=t+Math.imul(w2,j2)|0,e=(e=e+Math.imul(w2,Q2)|0)+Math.imul(R2,j2)|0,r=r+Math.imul(R2,Q2)|0,t=t+Math.imul($,C2)|0,e=(e=e+Math.imul($,l3)|0)+Math.imul(Z,C2)|0,r=r+Math.imul(Z,l3)|0;var y4=(W+(t=t+Math.imul(r2,X2)|0)|0)+((8191&(e=(e=e+Math.imul(r2,v3)|0)+Math.imul(b2,X2)|0))<<13)|0;W=((r=r+Math.imul(b2,v3)|0)+(e>>>13)|0)+(y4>>>26)|0,y4&=67108863,t=Math.imul(G,T2),e=(e=Math.imul(G,L2))+Math.imul(i2,T2)|0,r=Math.imul(i2,L2),t=t+Math.imul(J,j2)|0,e=(e=e+Math.imul(J,Q2)|0)+Math.imul(a2,j2)|0,r=r+Math.imul(a2,Q2)|0,t=t+Math.imul(w2,C2)|0,e=(e=e+Math.imul(w2,l3)|0)+Math.imul(R2,C2)|0,r=r+Math.imul(R2,l3)|0,t=t+Math.imul($,X2)|0,e=(e=e+Math.imul($,v3)|0)+Math.imul(Z,X2)|0,r=r+Math.imul(Z,v3)|0;var w4=(W+(t=t+Math.imul(r2,$2)|0)|0)+((8191&(e=(e=e+Math.imul(r2,s3)|0)+Math.imul(b2,$2)|0))<<13)|0;W=((r=r+Math.imul(b2,s3)|0)+(e>>>13)|0)+(w4>>>26)|0,w4&=67108863,t=Math.imul(g2,T2),e=(e=Math.imul(g2,L2))+Math.imul(w,T2)|0,r=Math.imul(w,L2),t=t+Math.imul(G,j2)|0,e=(e=e+Math.imul(G,Q2)|0)+Math.imul(i2,j2)|0,r=r+Math.imul(i2,Q2)|0,t=t+Math.imul(J,C2)|0,e=(e=e+Math.imul(J,l3)|0)+Math.imul(a2,C2)|0,r=r+Math.imul(a2,l3)|0,t=t+Math.imul(w2,X2)|0,e=(e=e+Math.imul(w2,v3)|0)+Math.imul(R2,X2)|0,r=r+Math.imul(R2,v3)|0,t=t+Math.imul($,$2)|0,e=(e=e+Math.imul($,s3)|0)+Math.imul(Z,$2)|0,r=r+Math.imul(Z,s3)|0;var E4=(W+(t=t+Math.imul(r2,N2)|0)|0)+((8191&(e=(e=e+Math.imul(r2,M3)|0)+Math.imul(b2,N2)|0))<<13)|0;W=((r=r+Math.imul(b2,M3)|0)+(e>>>13)|0)+(E4>>>26)|0,E4&=67108863,t=Math.imul(v,T2),e=(e=Math.imul(v,L2))+Math.imul(D,T2)|0,r=Math.imul(D,L2),t=t+Math.imul(g2,j2)|0,e=(e=e+Math.imul(g2,Q2)|0)+Math.imul(w,j2)|0,r=r+Math.imul(w,Q2)|0,t=t+Math.imul(G,C2)|0,e=(e=e+Math.imul(G,l3)|0)+Math.imul(i2,C2)|0,r=r+Math.imul(i2,l3)|0,t=t+Math.imul(J,X2)|0,e=(e=e+Math.imul(J,v3)|0)+Math.imul(a2,X2)|0,r=r+Math.imul(a2,v3)|0,t=t+Math.imul(w2,$2)|0,e=(e=e+Math.imul(w2,s3)|0)+Math.imul(R2,$2)|0,r=r+Math.imul(R2,s3)|0,t=t+Math.imul($,N2)|0,e=(e=e+Math.imul($,M3)|0)+Math.imul(Z,N2)|0,r=r+Math.imul(Z,M3)|0;var I4=(W+(t=t+Math.imul(r2,r3)|0)|0)+((8191&(e=(e=e+Math.imul(r2,B3)|0)+Math.imul(b2,r3)|0))<<13)|0;W=((r=r+Math.imul(b2,B3)|0)+(e>>>13)|0)+(I4>>>26)|0,I4&=67108863,t=Math.imul(q,T2),e=(e=Math.imul(q,L2))+Math.imul(V,T2)|0,r=Math.imul(V,L2),t=t+Math.imul(v,j2)|0,e=(e=e+Math.imul(v,Q2)|0)+Math.imul(D,j2)|0,r=r+Math.imul(D,Q2)|0,t=t+Math.imul(g2,C2)|0,e=(e=e+Math.imul(g2,l3)|0)+Math.imul(w,C2)|0,r=r+Math.imul(w,l3)|0,t=t+Math.imul(G,X2)|0,e=(e=e+Math.imul(G,v3)|0)+Math.imul(i2,X2)|0,r=r+Math.imul(i2,v3)|0,t=t+Math.imul(J,$2)|0,e=(e=e+Math.imul(J,s3)|0)+Math.imul(a2,$2)|0,r=r+Math.imul(a2,s3)|0,t=t+Math.imul(w2,N2)|0,e=(e=e+Math.imul(w2,M3)|0)+Math.imul(R2,N2)|0,r=r+Math.imul(R2,M3)|0,t=t+Math.imul($,r3)|0,e=(e=e+Math.imul($,B3)|0)+Math.imul(Z,r3)|0,r=r+Math.imul(Z,B3)|0;var B4=(W+(t=t+Math.imul(r2,n3)|0)|0)+((8191&(e=(e=e+Math.imul(r2,k3)|0)+Math.imul(b2,n3)|0))<<13)|0;W=((r=r+Math.imul(b2,k3)|0)+(e>>>13)|0)+(B4>>>26)|0,B4&=67108863,t=Math.imul(n2,T2),e=(e=Math.imul(n2,L2))+Math.imul(t2,T2)|0,r=Math.imul(t2,L2),t=t+Math.imul(q,j2)|0,e=(e=e+Math.imul(q,Q2)|0)+Math.imul(V,j2)|0,r=r+Math.imul(V,Q2)|0,t=t+Math.imul(v,C2)|0,e=(e=e+Math.imul(v,l3)|0)+Math.imul(D,C2)|0,r=r+Math.imul(D,l3)|0,t=t+Math.imul(g2,X2)|0,e=(e=e+Math.imul(g2,v3)|0)+Math.imul(w,X2)|0,r=r+Math.imul(w,v3)|0,t=t+Math.imul(G,$2)|0,e=(e=e+Math.imul(G,s3)|0)+Math.imul(i2,$2)|0,r=r+Math.imul(i2,s3)|0,t=t+Math.imul(J,N2)|0,e=(e=e+Math.imul(J,M3)|0)+Math.imul(a2,N2)|0,r=r+Math.imul(a2,M3)|0,t=t+Math.imul(w2,r3)|0,e=(e=e+Math.imul(w2,B3)|0)+Math.imul(R2,r3)|0,r=r+Math.imul(R2,B3)|0,t=t+Math.imul($,n3)|0,e=(e=e+Math.imul($,k3)|0)+Math.imul(Z,n3)|0,r=r+Math.imul(Z,k3)|0;var T4=(W+(t=t+Math.imul(r2,u3)|0)|0)+((8191&(e=(e=e+Math.imul(r2,y3)|0)+Math.imul(b2,u3)|0))<<13)|0;W=((r=r+Math.imul(b2,y3)|0)+(e>>>13)|0)+(T4>>>26)|0,T4&=67108863,t=Math.imul(h2,T2),e=(e=Math.imul(h2,L2))+Math.imul(d2,T2)|0,r=Math.imul(d2,L2),t=t+Math.imul(n2,j2)|0,e=(e=e+Math.imul(n2,Q2)|0)+Math.imul(t2,j2)|0,r=r+Math.imul(t2,Q2)|0,t=t+Math.imul(q,C2)|0,e=(e=e+Math.imul(q,l3)|0)+Math.imul(V,C2)|0,r=r+Math.imul(V,l3)|0,t=t+Math.imul(v,X2)|0,e=(e=e+Math.imul(v,v3)|0)+Math.imul(D,X2)|0,r=r+Math.imul(D,v3)|0,t=t+Math.imul(g2,$2)|0,e=(e=e+Math.imul(g2,s3)|0)+Math.imul(w,$2)|0,r=r+Math.imul(w,s3)|0,t=t+Math.imul(G,N2)|0,e=(e=e+Math.imul(G,M3)|0)+Math.imul(i2,N2)|0,r=r+Math.imul(i2,M3)|0,t=t+Math.imul(J,r3)|0,e=(e=e+Math.imul(J,B3)|0)+Math.imul(a2,r3)|0,r=r+Math.imul(a2,B3)|0,t=t+Math.imul(w2,n3)|0,e=(e=e+Math.imul(w2,k3)|0)+Math.imul(R2,n3)|0,r=r+Math.imul(R2,k3)|0,t=t+Math.imul($,u3)|0,e=(e=e+Math.imul($,y3)|0)+Math.imul(Z,u3)|0,r=r+Math.imul(Z,y3)|0;var p4=(W+(t=t+Math.imul(r2,t3)|0)|0)+((8191&(e=(e=e+Math.imul(r2,O3)|0)+Math.imul(b2,t3)|0))<<13)|0;W=((r=r+Math.imul(b2,O3)|0)+(e>>>13)|0)+(p4>>>26)|0,p4&=67108863,t=Math.imul(h2,j2),e=(e=Math.imul(h2,Q2))+Math.imul(d2,j2)|0,r=Math.imul(d2,Q2),t=t+Math.imul(n2,C2)|0,e=(e=e+Math.imul(n2,l3)|0)+Math.imul(t2,C2)|0,r=r+Math.imul(t2,l3)|0,t=t+Math.imul(q,X2)|0,e=(e=e+Math.imul(q,v3)|0)+Math.imul(V,X2)|0,r=r+Math.imul(V,v3)|0,t=t+Math.imul(v,$2)|0,e=(e=e+Math.imul(v,s3)|0)+Math.imul(D,$2)|0,r=r+Math.imul(D,s3)|0,t=t+Math.imul(g2,N2)|0,e=(e=e+Math.imul(g2,M3)|0)+Math.imul(w,N2)|0,r=r+Math.imul(w,M3)|0,t=t+Math.imul(G,r3)|0,e=(e=e+Math.imul(G,B3)|0)+Math.imul(i2,r3)|0,r=r+Math.imul(i2,B3)|0,t=t+Math.imul(J,n3)|0,e=(e=e+Math.imul(J,k3)|0)+Math.imul(a2,n3)|0,r=r+Math.imul(a2,k3)|0,t=t+Math.imul(w2,u3)|0,e=(e=e+Math.imul(w2,y3)|0)+Math.imul(R2,u3)|0,r=r+Math.imul(R2,y3)|0;var k4=(W+(t=t+Math.imul($,t3)|0)|0)+((8191&(e=(e=e+Math.imul($,O3)|0)+Math.imul(Z,t3)|0))<<13)|0;W=((r=r+Math.imul(Z,O3)|0)+(e>>>13)|0)+(k4>>>26)|0,k4&=67108863,t=Math.imul(h2,C2),e=(e=Math.imul(h2,l3))+Math.imul(d2,C2)|0,r=Math.imul(d2,l3),t=t+Math.imul(n2,X2)|0,e=(e=e+Math.imul(n2,v3)|0)+Math.imul(t2,X2)|0,r=r+Math.imul(t2,v3)|0,t=t+Math.imul(q,$2)|0,e=(e=e+Math.imul(q,s3)|0)+Math.imul(V,$2)|0,r=r+Math.imul(V,s3)|0,t=t+Math.imul(v,N2)|0,e=(e=e+Math.imul(v,M3)|0)+Math.imul(D,N2)|0,r=r+Math.imul(D,M3)|0,t=t+Math.imul(g2,r3)|0,e=(e=e+Math.imul(g2,B3)|0)+Math.imul(w,r3)|0,r=r+Math.imul(w,B3)|0,t=t+Math.imul(G,n3)|0,e=(e=e+Math.imul(G,k3)|0)+Math.imul(i2,n3)|0,r=r+Math.imul(i2,k3)|0,t=t+Math.imul(J,u3)|0,e=(e=e+Math.imul(J,y3)|0)+Math.imul(a2,u3)|0,r=r+Math.imul(a2,y3)|0;var R4=(W+(t=t+Math.imul(w2,t3)|0)|0)+((8191&(e=(e=e+Math.imul(w2,O3)|0)+Math.imul(R2,t3)|0))<<13)|0;W=((r=r+Math.imul(R2,O3)|0)+(e>>>13)|0)+(R4>>>26)|0,R4&=67108863,t=Math.imul(h2,X2),e=(e=Math.imul(h2,v3))+Math.imul(d2,X2)|0,r=Math.imul(d2,v3),t=t+Math.imul(n2,$2)|0,e=(e=e+Math.imul(n2,s3)|0)+Math.imul(t2,$2)|0,r=r+Math.imul(t2,s3)|0,t=t+Math.imul(q,N2)|0,e=(e=e+Math.imul(q,M3)|0)+Math.imul(V,N2)|0,r=r+Math.imul(V,M3)|0,t=t+Math.imul(v,r3)|0,e=(e=e+Math.imul(v,B3)|0)+Math.imul(D,r3)|0,r=r+Math.imul(D,B3)|0,t=t+Math.imul(g2,n3)|0,e=(e=e+Math.imul(g2,k3)|0)+Math.imul(w,n3)|0,r=r+Math.imul(w,k3)|0,t=t+Math.imul(G,u3)|0,e=(e=e+Math.imul(G,y3)|0)+Math.imul(i2,u3)|0,r=r+Math.imul(i2,y3)|0;var O4=(W+(t=t+Math.imul(J,t3)|0)|0)+((8191&(e=(e=e+Math.imul(J,O3)|0)+Math.imul(a2,t3)|0))<<13)|0;W=((r=r+Math.imul(a2,O3)|0)+(e>>>13)|0)+(O4>>>26)|0,O4&=67108863,t=Math.imul(h2,$2),e=(e=Math.imul(h2,s3))+Math.imul(d2,$2)|0,r=Math.imul(d2,s3),t=t+Math.imul(n2,N2)|0,e=(e=e+Math.imul(n2,M3)|0)+Math.imul(t2,N2)|0,r=r+Math.imul(t2,M3)|0,t=t+Math.imul(q,r3)|0,e=(e=e+Math.imul(q,B3)|0)+Math.imul(V,r3)|0,r=r+Math.imul(V,B3)|0,t=t+Math.imul(v,n3)|0,e=(e=e+Math.imul(v,k3)|0)+Math.imul(D,n3)|0,r=r+Math.imul(D,k3)|0,t=t+Math.imul(g2,u3)|0,e=(e=e+Math.imul(g2,y3)|0)+Math.imul(w,u3)|0,r=r+Math.imul(w,y3)|0;var P4=(W+(t=t+Math.imul(G,t3)|0)|0)+((8191&(e=(e=e+Math.imul(G,O3)|0)+Math.imul(i2,t3)|0))<<13)|0;W=((r=r+Math.imul(i2,O3)|0)+(e>>>13)|0)+(P4>>>26)|0,P4&=67108863,t=Math.imul(h2,N2),e=(e=Math.imul(h2,M3))+Math.imul(d2,N2)|0,r=Math.imul(d2,M3),t=t+Math.imul(n2,r3)|0,e=(e=e+Math.imul(n2,B3)|0)+Math.imul(t2,r3)|0,r=r+Math.imul(t2,B3)|0,t=t+Math.imul(q,n3)|0,e=(e=e+Math.imul(q,k3)|0)+Math.imul(V,n3)|0,r=r+Math.imul(V,k3)|0,t=t+Math.imul(v,u3)|0,e=(e=e+Math.imul(v,y3)|0)+Math.imul(D,u3)|0,r=r+Math.imul(D,y3)|0;var L4=(W+(t=t+Math.imul(g2,t3)|0)|0)+((8191&(e=(e=e+Math.imul(g2,O3)|0)+Math.imul(w,t3)|0))<<13)|0;W=((r=r+Math.imul(w,O3)|0)+(e>>>13)|0)+(L4>>>26)|0,L4&=67108863,t=Math.imul(h2,r3),e=(e=Math.imul(h2,B3))+Math.imul(d2,r3)|0,r=Math.imul(d2,B3),t=t+Math.imul(n2,n3)|0,e=(e=e+Math.imul(n2,k3)|0)+Math.imul(t2,n3)|0,r=r+Math.imul(t2,k3)|0,t=t+Math.imul(q,u3)|0,e=(e=e+Math.imul(q,y3)|0)+Math.imul(V,u3)|0,r=r+Math.imul(V,y3)|0;var g3=(W+(t=t+Math.imul(v,t3)|0)|0)+((8191&(e=(e=e+Math.imul(v,O3)|0)+Math.imul(D,t3)|0))<<13)|0;W=((r=r+Math.imul(D,O3)|0)+(e>>>13)|0)+(g3>>>26)|0,g3&=67108863,t=Math.imul(h2,n3),e=(e=Math.imul(h2,k3))+Math.imul(d2,n3)|0,r=Math.imul(d2,k3),t=t+Math.imul(n2,u3)|0,e=(e=e+Math.imul(n2,y3)|0)+Math.imul(t2,u3)|0,r=r+Math.imul(t2,y3)|0;var p3=(W+(t=t+Math.imul(q,t3)|0)|0)+((8191&(e=(e=e+Math.imul(q,O3)|0)+Math.imul(V,t3)|0))<<13)|0;W=((r=r+Math.imul(V,O3)|0)+(e>>>13)|0)+(p3>>>26)|0,p3&=67108863,t=Math.imul(h2,u3),e=(e=Math.imul(h2,y3))+Math.imul(d2,u3)|0,r=Math.imul(d2,y3);var C4=(W+(t=t+Math.imul(n2,t3)|0)|0)+((8191&(e=(e=e+Math.imul(n2,O3)|0)+Math.imul(t2,t3)|0))<<13)|0;W=((r=r+Math.imul(t2,O3)|0)+(e>>>13)|0)+(C4>>>26)|0,C4&=67108863;var D4=(W+(t=Math.imul(h2,t3))|0)+((8191&(e=(e=Math.imul(h2,O3))+Math.imul(d2,t3)|0))<<13)|0;return W=((r=Math.imul(d2,O3))+(e>>>13)|0)+(D4>>>26)|0,D4&=67108863,K[0]=A3,K[1]=E3,K[2]=v4,K[3]=y4,K[4]=w4,K[5]=E4,K[6]=I4,K[7]=B4,K[8]=T4,K[9]=p4,K[10]=k4,K[11]=R4,K[12]=O4,K[13]=P4,K[14]=L4,K[15]=g3,K[16]=p3,K[17]=C4,K[18]=D4,W!==0&&(K[19]=W,u.length++),u};function y(d,T,u){return new g().mulp(d,T,u)}function g(d,T){this.x=d,this.y=T}Math.imul||(p=S),i.prototype.mulTo=function(d,T){var u,t=this.length+d.length;return u=this.length===10&&d.length===10?p(this,d,T):t<63?S(this,d,T):t<1024?function(e,r,c){c.negative=r.negative^e.negative,c.length=e.length+r.length;for(var P=0,K=0,W=0;W<c.length-1;W++){var o2=K;K=0;for(var r2=67108863&P,b2=Math.min(W,r.length-1),_2=Math.max(0,W-e.length+1);_2<=b2;_2++){var $=W-_2,Z=(0|e.words[$])*(0|r.words[_2]),p2=67108863&Z;r2=67108863&(p2=p2+r2|0),K+=(o2=(o2=o2+(Z/67108864|0)|0)+(p2>>>26)|0)>>>26,o2&=67108863}c.words[W]=r2,P=o2,o2=K}return P!==0?c.words[W]=P:c.length--,c.strip()}(this,d,T):y(this,d,T),u},g.prototype.makeRBT=function(d){for(var T=new Array(d),u=i.prototype._countBits(d)-1,t=0;t<d;t++)T[t]=this.revBin(t,u,d);return T},g.prototype.revBin=function(d,T,u){if(d===0||d===u-1)return d;for(var t=0,e=0;e<T;e++)t|=(1&d)<<T-e-1,d>>=1;return t},g.prototype.permute=function(d,T,u,t,e,r){for(var c=0;c<r;c++)t[c]=T[d[c]],e[c]=u[d[c]]},g.prototype.transform=function(d,T,u,t,e,r){this.permute(r,d,T,u,t,e);for(var c=1;c<e;c<<=1)for(var P=c<<1,K=Math.cos(2*Math.PI/P),W=Math.sin(2*Math.PI/P),o2=0;o2<e;o2+=P)for(var r2=K,b2=W,_2=0;_2<c;_2++){var $=u[o2+_2],Z=t[o2+_2],p2=u[o2+_2+c],w2=t[o2+_2+c],R2=r2*p2-b2*w2;w2=r2*w2+b2*p2,p2=R2,u[o2+_2]=$+p2,t[o2+_2]=Z+w2,u[o2+_2+c]=$-p2,t[o2+_2+c]=Z-w2,_2!==P&&(R2=K*r2-W*b2,b2=K*b2+W*r2,r2=R2)}},g.prototype.guessLen13b=function(d,T){var u=1|Math.max(T,d),t=1&u,e=0;for(u=u/2|0;u;u>>>=1)e++;return 1<<e+1+t},g.prototype.conjugate=function(d,T,u){if(!(u<=1))for(var t=0;t<u/2;t++){var e=d[t];d[t]=d[u-t-1],d[u-t-1]=e,e=T[t],T[t]=-T[u-t-1],T[u-t-1]=-e}},g.prototype.normalize13b=function(d,T){for(var u=0,t=0;t<T/2;t++){var e=8192*Math.round(d[2*t+1]/T)+Math.round(d[2*t]/T)+u;d[t]=67108863&e,u=e<67108864?0:e/67108864|0}return d},g.prototype.convert13b=function(d,T,u,t){for(var e=0,r=0;r<T;r++)e+=0|d[r],u[2*r]=8191&e,e>>>=13,u[2*r+1]=8191&e,e>>>=13;for(r=2*T;r<t;++r)u[r]=0;E(e===0),E((-8192&e)==0)},g.prototype.stub=function(d){for(var T=new Array(d),u=0;u<d;u++)T[u]=0;return T},g.prototype.mulp=function(d,T,u){var t=2*this.guessLen13b(d.length,T.length),e=this.makeRBT(t),r=this.stub(t),c=new Array(t),P=new Array(t),K=new Array(t),W=new Array(t),o2=new Array(t),r2=new Array(t),b2=u.words;b2.length=t,this.convert13b(d.words,d.length,c,t),this.convert13b(T.words,T.length,W,t),this.transform(c,r,P,K,t,e),this.transform(W,r,o2,r2,t,e);for(var _2=0;_2<t;_2++){var $=P[_2]*o2[_2]-K[_2]*r2[_2];K[_2]=P[_2]*r2[_2]+K[_2]*o2[_2],P[_2]=$}return this.conjugate(P,K,t),this.transform(P,K,b2,r,t,e),this.conjugate(b2,r,t),this.normalize13b(b2,t),u.negative=d.negative^T.negative,u.length=d.length+T.length,u.strip()},i.prototype.mul=function(d){var T=new i(null);return T.words=new Array(this.length+d.length),this.mulTo(d,T)},i.prototype.mulf=function(d){var T=new i(null);return T.words=new Array(this.length+d.length),y(this,d,T)},i.prototype.imul=function(d){return this.clone().mulTo(d,this)},i.prototype.imuln=function(d){E(typeof d=="number"),E(d<67108864);for(var T=0,u=0;u<this.length;u++){var t=(0|this.words[u])*d,e=(67108863&t)+(67108863&T);T>>=26,T+=t/67108864|0,T+=e>>>26,this.words[u]=67108863&e}return T!==0&&(this.words[u]=T,this.length++),this},i.prototype.muln=function(d){return this.clone().imuln(d)},i.prototype.sqr=function(){return this.mul(this)},i.prototype.isqr=function(){return this.imul(this.clone())},i.prototype.pow=function(d){var T=function(r){for(var c=new Array(r.bitLength()),P=0;P<c.length;P++){var K=P/26|0,W=P%26;c[P]=(r.words[K]&1<<W)>>>W}return c}(d);if(T.length===0)return new i(1);for(var u=this,t=0;t<T.length&&T[t]===0;t++,u=u.sqr());if(++t<T.length)for(var e=u.sqr();t<T.length;t++,e=e.sqr())T[t]!==0&&(u=u.mul(e));return u},i.prototype.iushln=function(d){E(typeof d=="number"&&d>=0);var T,u=d%26,t=(d-u)/26,e=67108863>>>26-u<<26-u;if(u!==0){var r=0;for(T=0;T<this.length;T++){var c=this.words[T]&e,P=(0|this.words[T])-c<<u;this.words[T]=P|r,r=c>>>26-u}r&&(this.words[T]=r,this.length++)}if(t!==0){for(T=this.length-1;T>=0;T--)this.words[T+t]=this.words[T];for(T=0;T<t;T++)this.words[T]=0;this.length+=t}return this.strip()},i.prototype.ishln=function(d){return E(this.negative===0),this.iushln(d)},i.prototype.iushrn=function(d,T,u){var t;E(typeof d=="number"&&d>=0),t=T?(T-T%26)/26:0;var e=d%26,r=Math.min((d-e)/26,this.length),c=67108863^67108863>>>e<<e,P=u;if(t-=r,t=Math.max(0,t),P){for(var K=0;K<r;K++)P.words[K]=this.words[K];P.length=r}if(r!==0)if(this.length>r)for(this.length-=r,K=0;K<this.length;K++)this.words[K]=this.words[K+r];else this.words[0]=0,this.length=1;var W=0;for(K=this.length-1;K>=0&&(W!==0||K>=t);K--){var o2=0|this.words[K];this.words[K]=W<<26-e|o2>>>e,W=o2&c}return P&&W!==0&&(P.words[P.length++]=W),this.length===0&&(this.words[0]=0,this.length=1),this.strip()},i.prototype.ishrn=function(d,T,u){return E(this.negative===0),this.iushrn(d,T,u)},i.prototype.shln=function(d){return this.clone().ishln(d)},i.prototype.ushln=function(d){return this.clone().iushln(d)},i.prototype.shrn=function(d){return this.clone().ishrn(d)},i.prototype.ushrn=function(d){return this.clone().iushrn(d)},i.prototype.testn=function(d){E(typeof d=="number"&&d>=0);var T=d%26,u=(d-T)/26,t=1<<T;return!(this.length<=u||!(this.words[u]&t))},i.prototype.imaskn=function(d){E(typeof d=="number"&&d>=0);var T=d%26,u=(d-T)/26;if(E(this.negative===0,"imaskn works only with positive numbers"),this.length<=u)return this;if(T!==0&&u++,this.length=Math.min(u,this.length),T!==0){var t=67108863^67108863>>>T<<T;this.words[this.length-1]&=t}return this.strip()},i.prototype.maskn=function(d){return this.clone().imaskn(d)},i.prototype.iaddn=function(d){return E(typeof d=="number"),E(d<67108864),d<0?this.isubn(-d):this.negative!==0?this.length===1&&(0|this.words[0])<d?(this.words[0]=d-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(d),this.negative=1,this):this._iaddn(d)},i.prototype._iaddn=function(d){this.words[0]+=d;for(var T=0;T<this.length&&this.words[T]>=67108864;T++)this.words[T]-=67108864,T===this.length-1?this.words[T+1]=1:this.words[T+1]++;return this.length=Math.max(this.length,T+1),this},i.prototype.isubn=function(d){if(E(typeof d=="number"),E(d<67108864),d<0)return this.iaddn(-d);if(this.negative!==0)return this.negative=0,this.iaddn(d),this.negative=1,this;if(this.words[0]-=d,this.length===1&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var T=0;T<this.length&&this.words[T]<0;T++)this.words[T]+=67108864,this.words[T+1]-=1;return this.strip()},i.prototype.addn=function(d){return this.clone().iaddn(d)},i.prototype.subn=function(d){return this.clone().isubn(d)},i.prototype.iabs=function(){return this.negative=0,this},i.prototype.abs=function(){return this.clone().iabs()},i.prototype._ishlnsubmul=function(d,T,u){var t,e,r=d.length+u;this._expand(r);var c=0;for(t=0;t<d.length;t++){e=(0|this.words[t+u])+c;var P=(0|d.words[t])*T;c=((e-=67108863&P)>>26)-(P/67108864|0),this.words[t+u]=67108863&e}for(;t<this.length-u;t++)c=(e=(0|this.words[t+u])+c)>>26,this.words[t+u]=67108863&e;if(c===0)return this.strip();for(E(c===-1),c=0,t=0;t<this.length;t++)c=(e=-(0|this.words[t])+c)>>26,this.words[t]=67108863&e;return this.negative=1,this.strip()},i.prototype._wordDiv=function(d,T){var u=(this.length,d.length),t=this.clone(),e=d,r=0|e.words[e.length-1];(u=26-this._countBits(r))!=0&&(e=e.ushln(u),t.iushln(u),r=0|e.words[e.length-1]);var c,P=t.length-e.length;if(T!=="mod"){(c=new i(null)).length=P+1,c.words=new Array(c.length);for(var K=0;K<c.length;K++)c.words[K]=0}var W=t.clone()._ishlnsubmul(e,1,P);W.negative===0&&(t=W,c&&(c.words[P]=1));for(var o2=P-1;o2>=0;o2--){var r2=67108864*(0|t.words[e.length+o2])+(0|t.words[e.length+o2-1]);for(r2=Math.min(r2/r|0,67108863),t._ishlnsubmul(e,r2,o2);t.negative!==0;)r2--,t.negative=0,t._ishlnsubmul(e,1,o2),t.isZero()||(t.negative^=1);c&&(c.words[o2]=r2)}return c&&c.strip(),t.strip(),T!=="div"&&u!==0&&t.iushrn(u),{div:c||null,mod:t}},i.prototype.divmod=function(d,T,u){return E(!d.isZero()),this.isZero()?{div:new i(0),mod:new i(0)}:this.negative!==0&&d.negative===0?(r=this.neg().divmod(d,T),T!=="mod"&&(t=r.div.neg()),T!=="div"&&(e=r.mod.neg(),u&&e.negative!==0&&e.iadd(d)),{div:t,mod:e}):this.negative===0&&d.negative!==0?(r=this.divmod(d.neg(),T),T!=="mod"&&(t=r.div.neg()),{div:t,mod:r.mod}):this.negative&d.negative?(r=this.neg().divmod(d.neg(),T),T!=="div"&&(e=r.mod.neg(),u&&e.negative!==0&&e.isub(d)),{div:r.div,mod:e}):d.length>this.length||this.cmp(d)<0?{div:new i(0),mod:this}:d.length===1?T==="div"?{div:this.divn(d.words[0]),mod:null}:T==="mod"?{div:null,mod:new i(this.modn(d.words[0]))}:{div:this.divn(d.words[0]),mod:new i(this.modn(d.words[0]))}:this._wordDiv(d,T);var t,e,r},i.prototype.div=function(d){return this.divmod(d,"div",!1).div},i.prototype.mod=function(d){return this.divmod(d,"mod",!1).mod},i.prototype.umod=function(d){return this.divmod(d,"mod",!0).mod},i.prototype.divRound=function(d){var T=this.divmod(d);if(T.mod.isZero())return T.div;var u=T.div.negative!==0?T.mod.isub(d):T.mod,t=d.ushrn(1),e=d.andln(1),r=u.cmp(t);return r<0||e===1&&r===0?T.div:T.div.negative!==0?T.div.isubn(1):T.div.iaddn(1)},i.prototype.modn=function(d){E(d<=67108863);for(var T=67108864%d,u=0,t=this.length-1;t>=0;t--)u=(T*u+(0|this.words[t]))%d;return u},i.prototype.idivn=function(d){E(d<=67108863);for(var T=0,u=this.length-1;u>=0;u--){var t=(0|this.words[u])+67108864*T;this.words[u]=t/d|0,T=t%d}return this.strip()},i.prototype.divn=function(d){return this.clone().idivn(d)},i.prototype.egcd=function(d){E(d.negative===0),E(!d.isZero());var T=this,u=d.clone();T=T.negative!==0?T.umod(d):T.clone();for(var t=new i(1),e=new i(0),r=new i(0),c=new i(1),P=0;T.isEven()&&u.isEven();)T.iushrn(1),u.iushrn(1),++P;for(var K=u.clone(),W=T.clone();!T.isZero();){for(var o2=0,r2=1;!(T.words[0]&r2)&&o2<26;++o2,r2<<=1);if(o2>0)for(T.iushrn(o2);o2-- >0;)(t.isOdd()||e.isOdd())&&(t.iadd(K),e.isub(W)),t.iushrn(1),e.iushrn(1);for(var b2=0,_2=1;!(u.words[0]&_2)&&b2<26;++b2,_2<<=1);if(b2>0)for(u.iushrn(b2);b2-- >0;)(r.isOdd()||c.isOdd())&&(r.iadd(K),c.isub(W)),r.iushrn(1),c.iushrn(1);T.cmp(u)>=0?(T.isub(u),t.isub(r),e.isub(c)):(u.isub(T),r.isub(t),c.isub(e))}return{a:r,b:c,gcd:u.iushln(P)}},i.prototype._invmp=function(d){E(d.negative===0),E(!d.isZero());var T=this,u=d.clone();T=T.negative!==0?T.umod(d):T.clone();for(var t,e=new i(1),r=new i(0),c=u.clone();T.cmpn(1)>0&&u.cmpn(1)>0;){for(var P=0,K=1;!(T.words[0]&K)&&P<26;++P,K<<=1);if(P>0)for(T.iushrn(P);P-- >0;)e.isOdd()&&e.iadd(c),e.iushrn(1);for(var W=0,o2=1;!(u.words[0]&o2)&&W<26;++W,o2<<=1);if(W>0)for(u.iushrn(W);W-- >0;)r.isOdd()&&r.iadd(c),r.iushrn(1);T.cmp(u)>=0?(T.isub(u),e.isub(r)):(u.isub(T),r.isub(e))}return(t=T.cmpn(1)===0?e:r).cmpn(0)<0&&t.iadd(d),t},i.prototype.gcd=function(d){if(this.isZero())return d.abs();if(d.isZero())return this.abs();var T=this.clone(),u=d.clone();T.negative=0,u.negative=0;for(var t=0;T.isEven()&&u.isEven();t++)T.iushrn(1),u.iushrn(1);for(;;){for(;T.isEven();)T.iushrn(1);for(;u.isEven();)u.iushrn(1);var e=T.cmp(u);if(e<0){var r=T;T=u,u=r}else if(e===0||u.cmpn(1)===0)break;T.isub(u)}return u.iushln(t)},i.prototype.invm=function(d){return this.egcd(d).a.umod(d)},i.prototype.isEven=function(){return(1&this.words[0])==0},i.prototype.isOdd=function(){return(1&this.words[0])==1},i.prototype.andln=function(d){return this.words[0]&d},i.prototype.bincn=function(d){E(typeof d=="number");var T=d%26,u=(d-T)/26,t=1<<T;if(this.length<=u)return this._expand(u+1),this.words[u]|=t,this;for(var e=t,r=u;e!==0&&r<this.length;r++){var c=0|this.words[r];e=(c+=e)>>>26,c&=67108863,this.words[r]=c}return e!==0&&(this.words[r]=e,this.length++),this},i.prototype.isZero=function(){return this.length===1&&this.words[0]===0},i.prototype.cmpn=function(d){var T,u=d<0;if(this.negative!==0&&!u)return-1;if(this.negative===0&&u)return 1;if(this.strip(),this.length>1)T=1;else{u&&(d=-d),E(d<=67108863,"Number is too big");var t=0|this.words[0];T=t===d?0:t<d?-1:1}return this.negative!==0?0|-T:T},i.prototype.cmp=function(d){if(this.negative!==0&&d.negative===0)return-1;if(this.negative===0&&d.negative!==0)return 1;var T=this.ucmp(d);return this.negative!==0?0|-T:T},i.prototype.ucmp=function(d){if(this.length>d.length)return 1;if(this.length<d.length)return-1;for(var T=0,u=this.length-1;u>=0;u--){var t=0|this.words[u],e=0|d.words[u];if(t!==e){t<e?T=-1:t>e&&(T=1);break}}return T},i.prototype.gtn=function(d){return this.cmpn(d)===1},i.prototype.gt=function(d){return this.cmp(d)===1},i.prototype.gten=function(d){return this.cmpn(d)>=0},i.prototype.gte=function(d){return this.cmp(d)>=0},i.prototype.ltn=function(d){return this.cmpn(d)===-1},i.prototype.lt=function(d){return this.cmp(d)===-1},i.prototype.lten=function(d){return this.cmpn(d)<=0},i.prototype.lte=function(d){return this.cmp(d)<=0},i.prototype.eqn=function(d){return this.cmpn(d)===0},i.prototype.eq=function(d){return this.cmp(d)===0},i.red=function(d){return new Q(d)},i.prototype.toRed=function(d){return E(!this.red,"Already a number in reduction context"),E(this.negative===0,"red works only with positives"),d.convertTo(this)._forceRed(d)},i.prototype.fromRed=function(){return E(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},i.prototype._forceRed=function(d){return this.red=d,this},i.prototype.forceRed=function(d){return E(!this.red,"Already a number in reduction context"),this._forceRed(d)},i.prototype.redAdd=function(d){return E(this.red,"redAdd works only with red numbers"),this.red.add(this,d)},i.prototype.redIAdd=function(d){return E(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,d)},i.prototype.redSub=function(d){return E(this.red,"redSub works only with red numbers"),this.red.sub(this,d)},i.prototype.redISub=function(d){return E(this.red,"redISub works only with red numbers"),this.red.isub(this,d)},i.prototype.redShl=function(d){return E(this.red,"redShl works only with red numbers"),this.red.shl(this,d)},i.prototype.redMul=function(d){return E(this.red,"redMul works only with red numbers"),this.red._verify2(this,d),this.red.mul(this,d)},i.prototype.redIMul=function(d){return E(this.red,"redMul works only with red numbers"),this.red._verify2(this,d),this.red.imul(this,d)},i.prototype.redSqr=function(){return E(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},i.prototype.redISqr=function(){return E(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},i.prototype.redSqrt=function(){return E(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},i.prototype.redInvm=function(){return E(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},i.prototype.redNeg=function(){return E(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},i.prototype.redPow=function(d){return E(this.red&&!d.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,d)};var B={k256:null,p224:null,p192:null,p25519:null};function _(d,T){this.name=d,this.p=new i(T,16),this.n=this.p.bitLength(),this.k=new i(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function L(){_.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function N(){_.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function F(){_.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function z(){_.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function Q(d){if(typeof d=="string"){var T=i._prime(d);this.m=T.p,this.prime=T}else E(d.gtn(1),"modulus must be greater than 1"),this.m=d,this.prime=null}function c2(d){Q.call(this,d),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new i(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}_.prototype._tmp=function(){var d=new i(null);return d.words=new Array(Math.ceil(this.n/13)),d},_.prototype.ireduce=function(d){var T,u=d;do this.split(u,this.tmp),T=(u=(u=this.imulK(u)).iadd(this.tmp)).bitLength();while(T>this.n);var t=T<this.n?-1:u.ucmp(this.p);return t===0?(u.words[0]=0,u.length=1):t>0?u.isub(this.p):u.strip!==void 0?u.strip():u._strip(),u},_.prototype.split=function(d,T){d.iushrn(this.n,0,T)},_.prototype.imulK=function(d){return d.imul(this.k)},I(L,_),L.prototype.split=function(d,T){for(var u=4194303,t=Math.min(d.length,9),e=0;e<t;e++)T.words[e]=d.words[e];if(T.length=t,d.length<=9)return d.words[0]=0,void(d.length=1);var r=d.words[9];for(T.words[T.length++]=r&u,e=10;e<d.length;e++){var c=0|d.words[e];d.words[e-10]=(c&u)<<4|r>>>22,r=c}r>>>=22,d.words[e-10]=r,r===0&&d.length>10?d.length-=10:d.length-=9},L.prototype.imulK=function(d){d.words[d.length]=0,d.words[d.length+1]=0,d.length+=2;for(var T=0,u=0;u<d.length;u++){var t=0|d.words[u];T+=977*t,d.words[u]=67108863&T,T=64*t+(T/67108864|0)}return d.words[d.length-1]===0&&(d.length--,d.words[d.length-1]===0&&d.length--),d},I(N,_),I(F,_),I(z,_),z.prototype.imulK=function(d){for(var T=0,u=0;u<d.length;u++){var t=19*(0|d.words[u])+T,e=67108863&t;t>>>=26,d.words[u]=e,T=t}return T!==0&&(d.words[d.length++]=T),d},i._prime=function(d){if(B[d])return B[d];var T;if(d==="k256")T=new L;else if(d==="p224")T=new N;else if(d==="p192")T=new F;else{if(d!=="p25519")throw new Error("Unknown prime "+d);T=new z}return B[d]=T,T},Q.prototype._verify1=function(d){E(d.negative===0,"red works only with positives"),E(d.red,"red works only with red numbers")},Q.prototype._verify2=function(d,T){E((d.negative|T.negative)==0,"red works only with positives"),E(d.red&&d.red===T.red,"red works only with red numbers")},Q.prototype.imod=function(d){return this.prime?this.prime.ireduce(d)._forceRed(this):d.umod(this.m)._forceRed(this)},Q.prototype.neg=function(d){return d.isZero()?d.clone():this.m.sub(d)._forceRed(this)},Q.prototype.add=function(d,T){this._verify2(d,T);var u=d.add(T);return u.cmp(this.m)>=0&&u.isub(this.m),u._forceRed(this)},Q.prototype.iadd=function(d,T){this._verify2(d,T);var u=d.iadd(T);return u.cmp(this.m)>=0&&u.isub(this.m),u},Q.prototype.sub=function(d,T){this._verify2(d,T);var u=d.sub(T);return u.cmpn(0)<0&&u.iadd(this.m),u._forceRed(this)},Q.prototype.isub=function(d,T){this._verify2(d,T);var u=d.isub(T);return u.cmpn(0)<0&&u.iadd(this.m),u},Q.prototype.shl=function(d,T){return this._verify1(d),this.imod(d.ushln(T))},Q.prototype.imul=function(d,T){return this._verify2(d,T),this.imod(d.imul(T))},Q.prototype.mul=function(d,T){return this._verify2(d,T),this.imod(d.mul(T))},Q.prototype.isqr=function(d){return this.imul(d,d.clone())},Q.prototype.sqr=function(d){return this.mul(d,d)},Q.prototype.sqrt=function(d){if(d.isZero())return d.clone();var T=this.m.andln(3);if(E(T%2==1),T===3){var u=this.m.add(new i(1)).iushrn(2);return this.pow(d,u)}for(var t=this.m.subn(1),e=0;!t.isZero()&&t.andln(1)===0;)e++,t.iushrn(1);E(!t.isZero());var r=new i(1).toRed(this),c=r.redNeg(),P=this.m.subn(1).iushrn(1),K=this.m.bitLength();for(K=new i(2*K*K).toRed(this);this.pow(K,P).cmp(c)!==0;)K.redIAdd(c);for(var W=this.pow(K,t),o2=this.pow(d,t.addn(1).iushrn(1)),r2=this.pow(d,t),b2=e;r2.cmp(r)!==0;){for(var _2=r2,$=0;_2.cmp(r)!==0;$++)_2=_2.redSqr();E($<b2);var Z=this.pow(W,new i(1).iushln(b2-$-1));o2=o2.redMul(Z),W=Z.redSqr(),r2=r2.redMul(W),b2=$}return o2},Q.prototype.invm=function(d){var T=d._invmp(this.m);return T.negative!==0?(T.negative=0,this.imod(T).redNeg()):this.imod(T)},Q.prototype.pow=function(d,T){if(T.isZero())return new i(1).toRed(this);if(T.cmpn(1)===0)return d.clone();var u=new Array(16);u[0]=new i(1).toRed(this),u[1]=d;for(var t=2;t<u.length;t++)u[t]=this.mul(u[t-1],d);var e=u[0],r=0,c=0,P=T.bitLength()%26;for(P===0&&(P=26),t=T.length-1;t>=0;t--){for(var K=T.words[t],W=P-1;W>=0;W--){var o2=K>>W&1;e!==u[0]&&(e=this.sqr(e)),o2!==0||r!==0?(r<<=1,r|=o2,(++c==4||t===0&&W===0)&&(e=this.mul(e,u[r]),c=0,r=0)):c=0}P=26}return e},Q.prototype.convertTo=function(d){var T=d.umod(this.m);return T===d?T.clone():T},Q.prototype.convertFrom=function(d){var T=d.clone();return T.red=null,T},i.mont=function(d){return new c2(d)},I(c2,Q),c2.prototype.convertTo=function(d){return this.imod(d.ushln(this.shift))},c2.prototype.convertFrom=function(d){var T=this.imod(d.mul(this.rinv));return T.red=null,T},c2.prototype.imul=function(d,T){if(d.isZero()||T.isZero())return d.words[0]=0,d.length=1,d;var u=d.imul(T),t=u.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),e=u.isub(t).iushrn(this.shift),r=e;return e.cmp(this.m)>=0?r=e.isub(this.m):e.cmpn(0)<0&&(r=e.iadd(this.m)),r._forceRed(this)},c2.prototype.mul=function(d,T){if(d.isZero()||T.isZero())return new i(0)._forceRed(this);var u=d.mul(T),t=u.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),e=u.isub(t).iushrn(this.shift),r=e;return e.cmp(this.m)>=0?r=e.isub(this.m):e.cmpn(0)<0&&(r=e.iadd(this.m)),r._forceRed(this)},c2.prototype.invm=function(d){return this.imod(d._invmp(this.m).mul(this.r2))._forceRed(this)}})(u2=A.nmd(u2),this)},7187:u2=>{var O,A=typeof Reflect=="object"?Reflect:null,C=A&&typeof A.apply=="function"?A.apply:function(p,y,g){return Function.prototype.apply.call(p,y,g)};O=A&&typeof A.ownKeys=="function"?A.ownKeys:Object.getOwnPropertySymbols?function(p){return Object.getOwnPropertyNames(p).concat(Object.getOwnPropertySymbols(p))}:function(p){return Object.getOwnPropertyNames(p)};var b=Number.isNaN||function(p){return p!=p};function E(){E.init.call(this)}u2.exports=E,u2.exports.once=function(p,y){return new Promise(function(g,B){function _(N){p.removeListener(y,L),B(N)}function L(){typeof p.removeListener=="function"&&p.removeListener("error",_),g([].slice.call(arguments))}S(p,y,L,{once:!0}),y!=="error"&&function(N,F,z){typeof N.on=="function"&&S(N,"error",F,{once:!0})}(p,_)})},E.EventEmitter=E,E.prototype._events=void 0,E.prototype._eventsCount=0,E.prototype._maxListeners=void 0;var I=10;function i(p){if(typeof p!="function")throw new TypeError('The "listener" argument must be of type Function. Received type '+typeof p)}function M(p){return p._maxListeners===void 0?E.defaultMaxListeners:p._maxListeners}function h(p,y,g,B){var _,L,N,F;if(i(g),(L=p._events)===void 0?(L=p._events=Object.create(null),p._eventsCount=0):(L.newListener!==void 0&&(p.emit("newListener",y,g.listener?g.listener:g),L=p._events),N=L[y]),N===void 0)N=L[y]=g,++p._eventsCount;else if(typeof N=="function"?N=L[y]=B?[g,N]:[N,g]:B?N.unshift(g):N.push(g),(_=M(p))>0&&N.length>_&&!N.warned){N.warned=!0;var z=new Error("Possible EventEmitter memory leak detected. "+N.length+" "+String(y)+" listeners added. Use emitter.setMaxListeners() to increase limit");z.name="MaxListenersExceededWarning",z.emitter=p,z.type=y,z.count=N.length,F=z,console&&console.warn&&console.warn(F)}return p}function a(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,arguments.length===0?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function o(p,y,g){var B={fired:!1,wrapFn:void 0,target:p,type:y,listener:g},_=a.bind(B);return _.listener=g,B.wrapFn=_,_}function s(p,y,g){var B=p._events;if(B===void 0)return[];var _=B[y];return _===void 0?[]:typeof _=="function"?g?[_.listener||_]:[_]:g?function(L){for(var N=new Array(L.length),F=0;F<N.length;++F)N[F]=L[F].listener||L[F];return N}(_):x(_,_.length)}function m(p){var y=this._events;if(y!==void 0){var g=y[p];if(typeof g=="function")return 1;if(g!==void 0)return g.length}return 0}function x(p,y){for(var g=new Array(y),B=0;B<y;++B)g[B]=p[B];return g}function S(p,y,g,B){if(typeof p.on=="function")B.once?p.once(y,g):p.on(y,g);else{if(typeof p.addEventListener!="function")throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type '+typeof p);p.addEventListener(y,function _(L){B.once&&p.removeEventListener(y,_),g(L)})}}Object.defineProperty(E,"defaultMaxListeners",{enumerable:!0,get:function(){return I},set:function(p){if(typeof p!="number"||p<0||b(p))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+p+".");I=p}}),E.init=function(){this._events!==void 0&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},E.prototype.setMaxListeners=function(p){if(typeof p!="number"||p<0||b(p))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+p+".");return this._maxListeners=p,this},E.prototype.getMaxListeners=function(){return M(this)},E.prototype.emit=function(p){for(var y=[],g=1;g<arguments.length;g++)y.push(arguments[g]);var B=p==="error",_=this._events;if(_!==void 0)B=B&&_.error===void 0;else if(!B)return!1;if(B){var L;if(y.length>0&&(L=y[0]),L instanceof Error)throw L;var N=new Error("Unhandled error."+(L?" ("+L.message+")":""));throw N.context=L,N}var F=_[p];if(F===void 0)return!1;if(typeof F=="function")C(F,this,y);else{var z=F.length,Q=x(F,z);for(g=0;g<z;++g)C(Q[g],this,y)}return!0},E.prototype.addListener=function(p,y){return h(this,p,y,!1)},E.prototype.on=E.prototype.addListener,E.prototype.prependListener=function(p,y){return h(this,p,y,!0)},E.prototype.once=function(p,y){return i(y),this.on(p,o(this,p,y)),this},E.prototype.prependOnceListener=function(p,y){return i(y),this.prependListener(p,o(this,p,y)),this},E.prototype.removeListener=function(p,y){var g,B,_,L,N;if(i(y),(B=this._events)===void 0)return this;if((g=B[p])===void 0)return this;if(g===y||g.listener===y)--this._eventsCount==0?this._events=Object.create(null):(delete B[p],B.removeListener&&this.emit("removeListener",p,g.listener||y));else if(typeof g!="function"){for(_=-1,L=g.length-1;L>=0;L--)if(g[L]===y||g[L].listener===y){N=g[L].listener,_=L;break}if(_<0)return this;_===0?g.shift():function(F,z){for(;z+1<F.length;z++)F[z]=F[z+1];F.pop()}(g,_),g.length===1&&(B[p]=g[0]),B.removeListener!==void 0&&this.emit("removeListener",p,N||y)}return this},E.prototype.off=E.prototype.removeListener,E.prototype.removeAllListeners=function(p){var y,g,B;if((g=this._events)===void 0)return this;if(g.removeListener===void 0)return arguments.length===0?(this._events=Object.create(null),this._eventsCount=0):g[p]!==void 0&&(--this._eventsCount==0?this._events=Object.create(null):delete g[p]),this;if(arguments.length===0){var _,L=Object.keys(g);for(B=0;B<L.length;++B)(_=L[B])!=="removeListener"&&this.removeAllListeners(_);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if(typeof(y=g[p])=="function")this.removeListener(p,y);else if(y!==void 0)for(B=y.length-1;B>=0;B--)this.removeListener(p,y[B]);return this},E.prototype.listeners=function(p){return s(this,p,!0)},E.prototype.rawListeners=function(p){return s(this,p,!1)},E.listenerCount=function(p,y){return typeof p.listenerCount=="function"?p.listenerCount(y):m.call(p,y)},E.prototype.listenerCount=m,E.prototype.eventNames=function(){return this._eventsCount>0?O(this._events):[]}},3349:(u2,O,A)=>{var C=A(9509).Buffer,b=A(8473).Transform;function E(I){b.call(this),this._block=C.allocUnsafe(I),this._blockSize=I,this._blockOffset=0,this._length=[0,0,0,0],this._finalized=!1}A(5717)(E,b),E.prototype._transform=function(I,i,M){var h=null;try{this.update(I,i)}catch(a){h=a}M(h)},E.prototype._flush=function(I){var i=null;try{this.push(this.digest())}catch(M){i=M}I(i)},E.prototype.update=function(I,i){if(function(m,x){if(!C.isBuffer(m)&&typeof m!="string")throw new TypeError("Data must be a string or a buffer")}(I),this._finalized)throw new Error("Digest already called");C.isBuffer(I)||(I=C.from(I,i));for(var M=this._block,h=0;this._blockOffset+I.length-h>=this._blockSize;){for(var a=this._blockOffset;a<this._blockSize;)M[a++]=I[h++];this._update(),this._blockOffset=0}for(;h<I.length;)M[this._blockOffset++]=I[h++];for(var o=0,s=8*I.length;s>0;++o)this._length[o]+=s,(s=this._length[o]/4294967296|0)>0&&(this._length[o]-=4294967296*s);return this},E.prototype._update=function(){throw new Error("_update is not implemented")},E.prototype.digest=function(I){if(this._finalized)throw new Error("Digest already called");this._finalized=!0;var i=this._digest();I!==void 0&&(i=i.toString(I)),this._block.fill(0),this._blockOffset=0;for(var M=0;M<4;++M)this._length[M]=0;return i},E.prototype._digest=function(){throw new Error("_digest is not implemented")},u2.exports=E},3715:(u2,O,A)=>{var C=O;C.utils=A(6436),C.common=A(5772),C.sha=A(9041),C.ripemd=A(2949),C.hmac=A(2344),C.sha1=C.sha.sha1,C.sha256=C.sha.sha256,C.sha224=C.sha.sha224,C.sha384=C.sha.sha384,C.sha512=C.sha.sha512,C.ripemd160=C.ripemd.ripemd160},5772:(u2,O,A)=>{var C=A(6436),b=A(9746);function E(){this.pending=null,this.pendingTotal=0,this.blockSize=this.constructor.blockSize,this.outSize=this.constructor.outSize,this.hmacStrength=this.constructor.hmacStrength,this.padLength=this.constructor.padLength/8,this.endian="big",this._delta8=this.blockSize/8,this._delta32=this.blockSize/32}O.BlockHash=E,E.prototype.update=function(I,i){if(I=C.toArray(I,i),this.pending?this.pending=this.pending.concat(I):this.pending=I,this.pendingTotal+=I.length,this.pending.length>=this._delta8){var M=(I=this.pending).length%this._delta8;this.pending=I.slice(I.length-M,I.length),this.pending.length===0&&(this.pending=null),I=C.join32(I,0,I.length-M,this.endian);for(var h=0;h<I.length;h+=this._delta32)this._update(I,h,h+this._delta32)}return this},E.prototype.digest=function(I){return this.update(this._pad()),b(this.pending===null),this._digest(I)},E.prototype._pad=function(){var I=this.pendingTotal,i=this._delta8,M=i-(I+this.padLength)%i,h=new Array(M+this.padLength);h[0]=128;for(var a=1;a<M;a++)h[a]=0;if(I<<=3,this.endian==="big"){for(var o=8;o<this.padLength;o++)h[a++]=0;h[a++]=0,h[a++]=0,h[a++]=0,h[a++]=0,h[a++]=I>>>24&255,h[a++]=I>>>16&255,h[a++]=I>>>8&255,h[a++]=255&I}else for(h[a++]=255&I,h[a++]=I>>>8&255,h[a++]=I>>>16&255,h[a++]=I>>>24&255,h[a++]=0,h[a++]=0,h[a++]=0,h[a++]=0,o=8;o<this.padLength;o++)h[a++]=0;return h}},2344:(u2,O,A)=>{var C=A(6436),b=A(9746);function E(I,i,M){if(!(this instanceof E))return new E(I,i,M);this.Hash=I,this.blockSize=I.blockSize/8,this.outSize=I.outSize/8,this.inner=null,this.outer=null,this._init(C.toArray(i,M))}u2.exports=E,E.prototype._init=function(I){I.length>this.blockSize&&(I=new this.Hash().update(I).digest()),b(I.length<=this.blockSize);for(var i=I.length;i<this.blockSize;i++)I.push(0);for(i=0;i<I.length;i++)I[i]^=54;for(this.inner=new this.Hash().update(I),i=0;i<I.length;i++)I[i]^=106;this.outer=new this.Hash().update(I)},E.prototype.update=function(I,i){return this.inner.update(I,i),this},E.prototype.digest=function(I){return this.outer.update(this.inner.digest()),this.outer.digest(I)}},2949:(u2,O,A)=>{var C=A(6436),b=A(5772),E=C.rotl32,I=C.sum32,i=C.sum32_3,M=C.sum32_4,h=b.BlockHash;function a(){if(!(this instanceof a))return new a;h.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.endian="little"}function o(g,B,_,L){return g<=15?B^_^L:g<=31?B&_|~B&L:g<=47?(B|~_)^L:g<=63?B&L|_&~L:B^(_|~L)}function s(g){return g<=15?0:g<=31?1518500249:g<=47?1859775393:g<=63?2400959708:2840853838}function m(g){return g<=15?1352829926:g<=31?1548603684:g<=47?1836072691:g<=63?2053994217:0}C.inherits(a,h),O.ripemd160=a,a.blockSize=512,a.outSize=160,a.hmacStrength=192,a.padLength=64,a.prototype._update=function(g,B){for(var _=this.h[0],L=this.h[1],N=this.h[2],F=this.h[3],z=this.h[4],Q=_,c2=L,d=N,T=F,u=z,t=0;t<80;t++){var e=I(E(M(_,o(t,L,N,F),g[x[t]+B],s(t)),p[t]),z);_=z,z=F,F=E(N,10),N=L,L=e,e=I(E(M(Q,o(79-t,c2,d,T),g[S[t]+B],m(t)),y[t]),u),Q=u,u=T,T=E(d,10),d=c2,c2=e}e=i(this.h[1],N,T),this.h[1]=i(this.h[2],F,u),this.h[2]=i(this.h[3],z,Q),this.h[3]=i(this.h[4],_,c2),this.h[4]=i(this.h[0],L,d),this.h[0]=e},a.prototype._digest=function(g){return g==="hex"?C.toHex32(this.h,"little"):C.split32(this.h,"little")};var x=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],S=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],p=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],y=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11]},9041:(u2,O,A)=>{O.sha1=A(4761),O.sha224=A(799),O.sha256=A(9344),O.sha384=A(772),O.sha512=A(5900)},4761:(u2,O,A)=>{var C=A(6436),b=A(5772),E=A(7038),I=C.rotl32,i=C.sum32,M=C.sum32_5,h=E.ft_1,a=b.BlockHash,o=[1518500249,1859775393,2400959708,3395469782];function s(){if(!(this instanceof s))return new s;a.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.W=new Array(80)}C.inherits(s,a),u2.exports=s,s.blockSize=512,s.outSize=160,s.hmacStrength=80,s.padLength=64,s.prototype._update=function(m,x){for(var S=this.W,p=0;p<16;p++)S[p]=m[x+p];for(;p<S.length;p++)S[p]=I(S[p-3]^S[p-8]^S[p-14]^S[p-16],1);var y=this.h[0],g=this.h[1],B=this.h[2],_=this.h[3],L=this.h[4];for(p=0;p<S.length;p++){var N=~~(p/20),F=M(I(y,5),h(N,g,B,_),L,S[p],o[N]);L=_,_=B,B=I(g,30),g=y,y=F}this.h[0]=i(this.h[0],y),this.h[1]=i(this.h[1],g),this.h[2]=i(this.h[2],B),this.h[3]=i(this.h[3],_),this.h[4]=i(this.h[4],L)},s.prototype._digest=function(m){return m==="hex"?C.toHex32(this.h,"big"):C.split32(this.h,"big")}},799:(u2,O,A)=>{var C=A(6436),b=A(9344);function E(){if(!(this instanceof E))return new E;b.call(this),this.h=[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428]}C.inherits(E,b),u2.exports=E,E.blockSize=512,E.outSize=224,E.hmacStrength=192,E.padLength=64,E.prototype._digest=function(I){return I==="hex"?C.toHex32(this.h.slice(0,7),"big"):C.split32(this.h.slice(0,7),"big")}},9344:(u2,O,A)=>{var C=A(6436),b=A(5772),E=A(7038),I=A(9746),i=C.sum32,M=C.sum32_4,h=C.sum32_5,a=E.ch32,o=E.maj32,s=E.s0_256,m=E.s1_256,x=E.g0_256,S=E.g1_256,p=b.BlockHash,y=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];function g(){if(!(this instanceof g))return new g;p.call(this),this.h=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],this.k=y,this.W=new Array(64)}C.inherits(g,p),u2.exports=g,g.blockSize=512,g.outSize=256,g.hmacStrength=192,g.padLength=64,g.prototype._update=function(B,_){for(var L=this.W,N=0;N<16;N++)L[N]=B[_+N];for(;N<L.length;N++)L[N]=M(S(L[N-2]),L[N-7],x(L[N-15]),L[N-16]);var F=this.h[0],z=this.h[1],Q=this.h[2],c2=this.h[3],d=this.h[4],T=this.h[5],u=this.h[6],t=this.h[7];for(I(this.k.length===L.length),N=0;N<L.length;N++){var e=h(t,m(d),a(d,T,u),this.k[N],L[N]),r=i(s(F),o(F,z,Q));t=u,u=T,T=d,d=i(c2,e),c2=Q,Q=z,z=F,F=i(e,r)}this.h[0]=i(this.h[0],F),this.h[1]=i(this.h[1],z),this.h[2]=i(this.h[2],Q),this.h[3]=i(this.h[3],c2),this.h[4]=i(this.h[4],d),this.h[5]=i(this.h[5],T),this.h[6]=i(this.h[6],u),this.h[7]=i(this.h[7],t)},g.prototype._digest=function(B){return B==="hex"?C.toHex32(this.h,"big"):C.split32(this.h,"big")}},772:(u2,O,A)=>{var C=A(6436),b=A(5900);function E(){if(!(this instanceof E))return new E;b.call(this),this.h=[3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428]}C.inherits(E,b),u2.exports=E,E.blockSize=1024,E.outSize=384,E.hmacStrength=192,E.padLength=128,E.prototype._digest=function(I){return I==="hex"?C.toHex32(this.h.slice(0,12),"big"):C.split32(this.h.slice(0,12),"big")}},5900:(u2,O,A)=>{var C=A(6436),b=A(5772),E=A(9746),I=C.rotr64_hi,i=C.rotr64_lo,M=C.shr64_hi,h=C.shr64_lo,a=C.sum64,o=C.sum64_hi,s=C.sum64_lo,m=C.sum64_4_hi,x=C.sum64_4_lo,S=C.sum64_5_hi,p=C.sum64_5_lo,y=b.BlockHash,g=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function B(){if(!(this instanceof B))return new B;y.call(this),this.h=[1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209],this.k=g,this.W=new Array(160)}function _(t,e,r,c,P){var K=t&r^~t&P;return K<0&&(K+=4294967296),K}function L(t,e,r,c,P,K){var W=e&c^~e&K;return W<0&&(W+=4294967296),W}function N(t,e,r,c,P){var K=t&r^t&P^r&P;return K<0&&(K+=4294967296),K}function F(t,e,r,c,P,K){var W=e&c^e&K^c&K;return W<0&&(W+=4294967296),W}function z(t,e){var r=I(t,e,28)^I(e,t,2)^I(e,t,7);return r<0&&(r+=4294967296),r}function Q(t,e){var r=i(t,e,28)^i(e,t,2)^i(e,t,7);return r<0&&(r+=4294967296),r}function c2(t,e){var r=i(t,e,14)^i(t,e,18)^i(e,t,9);return r<0&&(r+=4294967296),r}function d(t,e){var r=I(t,e,1)^I(t,e,8)^M(t,e,7);return r<0&&(r+=4294967296),r}function T(t,e){var r=i(t,e,1)^i(t,e,8)^h(t,e,7);return r<0&&(r+=4294967296),r}function u(t,e){var r=i(t,e,19)^i(e,t,29)^h(t,e,6);return r<0&&(r+=4294967296),r}C.inherits(B,y),u2.exports=B,B.blockSize=1024,B.outSize=512,B.hmacStrength=192,B.padLength=128,B.prototype._prepareBlock=function(t,e){for(var r=this.W,c=0;c<32;c++)r[c]=t[e+c];for(;c<r.length;c+=2){var P=(Z=r[c-4],p2=r[c-3],w2=void 0,(w2=I(Z,p2,19)^I(p2,Z,29)^M(Z,p2,6))<0&&(w2+=4294967296),w2),K=u(r[c-4],r[c-3]),W=r[c-14],o2=r[c-13],r2=d(r[c-30],r[c-29]),b2=T(r[c-30],r[c-29]),_2=r[c-32],$=r[c-31];r[c]=m(P,K,W,o2,r2,b2,_2,$),r[c+1]=x(P,K,W,o2,r2,b2,_2,$)}var Z,p2,w2},B.prototype._update=function(t,e){this._prepareBlock(t,e);var r,c,P,K=this.W,W=this.h[0],o2=this.h[1],r2=this.h[2],b2=this.h[3],_2=this.h[4],$=this.h[5],Z=this.h[6],p2=this.h[7],w2=this.h[8],R2=this.h[9],P2=this.h[10],J=this.h[11],a2=this.h[12],Y=this.h[13],G=this.h[14],i2=this.h[15];E(this.k.length===K.length);for(var v2=0;v2<K.length;v2+=2){var g2=G,w=i2,k=(P=void 0,(P=I(r=w2,c=R2,14)^I(r,c,18)^I(c,r,9))<0&&(P+=4294967296),P),v=c2(w2,R2),D=_(w2,0,P2,0,a2),j=L(0,R2,0,J,0,Y),q=this.k[v2],V=this.k[v2+1],l2=K[v2],n2=K[v2+1],t2=S(g2,w,k,v,D,j,q,V,l2,n2),s2=p(g2,w,k,v,D,j,q,V,l2,n2);g2=z(W,o2),w=Q(W,o2),k=N(W,0,r2,0,_2),v=F(0,o2,0,b2,0,$);var h2=o(g2,w,k,v),d2=s(g2,w,k,v);G=a2,i2=Y,a2=P2,Y=J,P2=w2,J=R2,w2=o(Z,p2,t2,s2),R2=s(p2,p2,t2,s2),Z=_2,p2=$,_2=r2,$=b2,r2=W,b2=o2,W=o(t2,s2,h2,d2),o2=s(t2,s2,h2,d2)}a(this.h,0,W,o2),a(this.h,2,r2,b2),a(this.h,4,_2,$),a(this.h,6,Z,p2),a(this.h,8,w2,R2),a(this.h,10,P2,J),a(this.h,12,a2,Y),a(this.h,14,G,i2)},B.prototype._digest=function(t){return t==="hex"?C.toHex32(this.h,"big"):C.split32(this.h,"big")}},7038:(u2,O,A)=>{var C=A(6436).rotr32;function b(i,M,h){return i&M^~i&h}function E(i,M,h){return i&M^i&h^M&h}function I(i,M,h){return i^M^h}O.ft_1=function(i,M,h,a){return i===0?b(M,h,a):i===1||i===3?I(M,h,a):i===2?E(M,h,a):void 0},O.ch32=b,O.maj32=E,O.p32=I,O.s0_256=function(i){return C(i,2)^C(i,13)^C(i,22)},O.s1_256=function(i){return C(i,6)^C(i,11)^C(i,25)},O.g0_256=function(i){return C(i,7)^C(i,18)^i>>>3},O.g1_256=function(i){return C(i,17)^C(i,19)^i>>>10}},6436:(u2,O,A)=>{var C=A(9746),b=A(5717);function E(h,a){return(64512&h.charCodeAt(a))==55296&&!(a<0||a+1>=h.length)&&(64512&h.charCodeAt(a+1))==56320}function I(h){return(h>>>24|h>>>8&65280|h<<8&16711680|(255&h)<<24)>>>0}function i(h){return h.length===1?"0"+h:h}function M(h){return h.length===7?"0"+h:h.length===6?"00"+h:h.length===5?"000"+h:h.length===4?"0000"+h:h.length===3?"00000"+h:h.length===2?"000000"+h:h.length===1?"0000000"+h:h}O.inherits=b,O.toArray=function(h,a){if(Array.isArray(h))return h.slice();if(!h)return[];var o=[];if(typeof h=="string")if(a){if(a==="hex")for((h=h.replace(/[^a-z0-9]+/gi,"")).length%2!=0&&(h="0"+h),m=0;m<h.length;m+=2)o.push(parseInt(h[m]+h[m+1],16))}else for(var s=0,m=0;m<h.length;m++){var x=h.charCodeAt(m);x<128?o[s++]=x:x<2048?(o[s++]=x>>6|192,o[s++]=63&x|128):E(h,m)?(x=65536+((1023&x)<<10)+(1023&h.charCodeAt(++m)),o[s++]=x>>18|240,o[s++]=x>>12&63|128,o[s++]=x>>6&63|128,o[s++]=63&x|128):(o[s++]=x>>12|224,o[s++]=x>>6&63|128,o[s++]=63&x|128)}else for(m=0;m<h.length;m++)o[m]=0|h[m];return o},O.toHex=function(h){for(var a="",o=0;o<h.length;o++)a+=i(h[o].toString(16));return a},O.htonl=I,O.toHex32=function(h,a){for(var o="",s=0;s<h.length;s++){var m=h[s];a==="little"&&(m=I(m)),o+=M(m.toString(16))}return o},O.zero2=i,O.zero8=M,O.join32=function(h,a,o,s){var m=o-a;C(m%4==0);for(var x=new Array(m/4),S=0,p=a;S<x.length;S++,p+=4){var y;y=s==="big"?h[p]<<24|h[p+1]<<16|h[p+2]<<8|h[p+3]:h[p+3]<<24|h[p+2]<<16|h[p+1]<<8|h[p],x[S]=y>>>0}return x},O.split32=function(h,a){for(var o=new Array(4*h.length),s=0,m=0;s<h.length;s++,m+=4){var x=h[s];a==="big"?(o[m]=x>>>24,o[m+1]=x>>>16&255,o[m+2]=x>>>8&255,o[m+3]=255&x):(o[m+3]=x>>>24,o[m+2]=x>>>16&255,o[m+1]=x>>>8&255,o[m]=255&x)}return o},O.rotr32=function(h,a){return h>>>a|h<<32-a},O.rotl32=function(h,a){return h<<a|h>>>32-a},O.sum32=function(h,a){return h+a>>>0},O.sum32_3=function(h,a,o){return h+a+o>>>0},O.sum32_4=function(h,a,o,s){return h+a+o+s>>>0},O.sum32_5=function(h,a,o,s,m){return h+a+o+s+m>>>0},O.sum64=function(h,a,o,s){var m=h[a],x=s+h[a+1]>>>0,S=(x<s?1:0)+o+m;h[a]=S>>>0,h[a+1]=x},O.sum64_hi=function(h,a,o,s){return(a+s>>>0<a?1:0)+h+o>>>0},O.sum64_lo=function(h,a,o,s){return a+s>>>0},O.sum64_4_hi=function(h,a,o,s,m,x,S,p){var y=0,g=a;return y+=(g=g+s>>>0)<a?1:0,y+=(g=g+x>>>0)<x?1:0,h+o+m+S+(y+=(g=g+p>>>0)<p?1:0)>>>0},O.sum64_4_lo=function(h,a,o,s,m,x,S,p){return a+s+x+p>>>0},O.sum64_5_hi=function(h,a,o,s,m,x,S,p,y,g){var B=0,_=a;return B+=(_=_+s>>>0)<a?1:0,B+=(_=_+x>>>0)<x?1:0,B+=(_=_+p>>>0)<p?1:0,h+o+m+S+y+(B+=(_=_+g>>>0)<g?1:0)>>>0},O.sum64_5_lo=function(h,a,o,s,m,x,S,p,y,g){return a+s+x+p+g>>>0},O.rotr64_hi=function(h,a,o){return(a<<32-o|h>>>o)>>>0},O.rotr64_lo=function(h,a,o){return(h<<32-o|a>>>o)>>>0},O.shr64_hi=function(h,a,o){return h>>>o},O.shr64_lo=function(h,a,o){return(h<<32-o|a>>>o)>>>0}},2156:(u2,O,A)=>{var C=A(3715),b=A(4504),E=A(9746);function I(i){if(!(this instanceof I))return new I(i);this.hash=i.hash,this.predResist=!!i.predResist,this.outLen=this.hash.outSize,this.minEntropy=i.minEntropy||this.hash.hmacStrength,this._reseed=null,this.reseedInterval=null,this.K=null,this.V=null;var M=b.toArray(i.entropy,i.entropyEnc||"hex"),h=b.toArray(i.nonce,i.nonceEnc||"hex"),a=b.toArray(i.pers,i.persEnc||"hex");E(M.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._init(M,h,a)}u2.exports=I,I.prototype._init=function(i,M,h){var a=i.concat(M).concat(h);this.K=new Array(this.outLen/8),this.V=new Array(this.outLen/8);for(var o=0;o<this.V.length;o++)this.K[o]=0,this.V[o]=1;this._update(a),this._reseed=1,this.reseedInterval=281474976710656},I.prototype._hmac=function(){return new C.hmac(this.hash,this.K)},I.prototype._update=function(i){var M=this._hmac().update(this.V).update([0]);i&&(M=M.update(i)),this.K=M.digest(),this.V=this._hmac().update(this.V).digest(),i&&(this.K=this._hmac().update(this.V).update([1]).update(i).digest(),this.V=this._hmac().update(this.V).digest())},I.prototype.reseed=function(i,M,h,a){typeof M!="string"&&(a=h,h=M,M=null),i=b.toArray(i,M),h=b.toArray(h,a),E(i.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._update(i.concat(h||[])),this._reseed=1},I.prototype.generate=function(i,M,h,a){if(this._reseed>this.reseedInterval)throw new Error("Reseed is required");typeof M!="string"&&(a=h,h=M,M=null),h&&(h=b.toArray(h,a||"hex"),this._update(h));for(var o=[];o.length<i;)this.V=this._hmac().update(this.V).digest(),o=o.concat(this.V);var s=o.slice(0,i);return this._update(h),this._reseed++,b.encode(s,M)}},645:(u2,O)=>{O.read=function(A,C,b,E,I){var i,M,h=8*I-E-1,a=(1<<h)-1,o=a>>1,s=-7,m=b?I-1:0,x=b?-1:1,S=A[C+m];for(m+=x,i=S&(1<<-s)-1,S>>=-s,s+=h;s>0;i=256*i+A[C+m],m+=x,s-=8);for(M=i&(1<<-s)-1,i>>=-s,s+=E;s>0;M=256*M+A[C+m],m+=x,s-=8);if(i===0)i=1-o;else{if(i===a)return M?NaN:1/0*(S?-1:1);M+=Math.pow(2,E),i-=o}return(S?-1:1)*M*Math.pow(2,i-E)},O.write=function(A,C,b,E,I,i){var M,h,a,o=8*i-I-1,s=(1<<o)-1,m=s>>1,x=I===23?Math.pow(2,-24)-Math.pow(2,-77):0,S=E?0:i-1,p=E?1:-1,y=C<0||C===0&&1/C<0?1:0;for(C=Math.abs(C),isNaN(C)||C===1/0?(h=isNaN(C)?1:0,M=s):(M=Math.floor(Math.log(C)/Math.LN2),C*(a=Math.pow(2,-M))<1&&(M--,a*=2),(C+=M+m>=1?x/a:x*Math.pow(2,1-m))*a>=2&&(M++,a/=2),M+m>=s?(h=0,M=s):M+m>=1?(h=(C*a-1)*Math.pow(2,I),M+=m):(h=C*Math.pow(2,m-1)*Math.pow(2,I),M=0));I>=8;A[b+S]=255&h,S+=p,h/=256,I-=8);for(M=M<<I|h,o+=I;o>0;A[b+S]=255&M,S+=p,M/=256,o-=8);A[b+S-p]|=128*y}},5717:u2=>{typeof Object.create=="function"?u2.exports=function(O,A){A&&(O.super_=A,O.prototype=Object.create(A.prototype,{constructor:{value:O,enumerable:!1,writable:!0,configurable:!0}}))}:u2.exports=function(O,A){if(A){O.super_=A;var C=function(){};C.prototype=A.prototype,O.prototype=new C,O.prototype.constructor=O}}},6486:function(u2,O,A){var C;u2=A.nmd(u2),(function(){var b,E="Expected a function",I="__lodash_hash_undefined__",i="__lodash_placeholder__",M=32,h=128,a=1/0,o=9007199254740991,s=NaN,m=4294967295,x=[["ary",h],["bind",1],["bindKey",2],["curry",8],["curryRight",16],["flip",512],["partial",M],["partialRight",64],["rearg",256]],S="[object Arguments]",p="[object Array]",y="[object Boolean]",g="[object Date]",B="[object Error]",_="[object Function]",L="[object GeneratorFunction]",N="[object Map]",F="[object Number]",z="[object Object]",Q="[object Promise]",c2="[object RegExp]",d="[object Set]",T="[object String]",u="[object Symbol]",t="[object WeakMap]",e="[object ArrayBuffer]",r="[object DataView]",c="[object Float32Array]",P="[object Float64Array]",K="[object Int8Array]",W="[object Int16Array]",o2="[object Int32Array]",r2="[object Uint8Array]",b2="[object Uint8ClampedArray]",_2="[object Uint16Array]",$="[object Uint32Array]",Z=/\b__p \+= '';/g,p2=/\b(__p \+=) '' \+/g,w2=/(__e\(.*?\)|\b__t\)) \+\n'';/g,R2=/&(?:amp|lt|gt|quot|#39);/g,P2=/[&<>"']/g,J=RegExp(R2.source),a2=RegExp(P2.source),Y=/<%-([\s\S]+?)%>/g,G=/<%([\s\S]+?)%>/g,i2=/<%=([\s\S]+?)%>/g,v2=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,g2=/^\w*$/,w=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,k=/[\\^$.*+?()[\]{}|]/g,v=RegExp(k.source),D=/^\s+/,j=/\s/,q=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,V=/\{\n\/\* \[wrapped with (.+)\] \*/,l2=/,? & /,n2=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,t2=/[()=,{}\[\]\/\s]/,s2=/\\(\\)?/g,h2=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,d2=/\w*$/,I2=/^[-+]0x[0-9a-f]+$/i,T2=/^0b[01]+$/i,L2=/^\[object .+?Constructor\]$/,q2=/^0o[0-7]+$/i,j2=/^(?:0|[1-9]\d*)$/,Q2=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,z2=/($^)/,C2=/['\n\r\u2028\u2029\\]/g,l3="\\ud800-\\udfff",m3="\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff",X2="\\u2700-\\u27bf",v3="a-z\\xdf-\\xf6\\xf8-\\xff",h3="A-Z\\xc0-\\xd6\\xd8-\\xde",$2="\\ufe0e\\ufe0f",s3="\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",o3="["+l3+"]",N2="["+s3+"]",M3="["+m3+"]",I3="\\d+",r3="["+X2+"]",B3="["+v3+"]",T3="[^"+l3+s3+I3+X2+v3+h3+"]",n3="\\ud83c[\\udffb-\\udfff]",k3="[^"+l3+"]",S3="(?:\\ud83c[\\udde6-\\uddff]){2}",u3="[\\ud800-\\udbff][\\udc00-\\udfff]",y3="["+h3+"]",R3="\\u200d",t3="(?:"+B3+"|"+T3+")",O3="(?:"+y3+"|"+T3+")",A3="(?:['’](?:d|ll|m|re|s|t|ve))?",E3="(?:['’](?:D|LL|M|RE|S|T|VE))?",v4="(?:"+M3+"|"+n3+")?",y4="["+$2+"]?",w4=y4+v4+"(?:"+R3+"(?:"+[k3,S3,u3].join("|")+")"+y4+v4+")*",E4="(?:"+[r3,S3,u3].join("|")+")"+w4,I4="(?:"+[k3+M3+"?",M3,S3,u3,o3].join("|")+")",B4=RegExp("['’]","g"),T4=RegExp(M3,"g"),p4=RegExp(n3+"(?="+n3+")|"+I4+w4,"g"),k4=RegExp([y3+"?"+B3+"+"+A3+"(?="+[N2,y3,"$"].join("|")+")",O3+"+"+E3+"(?="+[N2,y3+t3,"$"].join("|")+")",y3+"?"+t3+"+"+A3,y3+"+"+E3,"\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])","\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",I3,E4].join("|"),"g"),R4=RegExp("["+R3+l3+m3+$2+"]"),O4=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,P4=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","clearTimeout","isFinite","parseInt","setTimeout"],L4=-1,g3={};g3[c]=g3[P]=g3[K]=g3[W]=g3[o2]=g3[r2]=g3[b2]=g3[_2]=g3[$]=!0,g3[S]=g3[p]=g3[e]=g3[y]=g3[r]=g3[g]=g3[B]=g3[_]=g3[N]=g3[F]=g3[z]=g3[c2]=g3[d]=g3[T]=g3[t]=!1;var p3={};p3[S]=p3[p]=p3[e]=p3[r]=p3[y]=p3[g]=p3[c]=p3[P]=p3[K]=p3[W]=p3[o2]=p3[N]=p3[F]=p3[z]=p3[c2]=p3[d]=p3[T]=p3[u]=p3[r2]=p3[b2]=p3[_2]=p3[$]=!0,p3[B]=p3[_]=p3[t]=!1;var C4={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},D4=parseFloat,I1=parseInt,p1=typeof A.g=="object"&&A.g&&A.g.Object===Object&&A.g,e8=typeof self=="object"&&self&&self.Object===Object&&self,W3=p1||e8||Function("return this")(),V0=O&&!O.nodeType&&O,B1=V0&&u2&&!u2.nodeType&&u2,G0=B1&&B1.exports===V0,D5=G0&&p1.process,i4=function(){try{return B1&&B1.require&&B1.require("util").types||D5&&D5.binding&&D5.binding("util")}catch{}}(),$0=i4&&i4.isArrayBuffer,Z0=i4&&i4.isDate,X0=i4&&i4.isMap,J0=i4&&i4.isRegExp,Y0=i4&&i4.isSet,Q0=i4&&i4.isTypedArray;function n4(y2,M2,S2){switch(S2.length){case 0:return y2.call(M2);case 1:return y2.call(M2,S2[0]);case 2:return y2.call(M2,S2[0],S2[1]);case 3:return y2.call(M2,S2[0],S2[1],S2[2])}return y2.apply(M2,S2)}function t8(y2,M2,S2,O2){for(var e3=-1,b3=y2==null?0:y2.length;++e3<b3;){var j3=y2[e3];M2(O2,j3,S2(j3),y2)}return O2}function o4(y2,M2){for(var S2=-1,O2=y2==null?0:y2.length;++S2<O2&&M2(y2[S2],S2,y2)!==!1;);return y2}function r8(y2,M2){for(var S2=y2==null?0:y2.length;S2--&&M2(y2[S2],S2,y2)!==!1;);return y2}function ll(y2,M2){for(var S2=-1,O2=y2==null?0:y2.length;++S2<O2;)if(!M2(y2[S2],S2,y2))return!1;return!0}function G4(y2,M2){for(var S2=-1,O2=y2==null?0:y2.length,e3=0,b3=[];++S2<O2;){var j3=y2[S2];M2(j3,S2,y2)&&(b3[e3++]=j3)}return b3}function K1(y2,M2){return!(y2==null||!y2.length)&&b1(y2,M2,0)>-1}function N5(y2,M2,S2){for(var O2=-1,e3=y2==null?0:y2.length;++O2<e3;)if(S2(M2,y2[O2]))return!0;return!1}function L3(y2,M2){for(var S2=-1,O2=y2==null?0:y2.length,e3=Array(O2);++S2<O2;)e3[S2]=M2(y2[S2],S2,y2);return e3}function $4(y2,M2){for(var S2=-1,O2=M2.length,e3=y2.length;++S2<O2;)y2[e3+S2]=M2[S2];return y2}function j5(y2,M2,S2,O2){var e3=-1,b3=y2==null?0:y2.length;for(O2&&b3&&(S2=y2[++e3]);++e3<b3;)S2=M2(S2,y2[e3],e3,y2);return S2}function i8(y2,M2,S2,O2){var e3=y2==null?0:y2.length;for(O2&&e3&&(S2=y2[--e3]);e3--;)S2=M2(S2,y2[e3],e3,y2);return S2}function U5(y2,M2){for(var S2=-1,O2=y2==null?0:y2.length;++S2<O2;)if(M2(y2[S2],S2,y2))return!0;return!1}var o8=F5("length");function nl(y2,M2,S2){var O2;return S2(y2,function(e3,b3,j3){if(M2(e3,b3,j3))return O2=b3,!1}),O2}function V1(y2,M2,S2,O2){for(var e3=y2.length,b3=S2+(O2?1:-1);O2?b3--:++b3<e3;)if(M2(y2[b3],b3,y2))return b3;return-1}function b1(y2,M2,S2){return M2==M2?function(O2,e3,b3){for(var j3=b3-1,_4=O2.length;++j3<_4;)if(O2[j3]===e3)return j3;return-1}(y2,M2,S2):V1(y2,ul,S2)}function a8(y2,M2,S2,O2){for(var e3=S2-1,b3=y2.length;++e3<b3;)if(O2(y2[e3],M2))return e3;return-1}function ul(y2){return y2!=y2}function el(y2,M2){var S2=y2==null?0:y2.length;return S2?q5(y2,M2)/S2:s}function F5(y2){return function(M2){return M2==null?b:M2[y2]}}function z5(y2){return function(M2){return y2==null?b:y2[M2]}}function tl(y2,M2,S2,O2,e3){return e3(y2,function(b3,j3,_4){S2=O2?(O2=!1,b3):M2(S2,b3,j3,_4)}),S2}function q5(y2,M2){for(var S2,O2=-1,e3=y2.length;++O2<e3;){var b3=M2(y2[O2]);b3!==b&&(S2=S2===b?b3:S2+b3)}return S2}function H5(y2,M2){for(var S2=-1,O2=Array(y2);++S2<y2;)O2[S2]=M2(S2);return O2}function rl(y2){return y2&&y2.slice(0,sl(y2)+1).replace(D,"")}function u4(y2){return function(M2){return y2(M2)}}function W5(y2,M2){return L3(M2,function(S2){return y2[S2]})}function T1(y2,M2){return y2.has(M2)}function il(y2,M2){for(var S2=-1,O2=y2.length;++S2<O2&&b1(M2,y2[S2],0)>-1;);return S2}function ol(y2,M2){for(var S2=y2.length;S2--&&b1(M2,y2[S2],0)>-1;);return S2}function s8(y2,M2){for(var S2=y2.length,O2=0;S2--;)y2[S2]===M2&&++O2;return O2}var f8=z5({À:"A",Á:"A",Â:"A",Ã:"A",Ä:"A",Å:"A",à:"a",á:"a",â:"a",ã:"a",ä:"a",å:"a",Ç:"C",ç:"c",Ð:"D",ð:"d",È:"E",É:"E",Ê:"E",Ë:"E",è:"e",é:"e",ê:"e",ë:"e",Ì:"I",Í:"I",Î:"I",Ï:"I",ì:"i",í:"i",î:"i",ï:"i",Ñ:"N",ñ:"n",Ò:"O",Ó:"O",Ô:"O",Õ:"O",Ö:"O",Ø:"O",ò:"o",ó:"o",ô:"o",õ:"o",ö:"o",ø:"o",Ù:"U",Ú:"U",Û:"U",Ü:"U",ù:"u",ú:"u",û:"u",ü:"u",Ý:"Y",ý:"y",ÿ:"y",Æ:"Ae",æ:"ae",Þ:"Th",þ:"th",ß:"ss",Ā:"A",Ă:"A",Ą:"A",ā:"a",ă:"a",ą:"a",Ć:"C",Ĉ:"C",Ċ:"C",Č:"C",ć:"c",ĉ:"c",ċ:"c",č:"c",Ď:"D",Đ:"D",ď:"d",đ:"d",Ē:"E",Ĕ:"E",Ė:"E",Ę:"E",Ě:"E",ē:"e",ĕ:"e",ė:"e",ę:"e",ě:"e",Ĝ:"G",Ğ:"G",Ġ:"G",Ģ:"G",ĝ:"g",ğ:"g",ġ:"g",ģ:"g",Ĥ:"H",Ħ:"H",ĥ:"h",ħ:"h",Ĩ:"I",Ī:"I",Ĭ:"I",Į:"I",İ:"I",ĩ:"i",ī:"i",ĭ:"i",į:"i",ı:"i",Ĵ:"J",ĵ:"j",Ķ:"K",ķ:"k",ĸ:"k",Ĺ:"L",Ļ:"L",Ľ:"L",Ŀ:"L",Ł:"L",ĺ:"l",ļ:"l",ľ:"l",ŀ:"l",ł:"l",Ń:"N",Ņ:"N",Ň:"N",Ŋ:"N",ń:"n",ņ:"n",ň:"n",ŋ:"n",Ō:"O",Ŏ:"O",Ő:"O",ō:"o",ŏ:"o",ő:"o",Ŕ:"R",Ŗ:"R",Ř:"R",ŕ:"r",ŗ:"r",ř:"r",Ś:"S",Ŝ:"S",Ş:"S",Š:"S",ś:"s",ŝ:"s",ş:"s",š:"s",Ţ:"T",Ť:"T",Ŧ:"T",ţ:"t",ť:"t",ŧ:"t",Ũ:"U",Ū:"U",Ŭ:"U",Ů:"U",Ű:"U",Ų:"U",ũ:"u",ū:"u",ŭ:"u",ů:"u",ű:"u",ų:"u",Ŵ:"W",ŵ:"w",Ŷ:"Y",ŷ:"y",Ÿ:"Y",Ź:"Z",Ż:"Z",Ž:"Z",ź:"z",ż:"z",ž:"z",Ĳ:"IJ",ĳ:"ij",Œ:"Oe",œ:"oe",ŉ:"'n",ſ:"s"}),h8=z5({"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"});function c8(y2){return"\\"+C4[y2]}function g1(y2){return R4.test(y2)}function K5(y2){var M2=-1,S2=Array(y2.size);return y2.forEach(function(O2,e3){S2[++M2]=[e3,O2]}),S2}function al(y2,M2){return function(S2){return y2(M2(S2))}}function Z4(y2,M2){for(var S2=-1,O2=y2.length,e3=0,b3=[];++S2<O2;){var j3=y2[S2];j3!==M2&&j3!==i||(y2[S2]=i,b3[e3++]=S2)}return b3}function G1(y2){var M2=-1,S2=Array(y2.size);return y2.forEach(function(O2){S2[++M2]=O2}),S2}function d8(y2){var M2=-1,S2=Array(y2.size);return y2.forEach(function(O2){S2[++M2]=[O2,O2]}),S2}function m1(y2){return g1(y2)?function(M2){for(var S2=p4.lastIndex=0;p4.test(M2);)++S2;return S2}(y2):o8(y2)}function b4(y2){return g1(y2)?function(M2){return M2.match(p4)||[]}(y2):function(M2){return M2.split("")}(y2)}function sl(y2){for(var M2=y2.length;M2--&&j.test(y2.charAt(M2)););return M2}var p8=z5({"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'"}),$1=function y2(M2){var S2,O2=(M2=M2==null?W3:$1.defaults(W3.Object(),M2,$1.pick(W3,P4))).Array,e3=M2.Date,b3=M2.Error,j3=M2.Function,_4=M2.Math,P3=M2.Object,V5=M2.RegExp,b8=M2.String,a4=M2.TypeError,Z1=O2.prototype,g8=j3.prototype,v1=P3.prototype,X1=M2["__core-js_shared__"],J1=g8.toString,_3=v1.hasOwnProperty,m8=0,fl=(S2=/[^.]+$/.exec(X1&&X1.keys&&X1.keys.IE_PROTO||""))?"Symbol(src)_1."+S2:"",Y1=v1.toString,v8=J1.call(P3),y8=W3._,w8=V5("^"+J1.call(_3).replace(k,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Q1=G0?M2.Buffer:b,X4=M2.Symbol,l5=M2.Uint8Array,hl=Q1?Q1.allocUnsafe:b,n5=al(P3.getPrototypeOf,P3),cl=P3.create,dl=v1.propertyIsEnumerable,u5=Z1.splice,pl=X4?X4.isConcatSpreadable:b,k1=X4?X4.iterator:b,t1=X4?X4.toStringTag:b,e5=function(){try{var l=s1(P3,"defineProperty");return l({},"",{}),l}catch{}}(),_8=M2.clearTimeout!==W3.clearTimeout&&M2.clearTimeout,M8=e3&&e3.now!==W3.Date.now&&e3.now,x8=M2.setTimeout!==W3.setTimeout&&M2.setTimeout,t5=_4.ceil,r5=_4.floor,G5=P3.getOwnPropertySymbols,S8=Q1?Q1.isBuffer:b,bl=M2.isFinite,A8=Z1.join,E8=al(P3.keys,P3),U3=_4.max,G3=_4.min,I8=e3.now,B8=M2.parseInt,gl=_4.random,T8=Z1.reverse,$5=s1(M2,"DataView"),R1=s1(M2,"Map"),Z5=s1(M2,"Promise"),y1=s1(M2,"Set"),O1=s1(M2,"WeakMap"),P1=s1(P3,"create"),i5=O1&&new O1,w1={},k8=f1($5),R8=f1(R1),O8=f1(Z5),P8=f1(y1),L8=f1(O1),o5=X4?X4.prototype:b,L1=o5?o5.valueOf:b,ml=o5?o5.toString:b;function H(l){if(D3(l)&&!i3(l)&&!(l instanceof d3)){if(l instanceof s4)return l;if(_3.call(l,"__wrapped__"))return v6(l)}return new s4(l)}var _1=function(){function l(){}return function(n){if(!C3(n))return{};if(cl)return cl(n);l.prototype=n;var f=new l;return l.prototype=b,f}}();function a5(){}function s4(l,n){this.__wrapped__=l,this.__actions__=[],this.__chain__=!!n,this.__index__=0,this.__values__=b}function d3(l){this.__wrapped__=l,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=m,this.__views__=[]}function r1(l){var n=-1,f=l==null?0:l.length;for(this.clear();++n<f;){var R=l[n];this.set(R[0],R[1])}}function N4(l){var n=-1,f=l==null?0:l.length;for(this.clear();++n<f;){var R=l[n];this.set(R[0],R[1])}}function j4(l){var n=-1,f=l==null?0:l.length;for(this.clear();++n<f;){var R=l[n];this.set(R[0],R[1])}}function i1(l){var n=-1,f=l==null?0:l.length;for(this.__data__=new j4;++n<f;)this.add(l[n])}function g4(l){var n=this.__data__=new N4(l);this.size=n.size}function vl(l,n){var f=i3(l),R=!f&&h1(l),U=!f&&!R&&n1(l),X=!f&&!R&&!U&&A1(l),e2=f||R||U||X,f2=e2?H5(l.length,b8):[],m2=f2.length;for(var A2 in l)!n&&!_3.call(l,A2)||e2&&(A2=="length"||U&&(A2=="offset"||A2=="parent")||X&&(A2=="buffer"||A2=="byteLength"||A2=="byteOffset")||q4(A2,m2))||f2.push(A2);return f2}function yl(l){var n=l.length;return n?l[i0(0,n-1)]:b}function C8(l,n){return M5(J3(l),o1(n,0,l.length))}function D8(l){return M5(J3(l))}function X5(l,n,f){(f!==b&&!m4(l[n],f)||f===b&&!(n in l))&&U4(l,n,f)}function C1(l,n,f){var R=l[n];_3.call(l,n)&&m4(R,f)&&(f!==b||n in l)||U4(l,n,f)}function s5(l,n){for(var f=l.length;f--;)if(m4(l[f][0],n))return f;return-1}function N8(l,n,f,R){return J4(l,function(U,X,e2){n(R,U,f(U),e2)}),R}function wl(l,n){return l&&x4(n,H3(n),l)}function U4(l,n,f){n=="__proto__"&&e5?e5(l,n,{configurable:!0,enumerable:!0,value:f,writable:!0}):l[n]=f}function J5(l,n){for(var f=-1,R=n.length,U=O2(R),X=l==null;++f<R;)U[f]=X?b:P0(l,n[f]);return U}function o1(l,n,f){return l==l&&(f!==b&&(l=l<=f?l:f),n!==b&&(l=l>=n?l:n)),l}function f4(l,n,f,R,U,X){var e2,f2=1&n,m2=2&n,A2=4&n;if(f&&(e2=U?f(l,R,U,X):f(l)),e2!==b)return e2;if(!C3(l))return l;var x2=i3(l);if(x2){if(e2=function(E2){var k2=E2.length,V2=new E2.constructor(k2);return k2&&typeof E2[0]=="string"&&_3.call(E2,"index")&&(V2.index=E2.index,V2.input=E2.input),V2}(l),!f2)return J3(l,e2)}else{var B2=$3(l),U2=B2==_||B2==L;if(n1(l))return Wl(l,f2);if(B2==z||B2==S||U2&&!U){if(e2=m2||U2?{}:s6(l),!f2)return m2?function(E2,k2){return x4(E2,o6(E2),k2)}(l,function(E2,k2){return E2&&x4(k2,Q3(k2),E2)}(e2,l)):function(E2,k2){return x4(E2,w0(E2),k2)}(l,wl(e2,l))}else{if(!p3[B2])return U?l:{};e2=function(E2,k2,V2){var D2,G2=E2.constructor;switch(k2){case e:return d0(E2);case y:case g:return new G2(+E2);case r:return function(J2,c3){var H2=c3?d0(J2.buffer):J2.buffer;return new J2.constructor(H2,J2.byteOffset,J2.byteLength)}(E2,V2);case c:case P:case K:case W:case o2:case r2:case b2:case _2:case $:return Kl(E2,V2);case N:return new G2;case F:case T:return new G2(E2);case c2:return function(J2){var c3=new J2.constructor(J2.source,d2.exec(J2));return c3.lastIndex=J2.lastIndex,c3}(E2);case d:return new G2;case u:return D2=E2,L1?P3(L1.call(D2)):{}}}(l,B2,f2)}}X||(X=new g4);var F2=X.get(l);if(F2)return F2;X.set(l,e2),D6(l)?l.forEach(function(E2){e2.add(f4(E2,n,f,E2,l,X))}):L6(l)&&l.forEach(function(E2,k2){e2.set(k2,f4(E2,n,f,k2,l,X))});var W2=x2?b:(A2?m2?m0:g0:m2?Q3:H3)(l);return o4(W2||l,function(E2,k2){W2&&(E2=l[k2=E2]),C1(e2,k2,f4(E2,n,f,k2,l,X))}),e2}function _l(l,n,f){var R=f.length;if(l==null)return!R;for(l=P3(l);R--;){var U=f[R],X=n[U],e2=l[U];if(e2===b&&!(U in l)||!X(e2))return!1}return!0}function Ml(l,n,f){if(typeof l!="function")throw new a4(E);return q1(function(){l.apply(b,f)},n)}function D1(l,n,f,R){var U=-1,X=K1,e2=!0,f2=l.length,m2=[],A2=n.length;if(!f2)return m2;f&&(n=L3(n,u4(f))),R?(X=N5,e2=!1):n.length>=200&&(X=T1,e2=!1,n=new i1(n));l:for(;++U<f2;){var x2=l[U],B2=f==null?x2:f(x2);if(x2=R||x2!==0?x2:0,e2&&B2==B2){for(var U2=A2;U2--;)if(n[U2]===B2)continue l;m2.push(x2)}else X(n,B2,R)||m2.push(x2)}return m2}H.templateSettings={escape:Y,evaluate:G,interpolate:i2,variable:"",imports:{_:H}},H.prototype=a5.prototype,H.prototype.constructor=H,s4.prototype=_1(a5.prototype),s4.prototype.constructor=s4,d3.prototype=_1(a5.prototype),d3.prototype.constructor=d3,r1.prototype.clear=function(){this.__data__=P1?P1(null):{},this.size=0},r1.prototype.delete=function(l){var n=this.has(l)&&delete this.__data__[l];return this.size-=n?1:0,n},r1.prototype.get=function(l){var n=this.__data__;if(P1){var f=n[l];return f===I?b:f}return _3.call(n,l)?n[l]:b},r1.prototype.has=function(l){var n=this.__data__;return P1?n[l]!==b:_3.call(n,l)},r1.prototype.set=function(l,n){var f=this.__data__;return this.size+=this.has(l)?0:1,f[l]=P1&&n===b?I:n,this},N4.prototype.clear=function(){this.__data__=[],this.size=0},N4.prototype.delete=function(l){var n=this.__data__,f=s5(n,l);return!(f<0||(f==n.length-1?n.pop():u5.call(n,f,1),--this.size,0))},N4.prototype.get=function(l){var n=this.__data__,f=s5(n,l);return f<0?b:n[f][1]},N4.prototype.has=function(l){return s5(this.__data__,l)>-1},N4.prototype.set=function(l,n){var f=this.__data__,R=s5(f,l);return R<0?(++this.size,f.push([l,n])):f[R][1]=n,this},j4.prototype.clear=function(){this.size=0,this.__data__={hash:new r1,map:new(R1||N4),string:new r1}},j4.prototype.delete=function(l){var n=_5(this,l).delete(l);return this.size-=n?1:0,n},j4.prototype.get=function(l){return _5(this,l).get(l)},j4.prototype.has=function(l){return _5(this,l).has(l)},j4.prototype.set=function(l,n){var f=_5(this,l),R=f.size;return f.set(l,n),this.size+=f.size==R?0:1,this},i1.prototype.add=i1.prototype.push=function(l){return this.__data__.set(l,I),this},i1.prototype.has=function(l){return this.__data__.has(l)},g4.prototype.clear=function(){this.__data__=new N4,this.size=0},g4.prototype.delete=function(l){var n=this.__data__,f=n.delete(l);return this.size=n.size,f},g4.prototype.get=function(l){return this.__data__.get(l)},g4.prototype.has=function(l){return this.__data__.has(l)},g4.prototype.set=function(l,n){var f=this.__data__;if(f instanceof N4){var R=f.__data__;if(!R1||R.length<199)return R.push([l,n]),this.size=++f.size,this;f=this.__data__=new j4(R)}return f.set(l,n),this.size=f.size,this};var J4=Zl(M4),xl=Zl(Q5,!0);function j8(l,n){var f=!0;return J4(l,function(R,U,X){return f=!!n(R,U,X)}),f}function f5(l,n,f){for(var R=-1,U=l.length;++R<U;){var X=l[R],e2=n(X);if(e2!=null&&(f2===b?e2==e2&&!t4(e2):f(e2,f2)))var f2=e2,m2=X}return m2}function Sl(l,n){var f=[];return J4(l,function(R,U,X){n(R,U,X)&&f.push(R)}),f}function K3(l,n,f,R,U){var X=-1,e2=l.length;for(f||(f=Z8),U||(U=[]);++X<e2;){var f2=l[X];n>0&&f(f2)?n>1?K3(f2,n-1,f,R,U):$4(U,f2):R||(U[U.length]=f2)}return U}var Y5=Xl(),Al=Xl(!0);function M4(l,n){return l&&Y5(l,n,H3)}function Q5(l,n){return l&&Al(l,n,H3)}function h5(l,n){return G4(n,function(f){return H4(l[f])})}function a1(l,n){for(var f=0,R=(n=Q4(n,l)).length;l!=null&&f<R;)l=l[S4(n[f++])];return f&&f==R?l:b}function El(l,n,f){var R=n(l);return i3(l)?R:$4(R,f(l))}function Z3(l){return l==null?l===b?"[object Undefined]":"[object Null]":t1&&t1 in P3(l)?function(n){var f=_3.call(n,t1),R=n[t1];try{n[t1]=b;var U=!0}catch{}var X=Y1.call(n);return U&&(f?n[t1]=R:delete n[t1]),X}(l):function(n){return Y1.call(n)}(l)}function l0(l,n){return l>n}function U8(l,n){return l!=null&&_3.call(l,n)}function F8(l,n){return l!=null&&n in P3(l)}function n0(l,n,f){for(var R=f?N5:K1,U=l[0].length,X=l.length,e2=X,f2=O2(X),m2=1/0,A2=[];e2--;){var x2=l[e2];e2&&n&&(x2=L3(x2,u4(n))),m2=G3(x2.length,m2),f2[e2]=!f&&(n||U>=120&&x2.length>=120)?new i1(e2&&x2):b}x2=l[0];var B2=-1,U2=f2[0];l:for(;++B2<U&&A2.length<m2;){var F2=x2[B2],W2=n?n(F2):F2;if(F2=f||F2!==0?F2:0,!(U2?T1(U2,W2):R(A2,W2,f))){for(e2=X;--e2;){var E2=f2[e2];if(!(E2?T1(E2,W2):R(l[e2],W2,f)))continue l}U2&&U2.push(W2),A2.push(F2)}}return A2}function N1(l,n,f){var R=(l=d6(l,n=Q4(n,l)))==null?l:l[S4(c4(n))];return R==null?b:n4(R,l,f)}function Il(l){return D3(l)&&Z3(l)==S}function j1(l,n,f,R,U){return l===n||(l==null||n==null||!D3(l)&&!D3(n)?l!=l&&n!=n:function(X,e2,f2,m2,A2,x2){var B2=i3(X),U2=i3(e2),F2=B2?p:$3(X),W2=U2?p:$3(e2),E2=(F2=F2==S?z:F2)==z,k2=(W2=W2==S?z:W2)==z,V2=F2==W2;if(V2&&n1(X)){if(!n1(e2))return!1;B2=!0,E2=!1}if(V2&&!E2)return x2||(x2=new g4),B2||A1(X)?i6(X,e2,f2,m2,A2,x2):function(H2,Z2,F3,r4,A4,z3,K4){switch(F3){case r:if(H2.byteLength!=Z2.byteLength||H2.byteOffset!=Z2.byteOffset)return!1;H2=H2.buffer,Z2=Z2.buffer;case e:return!(H2.byteLength!=Z2.byteLength||!z3(new l5(H2),new l5(Z2)));case y:case g:case F:return m4(+H2,+Z2);case B:return H2.name==Z2.name&&H2.message==Z2.message;case c2:case T:return H2==Z2+"";case N:var u1=K5;case d:var W1=1&r4;if(u1||(u1=G1),H2.size!=Z2.size&&!W1)return!1;var c1=K4.get(H2);if(c1)return c1==Z2;r4|=2,K4.set(H2,Z2);var V4=i6(u1(H2),u1(Z2),r4,A4,z3,K4);return K4.delete(H2),V4;case u:if(L1)return L1.call(H2)==L1.call(Z2)}return!1}(X,e2,F2,f2,m2,A2,x2);if(!(1&f2)){var D2=E2&&_3.call(X,"__wrapped__"),G2=k2&&_3.call(e2,"__wrapped__");if(D2||G2){var J2=D2?X.value():X,c3=G2?e2.value():e2;return x2||(x2=new g4),A2(J2,c3,f2,m2,x2)}}return!!V2&&(x2||(x2=new g4),function(H2,Z2,F3,r4,A4,z3){var K4=1&F3,u1=g0(H2),W1=u1.length;if(W1!=g0(Z2).length&&!K4)return!1;for(var c1=W1;c1--;){var V4=u1[c1];if(!(K4?V4 in Z2:_3.call(Z2,V4)))return!1}var X6=z3.get(H2),J6=z3.get(Z2);if(X6&&J6)return X6==Z2&&J6==H2;var R5=!0;z3.set(H2,Z2),z3.set(Z2,H2);for(var H0=K4;++c1<W1;){var O5=H2[V4=u1[c1]],P5=Z2[V4];if(r4)var Y6=K4?r4(P5,O5,V4,Z2,H2,z3):r4(O5,P5,V4,H2,Z2,z3);if(!(Y6===b?O5===P5||A4(O5,P5,F3,r4,z3):Y6)){R5=!1;break}H0||(H0=V4=="constructor")}if(R5&&!H0){var L5=H2.constructor,C5=Z2.constructor;L5==C5||!("constructor"in H2)||!("constructor"in Z2)||typeof L5=="function"&&L5 instanceof L5&&typeof C5=="function"&&C5 instanceof C5||(R5=!1)}return z3.delete(H2),z3.delete(Z2),R5}(X,e2,f2,m2,A2,x2))}(l,n,f,R,j1,U))}function u0(l,n,f,R){var U=f.length,X=U,e2=!R;if(l==null)return!X;for(l=P3(l);U--;){var f2=f[U];if(e2&&f2[2]?f2[1]!==l[f2[0]]:!(f2[0]in l))return!1}for(;++U<X;){var m2=(f2=f[U])[0],A2=l[m2],x2=f2[1];if(e2&&f2[2]){if(A2===b&&!(m2 in l))return!1}else{var B2=new g4;if(R)var U2=R(A2,x2,m2,l,n,B2);if(!(U2===b?j1(x2,A2,3,R,B2):U2))return!1}}return!0}function Bl(l){return!(!C3(l)||(n=l,fl&&fl in n))&&(H4(l)?w8:L2).test(f1(l));var n}function Tl(l){return typeof l=="function"?l:l==null?l4:typeof l=="object"?i3(l)?Ol(l[0],l[1]):Rl(l):Z6(l)}function e0(l){if(!z1(l))return E8(l);var n=[];for(var f in P3(l))_3.call(l,f)&&f!="constructor"&&n.push(f);return n}function t0(l,n){return l<n}function kl(l,n){var f=-1,R=Y3(l)?O2(l.length):[];return J4(l,function(U,X,e2){R[++f]=n(U,X,e2)}),R}function Rl(l){var n=y0(l);return n.length==1&&n[0][2]?h6(n[0][0],n[0][1]):function(f){return f===l||u0(f,l,n)}}function Ol(l,n){return _0(l)&&f6(n)?h6(S4(l),n):function(f){var R=P0(f,l);return R===b&&R===n?L0(f,l):j1(n,R,3)}}function c5(l,n,f,R,U){l!==n&&Y5(n,function(X,e2){if(U||(U=new g4),C3(X))(function(m2,A2,x2,B2,U2,F2,W2){var E2=x0(m2,x2),k2=x0(A2,x2),V2=W2.get(k2);if(V2)X5(m2,x2,V2);else{var D2=F2?F2(E2,k2,x2+"",m2,A2,W2):b,G2=D2===b;if(G2){var J2=i3(k2),c3=!J2&&n1(k2),H2=!J2&&!c3&&A1(k2);D2=k2,J2||c3||H2?i3(E2)?D2=E2:N3(E2)?D2=J3(E2):c3?(G2=!1,D2=Wl(k2,!0)):H2?(G2=!1,D2=Kl(k2,!0)):D2=[]:H1(k2)||h1(k2)?(D2=E2,h1(E2)?D2=U6(E2):C3(E2)&&!H4(E2)||(D2=s6(k2))):G2=!1}G2&&(W2.set(k2,D2),U2(D2,k2,B2,F2,W2),W2.delete(k2)),X5(m2,x2,D2)}})(l,n,e2,f,c5,R,U);else{var f2=R?R(x0(l,e2),X,e2+"",l,n,U):b;f2===b&&(f2=X),X5(l,e2,f2)}},Q3)}function Pl(l,n){var f=l.length;if(f)return q4(n+=n<0?f:0,f)?l[n]:b}function Ll(l,n,f){n=n.length?L3(n,function(X){return i3(X)?function(e2){return a1(e2,X.length===1?X[0]:X)}:X}):[l4];var R=-1;n=L3(n,u4(K2()));var U=kl(l,function(X,e2,f2){var m2=L3(n,function(A2){return A2(X)});return{criteria:m2,index:++R,value:X}});return function(X,e2){var f2=X.length;for(X.sort(function(m2,A2){return function(x2,B2,U2){for(var F2=-1,W2=x2.criteria,E2=B2.criteria,k2=W2.length,V2=U2.length;++F2<k2;){var D2=Vl(W2[F2],E2[F2]);if(D2)return F2>=V2?D2:D2*(U2[F2]=="desc"?-1:1)}return x2.index-B2.index}(m2,A2,f)});f2--;)X[f2]=X[f2].value;return X}(U)}function Cl(l,n,f){for(var R=-1,U=n.length,X={};++R<U;){var e2=n[R],f2=a1(l,e2);f(f2,e2)&&U1(X,Q4(e2,l),f2)}return X}function r0(l,n,f,R){var U=R?a8:b1,X=-1,e2=n.length,f2=l;for(l===n&&(n=J3(n)),f&&(f2=L3(l,u4(f)));++X<e2;)for(var m2=0,A2=n[X],x2=f?f(A2):A2;(m2=U(f2,x2,m2,R))>-1;)f2!==l&&u5.call(f2,m2,1),u5.call(l,m2,1);return l}function Dl(l,n){for(var f=l?n.length:0,R=f-1;f--;){var U=n[f];if(f==R||U!==X){var X=U;q4(U)?u5.call(l,U,1):s0(l,U)}}return l}function i0(l,n){return l+r5(gl()*(n-l+1))}function o0(l,n){var f="";if(!l||n<1||n>o)return f;do n%2&&(f+=l),(n=r5(n/2))&&(l+=l);while(n);return f}function f3(l,n){return S0(c6(l,n,l4),l+"")}function z8(l){return yl(E1(l))}function q8(l,n){var f=E1(l);return M5(f,o1(n,0,f.length))}function U1(l,n,f,R){if(!C3(l))return l;for(var U=-1,X=(n=Q4(n,l)).length,e2=X-1,f2=l;f2!=null&&++U<X;){var m2=S4(n[U]),A2=f;if(m2==="__proto__"||m2==="constructor"||m2==="prototype")return l;if(U!=e2){var x2=f2[m2];(A2=R?R(x2,m2,f2):b)===b&&(A2=C3(x2)?x2:q4(n[U+1])?[]:{})}C1(f2,m2,A2),f2=f2[m2]}return l}var Nl=i5?function(l,n){return i5.set(l,n),l}:l4,H8=e5?function(l,n){return e5(l,"toString",{configurable:!0,enumerable:!1,value:D0(n),writable:!0})}:l4;function W8(l){return M5(E1(l))}function h4(l,n,f){var R=-1,U=l.length;n<0&&(n=-n>U?0:U+n),(f=f>U?U:f)<0&&(f+=U),U=n>f?0:f-n>>>0,n>>>=0;for(var X=O2(U);++R<U;)X[R]=l[R+n];return X}function K8(l,n){var f;return J4(l,function(R,U,X){return!(f=n(R,U,X))}),!!f}function d5(l,n,f){var R=0,U=l==null?R:l.length;if(typeof n=="number"&&n==n&&U<=2147483647){for(;R<U;){var X=R+U>>>1,e2=l[X];e2!==null&&!t4(e2)&&(f?e2<=n:e2<n)?R=X+1:U=X}return U}return a0(l,n,l4,f)}function a0(l,n,f,R){var U=0,X=l==null?0:l.length;if(X===0)return 0;for(var e2=(n=f(n))!=n,f2=n===null,m2=t4(n),A2=n===b;U<X;){var x2=r5((U+X)/2),B2=f(l[x2]),U2=B2!==b,F2=B2===null,W2=B2==B2,E2=t4(B2);if(e2)var k2=R||W2;else k2=A2?W2&&(R||U2):f2?W2&&U2&&(R||!F2):m2?W2&&U2&&!F2&&(R||!E2):!F2&&!E2&&(R?B2<=n:B2<n);k2?U=x2+1:X=x2}return G3(X,4294967294)}function jl(l,n){for(var f=-1,R=l.length,U=0,X=[];++f<R;){var e2=l[f],f2=n?n(e2):e2;if(!f||!m4(f2,m2)){var m2=f2;X[U++]=e2===0?0:e2}}return X}function Ul(l){return typeof l=="number"?l:t4(l)?s:+l}function e4(l){if(typeof l=="string")return l;if(i3(l))return L3(l,e4)+"";if(t4(l))return ml?ml.call(l):"";var n=l+"";return n=="0"&&1/l==-1/0?"-0":n}function Y4(l,n,f){var R=-1,U=K1,X=l.length,e2=!0,f2=[],m2=f2;if(f)e2=!1,U=N5;else if(X>=200){var A2=n?null:G8(l);if(A2)return G1(A2);e2=!1,U=T1,m2=new i1}else m2=n?[]:f2;l:for(;++R<X;){var x2=l[R],B2=n?n(x2):x2;if(x2=f||x2!==0?x2:0,e2&&B2==B2){for(var U2=m2.length;U2--;)if(m2[U2]===B2)continue l;n&&m2.push(B2),f2.push(x2)}else U(m2,B2,f)||(m2!==f2&&m2.push(B2),f2.push(x2))}return f2}function s0(l,n){return(l=d6(l,n=Q4(n,l)))==null||delete l[S4(c4(n))]}function Fl(l,n,f,R){return U1(l,n,f(a1(l,n)),R)}function p5(l,n,f,R){for(var U=l.length,X=R?U:-1;(R?X--:++X<U)&&n(l[X],X,l););return f?h4(l,R?0:X,R?X+1:U):h4(l,R?X+1:0,R?U:X)}function zl(l,n){var f=l;return f instanceof d3&&(f=f.value()),j5(n,function(R,U){return U.func.apply(U.thisArg,$4([R],U.args))},f)}function f0(l,n,f){var R=l.length;if(R<2)return R?Y4(l[0]):[];for(var U=-1,X=O2(R);++U<R;)for(var e2=l[U],f2=-1;++f2<R;)f2!=U&&(X[U]=D1(X[U]||e2,l[f2],n,f));return Y4(K3(X,1),n,f)}function ql(l,n,f){for(var R=-1,U=l.length,X=n.length,e2={};++R<U;){var f2=R<X?n[R]:b;f(e2,l[R],f2)}return e2}function h0(l){return N3(l)?l:[]}function c0(l){return typeof l=="function"?l:l4}function Q4(l,n){return i3(l)?l:_0(l,n)?[l]:m6(w3(l))}var V8=f3;function l1(l,n,f){var R=l.length;return f=f===b?R:f,!n&&f>=R?l:h4(l,n,f)}var Hl=_8||function(l){return W3.clearTimeout(l)};function Wl(l,n){if(n)return l.slice();var f=l.length,R=hl?hl(f):new l.constructor(f);return l.copy(R),R}function d0(l){var n=new l.constructor(l.byteLength);return new l5(n).set(new l5(l)),n}function Kl(l,n){var f=n?d0(l.buffer):l.buffer;return new l.constructor(f,l.byteOffset,l.length)}function Vl(l,n){if(l!==n){var f=l!==b,R=l===null,U=l==l,X=t4(l),e2=n!==b,f2=n===null,m2=n==n,A2=t4(n);if(!f2&&!A2&&!X&&l>n||X&&e2&&m2&&!f2&&!A2||R&&e2&&m2||!f&&m2||!U)return 1;if(!R&&!X&&!A2&&l<n||A2&&f&&U&&!R&&!X||f2&&f&&U||!e2&&U||!m2)return-1}return 0}function Gl(l,n,f,R){for(var U=-1,X=l.length,e2=f.length,f2=-1,m2=n.length,A2=U3(X-e2,0),x2=O2(m2+A2),B2=!R;++f2<m2;)x2[f2]=n[f2];for(;++U<e2;)(B2||U<X)&&(x2[f[U]]=l[U]);for(;A2--;)x2[f2++]=l[U++];return x2}function $l(l,n,f,R){for(var U=-1,X=l.length,e2=-1,f2=f.length,m2=-1,A2=n.length,x2=U3(X-f2,0),B2=O2(x2+A2),U2=!R;++U<x2;)B2[U]=l[U];for(var F2=U;++m2<A2;)B2[F2+m2]=n[m2];for(;++e2<f2;)(U2||U<X)&&(B2[F2+f[e2]]=l[U++]);return B2}function J3(l,n){var f=-1,R=l.length;for(n||(n=O2(R));++f<R;)n[f]=l[f];return n}function x4(l,n,f,R){var U=!f;f||(f={});for(var X=-1,e2=n.length;++X<e2;){var f2=n[X],m2=R?R(f[f2],l[f2],f2,f,l):b;m2===b&&(m2=l[f2]),U?U4(f,f2,m2):C1(f,f2,m2)}return f}function b5(l,n){return function(f,R){var U=i3(f)?t8:N8,X=n?n():{};return U(f,l,K2(R,2),X)}}function M1(l){return f3(function(n,f){var R=-1,U=f.length,X=U>1?f[U-1]:b,e2=U>2?f[2]:b;for(X=l.length>3&&typeof X=="function"?(U--,X):b,e2&&X3(f[0],f[1],e2)&&(X=U<3?b:X,U=1),n=P3(n);++R<U;){var f2=f[R];f2&&l(n,f2,R,X)}return n})}function Zl(l,n){return function(f,R){if(f==null)return f;if(!Y3(f))return l(f,R);for(var U=f.length,X=n?U:-1,e2=P3(f);(n?X--:++X<U)&&R(e2[X],X,e2)!==!1;);return f}}function Xl(l){return function(n,f,R){for(var U=-1,X=P3(n),e2=R(n),f2=e2.length;f2--;){var m2=e2[l?f2:++U];if(f(X[m2],m2,X)===!1)break}return n}}function Jl(l){return function(n){var f=g1(n=w3(n))?b4(n):b,R=f?f[0]:n.charAt(0),U=f?l1(f,1).join(""):n.slice(1);return R[l]()+U}}function x1(l){return function(n){return j5(G6(V6(n).replace(B4,"")),l,"")}}function F1(l){return function(){var n=arguments;switch(n.length){case 0:return new l;case 1:return new l(n[0]);case 2:return new l(n[0],n[1]);case 3:return new l(n[0],n[1],n[2]);case 4:return new l(n[0],n[1],n[2],n[3]);case 5:return new l(n[0],n[1],n[2],n[3],n[4]);case 6:return new l(n[0],n[1],n[2],n[3],n[4],n[5]);case 7:return new l(n[0],n[1],n[2],n[3],n[4],n[5],n[6])}var f=_1(l.prototype),R=l.apply(f,n);return C3(R)?R:f}}function Yl(l){return function(n,f,R){var U=P3(n);if(!Y3(n)){var X=K2(f,3);n=H3(n),f=function(f2){return X(U[f2],f2,U)}}var e2=l(n,f,R);return e2>-1?U[X?n[e2]:e2]:b}}function Ql(l){return z4(function(n){var f=n.length,R=f,U=s4.prototype.thru;for(l&&n.reverse();R--;){var X=n[R];if(typeof X!="function")throw new a4(E);if(U&&!e2&&w5(X)=="wrapper")var e2=new s4([],!0)}for(R=e2?R:f;++R<f;){var f2=w5(X=n[R]),m2=f2=="wrapper"?v0(X):b;e2=m2&&M0(m2[0])&&m2[1]==424&&!m2[4].length&&m2[9]==1?e2[w5(m2[0])].apply(e2,m2[3]):X.length==1&&M0(X)?e2[f2]():e2.thru(X)}return function(){var A2=arguments,x2=A2[0];if(e2&&A2.length==1&&i3(x2))return e2.plant(x2).value();for(var B2=0,U2=f?n[B2].apply(this,A2):x2;++B2<f;)U2=n[B2].call(this,U2);return U2}})}function g5(l,n,f,R,U,X,e2,f2,m2,A2){var x2=n&h,B2=1&n,U2=2&n,F2=24&n,W2=512&n,E2=U2?b:F1(l);return function k2(){for(var V2=arguments.length,D2=O2(V2),G2=V2;G2--;)D2[G2]=arguments[G2];if(F2)var J2=S1(k2),c3=s8(D2,J2);if(R&&(D2=Gl(D2,R,U,F2)),X&&(D2=$l(D2,X,e2,F2)),V2-=c3,F2&&V2<A2){var H2=Z4(D2,J2);return u6(l,n,g5,k2.placeholder,f,D2,H2,f2,m2,A2-V2)}var Z2=B2?f:this,F3=U2?Z2[l]:l;return V2=D2.length,f2?D2=J8(D2,f2):W2&&V2>1&&D2.reverse(),x2&&m2<V2&&(D2.length=m2),this&&this!==W3&&this instanceof k2&&(F3=E2||F1(F3)),F3.apply(Z2,D2)}}function l6(l,n){return function(f,R){return function(U,X,e2,f2){return M4(U,function(m2,A2,x2){X(f2,e2(m2),A2,x2)}),f2}(f,l,n(R),{})}}function m5(l,n){return function(f,R){var U;if(f===b&&R===b)return n;if(f!==b&&(U=f),R!==b){if(U===b)return R;typeof f=="string"||typeof R=="string"?(f=e4(f),R=e4(R)):(f=Ul(f),R=Ul(R)),U=l(f,R)}return U}}function p0(l){return z4(function(n){return n=L3(n,u4(K2())),f3(function(f){var R=this;return l(n,function(U){return n4(U,R,f)})})})}function v5(l,n){var f=(n=n===b?" ":e4(n)).length;if(f<2)return f?o0(n,l):n;var R=o0(n,t5(l/m1(n)));return g1(n)?l1(b4(R),0,l).join(""):R.slice(0,l)}function n6(l){return function(n,f,R){return R&&typeof R!="number"&&X3(n,f,R)&&(f=R=b),n=W4(n),f===b?(f=n,n=0):f=W4(f),function(U,X,e2,f2){for(var m2=-1,A2=U3(t5((X-U)/(e2||1)),0),x2=O2(A2);A2--;)x2[f2?A2:++m2]=U,U+=e2;return x2}(n,f,R=R===b?n<f?1:-1:W4(R),l)}}function y5(l){return function(n,f){return typeof n=="string"&&typeof f=="string"||(n=d4(n),f=d4(f)),l(n,f)}}function u6(l,n,f,R,U,X,e2,f2,m2,A2){var x2=8&n;n|=x2?M:64,4&(n&=~(x2?64:M))||(n&=-4);var B2=[l,n,U,x2?X:b,x2?e2:b,x2?b:X,x2?b:e2,f2,m2,A2],U2=f.apply(b,B2);return M0(l)&&p6(U2,B2),U2.placeholder=R,b6(U2,l,n)}function b0(l){var n=_4[l];return function(f,R){if(f=d4(f),(R=R==null?0:G3(a3(R),292))&&bl(f)){var U=(w3(f)+"e").split("e");return+((U=(w3(n(U[0]+"e"+(+U[1]+R)))+"e").split("e"))[0]+"e"+(+U[1]-R))}return n(f)}}var G8=y1&&1/G1(new y1([,-0]))[1]==a?function(l){return new y1(l)}:U0;function e6(l){return function(n){var f=$3(n);return f==N?K5(n):f==d?d8(n):function(R,U){return L3(U,function(X){return[X,R[X]]})}(n,l(n))}}function F4(l,n,f,R,U,X,e2,f2){var m2=2&n;if(!m2&&typeof l!="function")throw new a4(E);var A2=R?R.length:0;if(A2||(n&=-97,R=U=b),e2=e2===b?e2:U3(a3(e2),0),f2=f2===b?f2:a3(f2),A2-=U?U.length:0,64&n){var x2=R,B2=U;R=U=b}var U2=m2?b:v0(l),F2=[l,n,f,R,U,x2,B2,X,e2,f2];if(U2&&function(E2,k2){var V2=E2[1],D2=k2[1],G2=V2|D2,J2=G2<131,c3=D2==h&&V2==8||D2==h&&V2==256&&E2[7].length<=k2[8]||D2==384&&k2[7].length<=k2[8]&&V2==8;if(!J2&&!c3)return E2;1&D2&&(E2[2]=k2[2],G2|=1&V2?0:4);var H2=k2[3];if(H2){var Z2=E2[3];E2[3]=Z2?Gl(Z2,H2,k2[4]):H2,E2[4]=Z2?Z4(E2[3],i):k2[4]}(H2=k2[5])&&(Z2=E2[5],E2[5]=Z2?$l(Z2,H2,k2[6]):H2,E2[6]=Z2?Z4(E2[5],i):k2[6]),(H2=k2[7])&&(E2[7]=H2),D2&h&&(E2[8]=E2[8]==null?k2[8]:G3(E2[8],k2[8])),E2[9]==null&&(E2[9]=k2[9]),E2[0]=k2[0],E2[1]=G2}(F2,U2),l=F2[0],n=F2[1],f=F2[2],R=F2[3],U=F2[4],!(f2=F2[9]=F2[9]===b?m2?0:l.length:U3(F2[9]-A2,0))&&24&n&&(n&=-25),n&&n!=1)W2=n==8||n==16?function(E2,k2,V2){var D2=F1(E2);return function G2(){for(var J2=arguments.length,c3=O2(J2),H2=J2,Z2=S1(G2);H2--;)c3[H2]=arguments[H2];var F3=J2<3&&c3[0]!==Z2&&c3[J2-1]!==Z2?[]:Z4(c3,Z2);return(J2-=F3.length)<V2?u6(E2,k2,g5,G2.placeholder,b,c3,F3,b,b,V2-J2):n4(this&&this!==W3&&this instanceof G2?D2:E2,this,c3)}}(l,n,f2):n!=M&&n!=33||U.length?g5.apply(b,F2):function(E2,k2,V2,D2){var G2=1&k2,J2=F1(E2);return function c3(){for(var H2=-1,Z2=arguments.length,F3=-1,r4=D2.length,A4=O2(r4+Z2),z3=this&&this!==W3&&this instanceof c3?J2:E2;++F3<r4;)A4[F3]=D2[F3];for(;Z2--;)A4[F3++]=arguments[++H2];return n4(z3,G2?V2:this,A4)}}(l,n,f,R);else var W2=function(E2,k2,V2){var D2=1&k2,G2=F1(E2);return function J2(){return(this&&this!==W3&&this instanceof J2?G2:E2).apply(D2?V2:this,arguments)}}(l,n,f);return b6((U2?Nl:p6)(W2,F2),l,n)}function t6(l,n,f,R){return l===b||m4(l,v1[f])&&!_3.call(R,f)?n:l}function r6(l,n,f,R,U,X){return C3(l)&&C3(n)&&(X.set(n,l),c5(l,n,b,r6,X),X.delete(n)),l}function $8(l){return H1(l)?b:l}function i6(l,n,f,R,U,X){var e2=1&f,f2=l.length,m2=n.length;if(f2!=m2&&!(e2&&m2>f2))return!1;var A2=X.get(l),x2=X.get(n);if(A2&&x2)return A2==n&&x2==l;var B2=-1,U2=!0,F2=2&f?new i1:b;for(X.set(l,n),X.set(n,l);++B2<f2;){var W2=l[B2],E2=n[B2];if(R)var k2=e2?R(E2,W2,B2,n,l,X):R(W2,E2,B2,l,n,X);if(k2!==b){if(k2)continue;U2=!1;break}if(F2){if(!U5(n,function(V2,D2){if(!T1(F2,D2)&&(W2===V2||U(W2,V2,f,R,X)))return F2.push(D2)})){U2=!1;break}}else if(W2!==E2&&!U(W2,E2,f,R,X)){U2=!1;break}}return X.delete(l),X.delete(n),U2}function z4(l){return S0(c6(l,b,_6),l+"")}function g0(l){return El(l,H3,w0)}function m0(l){return El(l,Q3,o6)}var v0=i5?function(l){return i5.get(l)}:U0;function w5(l){for(var n=l.name+"",f=w1[n],R=_3.call(w1,n)?f.length:0;R--;){var U=f[R],X=U.func;if(X==null||X==l)return U.name}return n}function S1(l){return(_3.call(H,"placeholder")?H:l).placeholder}function K2(){var l=H.iteratee||N0;return l=l===N0?Tl:l,arguments.length?l(arguments[0],arguments[1]):l}function _5(l,n){var f,R,U=l.__data__;return((R=typeof(f=n))=="string"||R=="number"||R=="symbol"||R=="boolean"?f!=="__proto__":f===null)?U[typeof n=="string"?"string":"hash"]:U.map}function y0(l){for(var n=H3(l),f=n.length;f--;){var R=n[f],U=l[R];n[f]=[R,U,f6(U)]}return n}function s1(l,n){var f=function(R,U){return R==null?b:R[U]}(l,n);return Bl(f)?f:b}var w0=G5?function(l){return l==null?[]:(l=P3(l),G4(G5(l),function(n){return dl.call(l,n)}))}:F0,o6=G5?function(l){for(var n=[];l;)$4(n,w0(l)),l=n5(l);return n}:F0,$3=Z3;function a6(l,n,f){for(var R=-1,U=(n=Q4(n,l)).length,X=!1;++R<U;){var e2=S4(n[R]);if(!(X=l!=null&&f(l,e2)))break;l=l[e2]}return X||++R!=U?X:!!(U=l==null?0:l.length)&&B5(U)&&q4(e2,U)&&(i3(l)||h1(l))}function s6(l){return typeof l.constructor!="function"||z1(l)?{}:_1(n5(l))}function Z8(l){return i3(l)||h1(l)||!!(pl&&l&&l[pl])}function q4(l,n){var f=typeof l;return!!(n=n??o)&&(f=="number"||f!="symbol"&&j2.test(l))&&l>-1&&l%1==0&&l<n}function X3(l,n,f){if(!C3(f))return!1;var R=typeof n;return!!(R=="number"?Y3(f)&&q4(n,f.length):R=="string"&&n in f)&&m4(f[n],l)}function _0(l,n){if(i3(l))return!1;var f=typeof l;return!(f!="number"&&f!="symbol"&&f!="boolean"&&l!=null&&!t4(l))||g2.test(l)||!v2.test(l)||n!=null&&l in P3(n)}function M0(l){var n=w5(l),f=H[n];if(typeof f!="function"||!(n in d3.prototype))return!1;if(l===f)return!0;var R=v0(f);return!!R&&l===R[0]}($5&&$3(new $5(new ArrayBuffer(1)))!=r||R1&&$3(new R1)!=N||Z5&&$3(Z5.resolve())!=Q||y1&&$3(new y1)!=d||O1&&$3(new O1)!=t)&&($3=function(l){var n=Z3(l),f=n==z?l.constructor:b,R=f?f1(f):"";if(R)switch(R){case k8:return r;case R8:return N;case O8:return Q;case P8:return d;case L8:return t}return n});var X8=X1?H4:z0;function z1(l){var n=l&&l.constructor;return l===(typeof n=="function"&&n.prototype||v1)}function f6(l){return l==l&&!C3(l)}function h6(l,n){return function(f){return f!=null&&f[l]===n&&(n!==b||l in P3(f))}}function c6(l,n,f){return n=U3(n===b?l.length-1:n,0),function(){for(var R=arguments,U=-1,X=U3(R.length-n,0),e2=O2(X);++U<X;)e2[U]=R[n+U];U=-1;for(var f2=O2(n+1);++U<n;)f2[U]=R[U];return f2[n]=f(e2),n4(l,this,f2)}}function d6(l,n){return n.length<2?l:a1(l,h4(n,0,-1))}function J8(l,n){for(var f=l.length,R=G3(n.length,f),U=J3(l);R--;){var X=n[R];l[R]=q4(X,f)?U[X]:b}return l}function x0(l,n){if((n!=="constructor"||typeof l[n]!="function")&&n!="__proto__")return l[n]}var p6=g6(Nl),q1=x8||function(l,n){return W3.setTimeout(l,n)},S0=g6(H8);function b6(l,n,f){var R=n+"";return S0(l,function(U,X){var e2=X.length;if(!e2)return U;var f2=e2-1;return X[f2]=(e2>1?"& ":"")+X[f2],X=X.join(e2>2?", ":" "),U.replace(q,`{
/* [wrapped with `+X+`] */
`)}(R,function(U,X){return o4(x,function(e2){var f2="_."+e2[0];X&e2[1]&&!K1(U,f2)&&U.push(f2)}),U.sort()}(function(U){var X=U.match(V);return X?X[1].split(l2):[]}(R),f)))}function g6(l){var n=0,f=0;return function(){var R=I8(),U=16-(R-f);if(f=R,U>0){if(++n>=800)return arguments[0]}else n=0;return l.apply(b,arguments)}}function M5(l,n){var f=-1,R=l.length,U=R-1;for(n=n===b?R:n;++f<n;){var X=i0(f,U),e2=l[X];l[X]=l[f],l[f]=e2}return l.length=n,l}var A0,E0,m6=(A0=E5(function(l){var n=[];return l.charCodeAt(0)===46&&n.push(""),l.replace(w,function(f,R,U,X){n.push(U?X.replace(s2,"$1"):R||f)}),n},function(l){return E0.size===500&&E0.clear(),l}),E0=A0.cache,A0);function S4(l){if(typeof l=="string"||t4(l))return l;var n=l+"";return n=="0"&&1/l==-1/0?"-0":n}function f1(l){if(l!=null){try{return J1.call(l)}catch{}try{return l+""}catch{}}return""}function v6(l){if(l instanceof d3)return l.clone();var n=new s4(l.__wrapped__,l.__chain__);return n.__actions__=J3(l.__actions__),n.__index__=l.__index__,n.__values__=l.__values__,n}var Y8=f3(function(l,n){return N3(l)?D1(l,K3(n,1,N3,!0)):[]}),Q8=f3(function(l,n){var f=c4(n);return N3(f)&&(f=b),N3(l)?D1(l,K3(n,1,N3,!0),K2(f,2)):[]}),l9=f3(function(l,n){var f=c4(n);return N3(f)&&(f=b),N3(l)?D1(l,K3(n,1,N3,!0),b,f):[]});function y6(l,n,f){var R=l==null?0:l.length;if(!R)return-1;var U=f==null?0:a3(f);return U<0&&(U=U3(R+U,0)),V1(l,K2(n,3),U)}function w6(l,n,f){var R=l==null?0:l.length;if(!R)return-1;var U=R-1;return f!==b&&(U=a3(f),U=f<0?U3(R+U,0):G3(U,R-1)),V1(l,K2(n,3),U,!0)}function _6(l){return l!=null&&l.length?K3(l,1):[]}function M6(l){return l&&l.length?l[0]:b}var n9=f3(function(l){var n=L3(l,h0);return n.length&&n[0]===l[0]?n0(n):[]}),u9=f3(function(l){var n=c4(l),f=L3(l,h0);return n===c4(f)?n=b:f.pop(),f.length&&f[0]===l[0]?n0(f,K2(n,2)):[]}),e9=f3(function(l){var n=c4(l),f=L3(l,h0);return(n=typeof n=="function"?n:b)&&f.pop(),f.length&&f[0]===l[0]?n0(f,b,n):[]});function c4(l){var n=l==null?0:l.length;return n?l[n-1]:b}var t9=f3(x6);function x6(l,n){return l&&l.length&&n&&n.length?r0(l,n):l}var r9=z4(function(l,n){var f=l==null?0:l.length,R=J5(l,n);return Dl(l,L3(n,function(U){return q4(U,f)?+U:U}).sort(Vl)),R});function I0(l){return l==null?l:T8.call(l)}var i9=f3(function(l){return Y4(K3(l,1,N3,!0))}),o9=f3(function(l){var n=c4(l);return N3(n)&&(n=b),Y4(K3(l,1,N3,!0),K2(n,2))}),a9=f3(function(l){var n=c4(l);return n=typeof n=="function"?n:b,Y4(K3(l,1,N3,!0),b,n)});function B0(l){if(!l||!l.length)return[];var n=0;return l=G4(l,function(f){if(N3(f))return n=U3(f.length,n),!0}),H5(n,function(f){return L3(l,F5(f))})}function S6(l,n){if(!l||!l.length)return[];var f=B0(l);return n==null?f:L3(f,function(R){return n4(n,b,R)})}var s9=f3(function(l,n){return N3(l)?D1(l,n):[]}),f9=f3(function(l){return f0(G4(l,N3))}),h9=f3(function(l){var n=c4(l);return N3(n)&&(n=b),f0(G4(l,N3),K2(n,2))}),c9=f3(function(l){var n=c4(l);return n=typeof n=="function"?n:b,f0(G4(l,N3),b,n)}),d9=f3(B0),p9=f3(function(l){var n=l.length,f=n>1?l[n-1]:b;return f=typeof f=="function"?(l.pop(),f):b,S6(l,f)});function A6(l){var n=H(l);return n.__chain__=!0,n}function x5(l,n){return n(l)}var b9=z4(function(l){var n=l.length,f=n?l[0]:0,R=this.__wrapped__,U=function(X){return J5(X,l)};return!(n>1||this.__actions__.length)&&R instanceof d3&&q4(f)?((R=R.slice(f,+f+(n?1:0))).__actions__.push({func:x5,args:[U],thisArg:b}),new s4(R,this.__chain__).thru(function(X){return n&&!X.length&&X.push(b),X})):this.thru(U)}),g9=b5(function(l,n,f){_3.call(l,f)?++l[f]:U4(l,f,1)}),m9=Yl(y6),v9=Yl(w6);function E6(l,n){return(i3(l)?o4:J4)(l,K2(n,3))}function I6(l,n){return(i3(l)?r8:xl)(l,K2(n,3))}var y9=b5(function(l,n,f){_3.call(l,f)?l[f].push(n):U4(l,f,[n])}),w9=f3(function(l,n,f){var R=-1,U=typeof n=="function",X=Y3(l)?O2(l.length):[];return J4(l,function(e2){X[++R]=U?n4(n,e2,f):N1(e2,n,f)}),X}),_9=b5(function(l,n,f){U4(l,f,n)});function S5(l,n){return(i3(l)?L3:kl)(l,K2(n,3))}var M9=b5(function(l,n,f){l[f?0:1].push(n)},function(){return[[],[]]}),x9=f3(function(l,n){if(l==null)return[];var f=n.length;return f>1&&X3(l,n[0],n[1])?n=[]:f>2&&X3(n[0],n[1],n[2])&&(n=[n[0]]),Ll(l,K3(n,1),[])}),A5=M8||function(){return W3.Date.now()};function B6(l,n,f){return n=f?b:n,n=l&&n==null?l.length:n,F4(l,h,b,b,b,b,n)}function T6(l,n){var f;if(typeof n!="function")throw new a4(E);return l=a3(l),function(){return--l>0&&(f=n.apply(this,arguments)),l<=1&&(n=b),f}}var T0=f3(function(l,n,f){var R=1;if(f.length){var U=Z4(f,S1(T0));R|=M}return F4(l,R,n,f,U)}),k6=f3(function(l,n,f){var R=3;if(f.length){var U=Z4(f,S1(k6));R|=M}return F4(n,R,l,f,U)});function R6(l,n,f){var R,U,X,e2,f2,m2,A2=0,x2=!1,B2=!1,U2=!0;if(typeof l!="function")throw new a4(E);function F2(G2){var J2=R,c3=U;return R=U=b,A2=G2,e2=l.apply(c3,J2)}function W2(G2){return A2=G2,f2=q1(k2,n),x2?F2(G2):e2}function E2(G2){var J2=G2-m2;return m2===b||J2>=n||J2<0||B2&&G2-A2>=X}function k2(){var G2=A5();if(E2(G2))return V2(G2);f2=q1(k2,function(J2){var c3=n-(J2-m2);return B2?G3(c3,X-(J2-A2)):c3}(G2))}function V2(G2){return f2=b,U2&&R?F2(G2):(R=U=b,e2)}function D2(){var G2=A5(),J2=E2(G2);if(R=arguments,U=this,m2=G2,J2){if(f2===b)return W2(m2);if(B2)return Hl(f2),f2=q1(k2,n),F2(m2)}return f2===b&&(f2=q1(k2,n)),e2}return n=d4(n)||0,C3(f)&&(x2=!!f.leading,X=(B2="maxWait"in f)?U3(d4(f.maxWait)||0,n):X,U2="trailing"in f?!!f.trailing:U2),D2.cancel=function(){f2!==b&&Hl(f2),A2=0,R=m2=U=f2=b},D2.flush=function(){return f2===b?e2:V2(A5())},D2}var S9=f3(function(l,n){return Ml(l,1,n)}),A9=f3(function(l,n,f){return Ml(l,d4(n)||0,f)});function E5(l,n){if(typeof l!="function"||n!=null&&typeof n!="function")throw new a4(E);var f=function(){var R=arguments,U=n?n.apply(this,R):R[0],X=f.cache;if(X.has(U))return X.get(U);var e2=l.apply(this,R);return f.cache=X.set(U,e2)||X,e2};return f.cache=new(E5.Cache||j4),f}function I5(l){if(typeof l!="function")throw new a4(E);return function(){var n=arguments;switch(n.length){case 0:return!l.call(this);case 1:return!l.call(this,n[0]);case 2:return!l.call(this,n[0],n[1]);case 3:return!l.call(this,n[0],n[1],n[2])}return!l.apply(this,n)}}E5.Cache=j4;var E9=V8(function(l,n){var f=(n=n.length==1&&i3(n[0])?L3(n[0],u4(K2())):L3(K3(n,1),u4(K2()))).length;return f3(function(R){for(var U=-1,X=G3(R.length,f);++U<X;)R[U]=n[U].call(this,R[U]);return n4(l,this,R)})}),k0=f3(function(l,n){var f=Z4(n,S1(k0));return F4(l,M,b,n,f)}),O6=f3(function(l,n){var f=Z4(n,S1(O6));return F4(l,64,b,n,f)}),I9=z4(function(l,n){return F4(l,256,b,b,b,n)});function m4(l,n){return l===n||l!=l&&n!=n}var B9=y5(l0),T9=y5(function(l,n){return l>=n}),h1=Il(function(){return arguments}())?Il:function(l){return D3(l)&&_3.call(l,"callee")&&!dl.call(l,"callee")},i3=O2.isArray,k9=$0?u4($0):function(l){return D3(l)&&Z3(l)==e};function Y3(l){return l!=null&&B5(l.length)&&!H4(l)}function N3(l){return D3(l)&&Y3(l)}var n1=S8||z0,R9=Z0?u4(Z0):function(l){return D3(l)&&Z3(l)==g};function R0(l){if(!D3(l))return!1;var n=Z3(l);return n==B||n=="[object DOMException]"||typeof l.message=="string"&&typeof l.name=="string"&&!H1(l)}function H4(l){if(!C3(l))return!1;var n=Z3(l);return n==_||n==L||n=="[object AsyncFunction]"||n=="[object Proxy]"}function P6(l){return typeof l=="number"&&l==a3(l)}function B5(l){return typeof l=="number"&&l>-1&&l%1==0&&l<=o}function C3(l){var n=typeof l;return l!=null&&(n=="object"||n=="function")}function D3(l){return l!=null&&typeof l=="object"}var L6=X0?u4(X0):function(l){return D3(l)&&$3(l)==N};function C6(l){return typeof l=="number"||D3(l)&&Z3(l)==F}function H1(l){if(!D3(l)||Z3(l)!=z)return!1;var n=n5(l);if(n===null)return!0;var f=_3.call(n,"constructor")&&n.constructor;return typeof f=="function"&&f instanceof f&&J1.call(f)==v8}var O0=J0?u4(J0):function(l){return D3(l)&&Z3(l)==c2},D6=Y0?u4(Y0):function(l){return D3(l)&&$3(l)==d};function T5(l){return typeof l=="string"||!i3(l)&&D3(l)&&Z3(l)==T}function t4(l){return typeof l=="symbol"||D3(l)&&Z3(l)==u}var A1=Q0?u4(Q0):function(l){return D3(l)&&B5(l.length)&&!!g3[Z3(l)]},O9=y5(t0),P9=y5(function(l,n){return l<=n});function N6(l){if(!l)return[];if(Y3(l))return T5(l)?b4(l):J3(l);if(k1&&l[k1])return function(f){for(var R,U=[];!(R=f.next()).done;)U.push(R.value);return U}(l[k1]());var n=$3(l);return(n==N?K5:n==d?G1:E1)(l)}function W4(l){return l?(l=d4(l))===a||l===-1/0?17976931348623157e292*(l<0?-1:1):l==l?l:0:l===0?l:0}function a3(l){var n=W4(l),f=n%1;return n==n?f?n-f:n:0}function j6(l){return l?o1(a3(l),0,m):0}function d4(l){if(typeof l=="number")return l;if(t4(l))return s;if(C3(l)){var n=typeof l.valueOf=="function"?l.valueOf():l;l=C3(n)?n+"":n}if(typeof l!="string")return l===0?l:+l;l=rl(l);var f=T2.test(l);return f||q2.test(l)?I1(l.slice(2),f?2:8):I2.test(l)?s:+l}function U6(l){return x4(l,Q3(l))}function w3(l){return l==null?"":e4(l)}var L9=M1(function(l,n){if(z1(n)||Y3(n))x4(n,H3(n),l);else for(var f in n)_3.call(n,f)&&C1(l,f,n[f])}),F6=M1(function(l,n){x4(n,Q3(n),l)}),k5=M1(function(l,n,f,R){x4(n,Q3(n),l,R)}),C9=M1(function(l,n,f,R){x4(n,H3(n),l,R)}),D9=z4(J5),N9=f3(function(l,n){l=P3(l);var f=-1,R=n.length,U=R>2?n[2]:b;for(U&&X3(n[0],n[1],U)&&(R=1);++f<R;)for(var X=n[f],e2=Q3(X),f2=-1,m2=e2.length;++f2<m2;){var A2=e2[f2],x2=l[A2];(x2===b||m4(x2,v1[A2])&&!_3.call(l,A2))&&(l[A2]=X[A2])}return l}),j9=f3(function(l){return l.push(b,r6),n4(z6,b,l)});function P0(l,n,f){var R=l==null?b:a1(l,n);return R===b?f:R}function L0(l,n){return l!=null&&a6(l,n,F8)}var U9=l6(function(l,n,f){n!=null&&typeof n.toString!="function"&&(n=Y1.call(n)),l[n]=f},D0(l4)),F9=l6(function(l,n,f){n!=null&&typeof n.toString!="function"&&(n=Y1.call(n)),_3.call(l,n)?l[n].push(f):l[n]=[f]},K2),z9=f3(N1);function H3(l){return Y3(l)?vl(l):e0(l)}function Q3(l){return Y3(l)?vl(l,!0):function(n){if(!C3(n))return function(X){var e2=[];if(X!=null)for(var f2 in P3(X))e2.push(f2);return e2}(n);var f=z1(n),R=[];for(var U in n)(U!="constructor"||!f&&_3.call(n,U))&&R.push(U);return R}(l)}var q9=M1(function(l,n,f){c5(l,n,f)}),z6=M1(function(l,n,f,R){c5(l,n,f,R)}),H9=z4(function(l,n){var f={};if(l==null)return f;var R=!1;n=L3(n,function(X){return X=Q4(X,l),R||(R=X.length>1),X}),x4(l,m0(l),f),R&&(f=f4(f,7,$8));for(var U=n.length;U--;)s0(f,n[U]);return f}),W9=z4(function(l,n){return l==null?{}:function(f,R){return Cl(f,R,function(U,X){return L0(f,X)})}(l,n)});function q6(l,n){if(l==null)return{};var f=L3(m0(l),function(R){return[R]});return n=K2(n),Cl(l,f,function(R,U){return n(R,U[0])})}var H6=e6(H3),W6=e6(Q3);function E1(l){return l==null?[]:W5(l,H3(l))}var K9=x1(function(l,n,f){return n=n.toLowerCase(),l+(f?K6(n):n)});function K6(l){return C0(w3(l).toLowerCase())}function V6(l){return(l=w3(l))&&l.replace(Q2,f8).replace(T4,"")}var V9=x1(function(l,n,f){return l+(f?"-":"")+n.toLowerCase()}),G9=x1(function(l,n,f){return l+(f?" ":"")+n.toLowerCase()}),$9=Jl("toLowerCase"),Z9=x1(function(l,n,f){return l+(f?"_":"")+n.toLowerCase()}),X9=x1(function(l,n,f){return l+(f?" ":"")+C0(n)}),J9=x1(function(l,n,f){return l+(f?" ":"")+n.toUpperCase()}),C0=Jl("toUpperCase");function G6(l,n,f){return l=w3(l),(n=f?b:n)===b?function(R){return O4.test(R)}(l)?function(R){return R.match(k4)||[]}(l):function(R){return R.match(n2)||[]}(l):l.match(n)||[]}var $6=f3(function(l,n){try{return n4(l,b,n)}catch(f){return R0(f)?f:new b3(f)}}),Y9=z4(function(l,n){return o4(n,function(f){f=S4(f),U4(l,f,T0(l[f],l))}),l});function D0(l){return function(){return l}}var Q9=Ql(),l7=Ql(!0);function l4(l){return l}function N0(l){return Tl(typeof l=="function"?l:f4(l,1))}var n7=f3(function(l,n){return function(f){return N1(f,l,n)}}),u7=f3(function(l,n){return function(f){return N1(l,f,n)}});function j0(l,n,f){var R=H3(n),U=h5(n,R);f!=null||C3(n)&&(U.length||!R.length)||(f=n,n=l,l=this,U=h5(n,H3(n)));var X=!(C3(f)&&"chain"in f&&!f.chain),e2=H4(l);return o4(U,function(f2){var m2=n[f2];l[f2]=m2,e2&&(l.prototype[f2]=function(){var A2=this.__chain__;if(X||A2){var x2=l(this.__wrapped__),B2=x2.__actions__=J3(this.__actions__);return B2.push({func:m2,args:arguments,thisArg:l}),x2.__chain__=A2,x2}return m2.apply(l,$4([this.value()],arguments))})}),l}function U0(){}var e7=p0(L3),t7=p0(ll),r7=p0(U5);function Z6(l){return _0(l)?F5(S4(l)):function(n){return function(f){return a1(f,n)}}(l)}var i7=n6(),o7=n6(!0);function F0(){return[]}function z0(){return!1}var q0,a7=m5(function(l,n){return l+n},0),s7=b0("ceil"),f7=m5(function(l,n){return l/n},1),h7=b0("floor"),c7=m5(function(l,n){return l*n},1),d7=b0("round"),p7=m5(function(l,n){return l-n},0);return H.after=function(l,n){if(typeof n!="function")throw new a4(E);return l=a3(l),function(){if(--l<1)return n.apply(this,arguments)}},H.ary=B6,H.assign=L9,H.assignIn=F6,H.assignInWith=k5,H.assignWith=C9,H.at=D9,H.before=T6,H.bind=T0,H.bindAll=Y9,H.bindKey=k6,H.castArray=function(){if(!arguments.length)return[];var l=arguments[0];return i3(l)?l:[l]},H.chain=A6,H.chunk=function(l,n,f){n=(f?X3(l,n,f):n===b)?1:U3(a3(n),0);var R=l==null?0:l.length;if(!R||n<1)return[];for(var U=0,X=0,e2=O2(t5(R/n));U<R;)e2[X++]=h4(l,U,U+=n);return e2},H.compact=function(l){for(var n=-1,f=l==null?0:l.length,R=0,U=[];++n<f;){var X=l[n];X&&(U[R++]=X)}return U},H.concat=function(){var l=arguments.length;if(!l)return[];for(var n=O2(l-1),f=arguments[0],R=l;R--;)n[R-1]=arguments[R];return $4(i3(f)?J3(f):[f],K3(n,1))},H.cond=function(l){var n=l==null?0:l.length,f=K2();return l=n?L3(l,function(R){if(typeof R[1]!="function")throw new a4(E);return[f(R[0]),R[1]]}):[],f3(function(R){for(var U=-1;++U<n;){var X=l[U];if(n4(X[0],this,R))return n4(X[1],this,R)}})},H.conforms=function(l){return function(n){var f=H3(n);return function(R){return _l(R,n,f)}}(f4(l,1))},H.constant=D0,H.countBy=g9,H.create=function(l,n){var f=_1(l);return n==null?f:wl(f,n)},H.curry=function l(n,f,R){var U=F4(n,8,b,b,b,b,b,f=R?b:f);return U.placeholder=l.placeholder,U},H.curryRight=function l(n,f,R){var U=F4(n,16,b,b,b,b,b,f=R?b:f);return U.placeholder=l.placeholder,U},H.debounce=R6,H.defaults=N9,H.defaultsDeep=j9,H.defer=S9,H.delay=A9,H.difference=Y8,H.differenceBy=Q8,H.differenceWith=l9,H.drop=function(l,n,f){var R=l==null?0:l.length;return R?h4(l,(n=f||n===b?1:a3(n))<0?0:n,R):[]},H.dropRight=function(l,n,f){var R=l==null?0:l.length;return R?h4(l,0,(n=R-(n=f||n===b?1:a3(n)))<0?0:n):[]},H.dropRightWhile=function(l,n){return l&&l.length?p5(l,K2(n,3),!0,!0):[]},H.dropWhile=function(l,n){return l&&l.length?p5(l,K2(n,3),!0):[]},H.fill=function(l,n,f,R){var U=l==null?0:l.length;return U?(f&&typeof f!="number"&&X3(l,n,f)&&(f=0,R=U),function(X,e2,f2,m2){var A2=X.length;for((f2=a3(f2))<0&&(f2=-f2>A2?0:A2+f2),(m2=m2===b||m2>A2?A2:a3(m2))<0&&(m2+=A2),m2=f2>m2?0:j6(m2);f2<m2;)X[f2++]=e2;return X}(l,n,f,R)):[]},H.filter=function(l,n){return(i3(l)?G4:Sl)(l,K2(n,3))},H.flatMap=function(l,n){return K3(S5(l,n),1)},H.flatMapDeep=function(l,n){return K3(S5(l,n),a)},H.flatMapDepth=function(l,n,f){return f=f===b?1:a3(f),K3(S5(l,n),f)},H.flatten=_6,H.flattenDeep=function(l){return l!=null&&l.length?K3(l,a):[]},H.flattenDepth=function(l,n){return l!=null&&l.length?K3(l,n=n===b?1:a3(n)):[]},H.flip=function(l){return F4(l,512)},H.flow=Q9,H.flowRight=l7,H.fromPairs=function(l){for(var n=-1,f=l==null?0:l.length,R={};++n<f;){var U=l[n];R[U[0]]=U[1]}return R},H.functions=function(l){return l==null?[]:h5(l,H3(l))},H.functionsIn=function(l){return l==null?[]:h5(l,Q3(l))},H.groupBy=y9,H.initial=function(l){return l!=null&&l.length?h4(l,0,-1):[]},H.intersection=n9,H.intersectionBy=u9,H.intersectionWith=e9,H.invert=U9,H.invertBy=F9,H.invokeMap=w9,H.iteratee=N0,H.keyBy=_9,H.keys=H3,H.keysIn=Q3,H.map=S5,H.mapKeys=function(l,n){var f={};return n=K2(n,3),M4(l,function(R,U,X){U4(f,n(R,U,X),R)}),f},H.mapValues=function(l,n){var f={};return n=K2(n,3),M4(l,function(R,U,X){U4(f,U,n(R,U,X))}),f},H.matches=function(l){return Rl(f4(l,1))},H.matchesProperty=function(l,n){return Ol(l,f4(n,1))},H.memoize=E5,H.merge=q9,H.mergeWith=z6,H.method=n7,H.methodOf=u7,H.mixin=j0,H.negate=I5,H.nthArg=function(l){return l=a3(l),f3(function(n){return Pl(n,l)})},H.omit=H9,H.omitBy=function(l,n){return q6(l,I5(K2(n)))},H.once=function(l){return T6(2,l)},H.orderBy=function(l,n,f,R){return l==null?[]:(i3(n)||(n=n==null?[]:[n]),i3(f=R?b:f)||(f=f==null?[]:[f]),Ll(l,n,f))},H.over=e7,H.overArgs=E9,H.overEvery=t7,H.overSome=r7,H.partial=k0,H.partialRight=O6,H.partition=M9,H.pick=W9,H.pickBy=q6,H.property=Z6,H.propertyOf=function(l){return function(n){return l==null?b:a1(l,n)}},H.pull=t9,H.pullAll=x6,H.pullAllBy=function(l,n,f){return l&&l.length&&n&&n.length?r0(l,n,K2(f,2)):l},H.pullAllWith=function(l,n,f){return l&&l.length&&n&&n.length?r0(l,n,b,f):l},H.pullAt=r9,H.range=i7,H.rangeRight=o7,H.rearg=I9,H.reject=function(l,n){return(i3(l)?G4:Sl)(l,I5(K2(n,3)))},H.remove=function(l,n){var f=[];if(!l||!l.length)return f;var R=-1,U=[],X=l.length;for(n=K2(n,3);++R<X;){var e2=l[R];n(e2,R,l)&&(f.push(e2),U.push(R))}return Dl(l,U),f},H.rest=function(l,n){if(typeof l!="function")throw new a4(E);return f3(l,n=n===b?n:a3(n))},H.reverse=I0,H.sampleSize=function(l,n,f){return n=(f?X3(l,n,f):n===b)?1:a3(n),(i3(l)?C8:q8)(l,n)},H.set=function(l,n,f){return l==null?l:U1(l,n,f)},H.setWith=function(l,n,f,R){return R=typeof R=="function"?R:b,l==null?l:U1(l,n,f,R)},H.shuffle=function(l){return(i3(l)?D8:W8)(l)},H.slice=function(l,n,f){var R=l==null?0:l.length;return R?(f&&typeof f!="number"&&X3(l,n,f)?(n=0,f=R):(n=n==null?0:a3(n),f=f===b?R:a3(f)),h4(l,n,f)):[]},H.sortBy=x9,H.sortedUniq=function(l){return l&&l.length?jl(l):[]},H.sortedUniqBy=function(l,n){return l&&l.length?jl(l,K2(n,2)):[]},H.split=function(l,n,f){return f&&typeof f!="number"&&X3(l,n,f)&&(n=f=b),(f=f===b?m:f>>>0)?(l=w3(l))&&(typeof n=="string"||n!=null&&!O0(n))&&!(n=e4(n))&&g1(l)?l1(b4(l),0,f):l.split(n,f):[]},H.spread=function(l,n){if(typeof l!="function")throw new a4(E);return n=n==null?0:U3(a3(n),0),f3(function(f){var R=f[n],U=l1(f,0,n);return R&&$4(U,R),n4(l,this,U)})},H.tail=function(l){var n=l==null?0:l.length;return n?h4(l,1,n):[]},H.take=function(l,n,f){return l&&l.length?h4(l,0,(n=f||n===b?1:a3(n))<0?0:n):[]},H.takeRight=function(l,n,f){var R=l==null?0:l.length;return R?h4(l,(n=R-(n=f||n===b?1:a3(n)))<0?0:n,R):[]},H.takeRightWhile=function(l,n){return l&&l.length?p5(l,K2(n,3),!1,!0):[]},H.takeWhile=function(l,n){return l&&l.length?p5(l,K2(n,3)):[]},H.tap=function(l,n){return n(l),l},H.throttle=function(l,n,f){var R=!0,U=!0;if(typeof l!="function")throw new a4(E);return C3(f)&&(R="leading"in f?!!f.leading:R,U="trailing"in f?!!f.trailing:U),R6(l,n,{leading:R,maxWait:n,trailing:U})},H.thru=x5,H.toArray=N6,H.toPairs=H6,H.toPairsIn=W6,H.toPath=function(l){return i3(l)?L3(l,S4):t4(l)?[l]:J3(m6(w3(l)))},H.toPlainObject=U6,H.transform=function(l,n,f){var R=i3(l),U=R||n1(l)||A1(l);if(n=K2(n,4),f==null){var X=l&&l.constructor;f=U?R?new X:[]:C3(l)&&H4(X)?_1(n5(l)):{}}return(U?o4:M4)(l,function(e2,f2,m2){return n(f,e2,f2,m2)}),f},H.unary=function(l){return B6(l,1)},H.union=i9,H.unionBy=o9,H.unionWith=a9,H.uniq=function(l){return l&&l.length?Y4(l):[]},H.uniqBy=function(l,n){return l&&l.length?Y4(l,K2(n,2)):[]},H.uniqWith=function(l,n){return n=typeof n=="function"?n:b,l&&l.length?Y4(l,b,n):[]},H.unset=function(l,n){return l==null||s0(l,n)},H.unzip=B0,H.unzipWith=S6,H.update=function(l,n,f){return l==null?l:Fl(l,n,c0(f))},H.updateWith=function(l,n,f,R){return R=typeof R=="function"?R:b,l==null?l:Fl(l,n,c0(f),R)},H.values=E1,H.valuesIn=function(l){return l==null?[]:W5(l,Q3(l))},H.without=s9,H.words=G6,H.wrap=function(l,n){return k0(c0(n),l)},H.xor=f9,H.xorBy=h9,H.xorWith=c9,H.zip=d9,H.zipObject=function(l,n){return ql(l||[],n||[],C1)},H.zipObjectDeep=function(l,n){return ql(l||[],n||[],U1)},H.zipWith=p9,H.entries=H6,H.entriesIn=W6,H.extend=F6,H.extendWith=k5,j0(H,H),H.add=a7,H.attempt=$6,H.camelCase=K9,H.capitalize=K6,H.ceil=s7,H.clamp=function(l,n,f){return f===b&&(f=n,n=b),f!==b&&(f=(f=d4(f))==f?f:0),n!==b&&(n=(n=d4(n))==n?n:0),o1(d4(l),n,f)},H.clone=function(l){return f4(l,4)},H.cloneDeep=function(l){return f4(l,5)},H.cloneDeepWith=function(l,n){return f4(l,5,n=typeof n=="function"?n:b)},H.cloneWith=function(l,n){return f4(l,4,n=typeof n=="function"?n:b)},H.conformsTo=function(l,n){return n==null||_l(l,n,H3(n))},H.deburr=V6,H.defaultTo=function(l,n){return l==null||l!=l?n:l},H.divide=f7,H.endsWith=function(l,n,f){l=w3(l),n=e4(n);var R=l.length,U=f=f===b?R:o1(a3(f),0,R);return(f-=n.length)>=0&&l.slice(f,U)==n},H.eq=m4,H.escape=function(l){return(l=w3(l))&&a2.test(l)?l.replace(P2,h8):l},H.escapeRegExp=function(l){return(l=w3(l))&&v.test(l)?l.replace(k,"\\$&"):l},H.every=function(l,n,f){var R=i3(l)?ll:j8;return f&&X3(l,n,f)&&(n=b),R(l,K2(n,3))},H.find=m9,H.findIndex=y6,H.findKey=function(l,n){return nl(l,K2(n,3),M4)},H.findLast=v9,H.findLastIndex=w6,H.findLastKey=function(l,n){return nl(l,K2(n,3),Q5)},H.floor=h7,H.forEach=E6,H.forEachRight=I6,H.forIn=function(l,n){return l==null?l:Y5(l,K2(n,3),Q3)},H.forInRight=function(l,n){return l==null?l:Al(l,K2(n,3),Q3)},H.forOwn=function(l,n){return l&&M4(l,K2(n,3))},H.forOwnRight=function(l,n){return l&&Q5(l,K2(n,3))},H.get=P0,H.gt=B9,H.gte=T9,H.has=function(l,n){return l!=null&&a6(l,n,U8)},H.hasIn=L0,H.head=M6,H.identity=l4,H.includes=function(l,n,f,R){l=Y3(l)?l:E1(l),f=f&&!R?a3(f):0;var U=l.length;return f<0&&(f=U3(U+f,0)),T5(l)?f<=U&&l.indexOf(n,f)>-1:!!U&&b1(l,n,f)>-1},H.indexOf=function(l,n,f){var R=l==null?0:l.length;if(!R)return-1;var U=f==null?0:a3(f);return U<0&&(U=U3(R+U,0)),b1(l,n,U)},H.inRange=function(l,n,f){return n=W4(n),f===b?(f=n,n=0):f=W4(f),function(R,U,X){return R>=G3(U,X)&&R<U3(U,X)}(l=d4(l),n,f)},H.invoke=z9,H.isArguments=h1,H.isArray=i3,H.isArrayBuffer=k9,H.isArrayLike=Y3,H.isArrayLikeObject=N3,H.isBoolean=function(l){return l===!0||l===!1||D3(l)&&Z3(l)==y},H.isBuffer=n1,H.isDate=R9,H.isElement=function(l){return D3(l)&&l.nodeType===1&&!H1(l)},H.isEmpty=function(l){if(l==null)return!0;if(Y3(l)&&(i3(l)||typeof l=="string"||typeof l.splice=="function"||n1(l)||A1(l)||h1(l)))return!l.length;var n=$3(l);if(n==N||n==d)return!l.size;if(z1(l))return!e0(l).length;for(var f in l)if(_3.call(l,f))return!1;return!0},H.isEqual=function(l,n){return j1(l,n)},H.isEqualWith=function(l,n,f){var R=(f=typeof f=="function"?f:b)?f(l,n):b;return R===b?j1(l,n,b,f):!!R},H.isError=R0,H.isFinite=function(l){return typeof l=="number"&&bl(l)},H.isFunction=H4,H.isInteger=P6,H.isLength=B5,H.isMap=L6,H.isMatch=function(l,n){return l===n||u0(l,n,y0(n))},H.isMatchWith=function(l,n,f){return f=typeof f=="function"?f:b,u0(l,n,y0(n),f)},H.isNaN=function(l){return C6(l)&&l!=+l},H.isNative=function(l){if(X8(l))throw new b3("Unsupported core-js use. Try https://npms.io/search?q=ponyfill.");return Bl(l)},H.isNil=function(l){return l==null},H.isNull=function(l){return l===null},H.isNumber=C6,H.isObject=C3,H.isObjectLike=D3,H.isPlainObject=H1,H.isRegExp=O0,H.isSafeInteger=function(l){return P6(l)&&l>=-9007199254740991&&l<=o},H.isSet=D6,H.isString=T5,H.isSymbol=t4,H.isTypedArray=A1,H.isUndefined=function(l){return l===b},H.isWeakMap=function(l){return D3(l)&&$3(l)==t},H.isWeakSet=function(l){return D3(l)&&Z3(l)=="[object WeakSet]"},H.join=function(l,n){return l==null?"":A8.call(l,n)},H.kebabCase=V9,H.last=c4,H.lastIndexOf=function(l,n,f){var R=l==null?0:l.length;if(!R)return-1;var U=R;return f!==b&&(U=(U=a3(f))<0?U3(R+U,0):G3(U,R-1)),n==n?function(X,e2,f2){for(var m2=f2+1;m2--;)if(X[m2]===e2)return m2;return m2}(l,n,U):V1(l,ul,U,!0)},H.lowerCase=G9,H.lowerFirst=$9,H.lt=O9,H.lte=P9,H.max=function(l){return l&&l.length?f5(l,l4,l0):b},H.maxBy=function(l,n){return l&&l.length?f5(l,K2(n,2),l0):b},H.mean=function(l){return el(l,l4)},H.meanBy=function(l,n){return el(l,K2(n,2))},H.min=function(l){return l&&l.length?f5(l,l4,t0):b},H.minBy=function(l,n){return l&&l.length?f5(l,K2(n,2),t0):b},H.stubArray=F0,H.stubFalse=z0,H.stubObject=function(){return{}},H.stubString=function(){return""},H.stubTrue=function(){return!0},H.multiply=c7,H.nth=function(l,n){return l&&l.length?Pl(l,a3(n)):b},H.noConflict=function(){return W3._===this&&(W3._=y8),this},H.noop=U0,H.now=A5,H.pad=function(l,n,f){l=w3(l);var R=(n=a3(n))?m1(l):0;if(!n||R>=n)return l;var U=(n-R)/2;return v5(r5(U),f)+l+v5(t5(U),f)},H.padEnd=function(l,n,f){l=w3(l);var R=(n=a3(n))?m1(l):0;return n&&R<n?l+v5(n-R,f):l},H.padStart=function(l,n,f){l=w3(l);var R=(n=a3(n))?m1(l):0;return n&&R<n?v5(n-R,f)+l:l},H.parseInt=function(l,n,f){return f||n==null?n=0:n&&(n=+n),B8(w3(l).replace(D,""),n||0)},H.random=function(l,n,f){if(f&&typeof f!="boolean"&&X3(l,n,f)&&(n=f=b),f===b&&(typeof n=="boolean"?(f=n,n=b):typeof l=="boolean"&&(f=l,l=b)),l===b&&n===b?(l=0,n=1):(l=W4(l),n===b?(n=l,l=0):n=W4(n)),l>n){var R=l;l=n,n=R}if(f||l%1||n%1){var U=gl();return G3(l+U*(n-l+D4("1e-"+((U+"").length-1))),n)}return i0(l,n)},H.reduce=function(l,n,f){var R=i3(l)?j5:tl,U=arguments.length<3;return R(l,K2(n,4),f,U,J4)},H.reduceRight=function(l,n,f){var R=i3(l)?i8:tl,U=arguments.length<3;return R(l,K2(n,4),f,U,xl)},H.repeat=function(l,n,f){return n=(f?X3(l,n,f):n===b)?1:a3(n),o0(w3(l),n)},H.replace=function(){var l=arguments,n=w3(l[0]);return l.length<3?n:n.replace(l[1],l[2])},H.result=function(l,n,f){var R=-1,U=(n=Q4(n,l)).length;for(U||(U=1,l=b);++R<U;){var X=l==null?b:l[S4(n[R])];X===b&&(R=U,X=f),l=H4(X)?X.call(l):X}return l},H.round=d7,H.runInContext=y2,H.sample=function(l){return(i3(l)?yl:z8)(l)},H.size=function(l){if(l==null)return 0;if(Y3(l))return T5(l)?m1(l):l.length;var n=$3(l);return n==N||n==d?l.size:e0(l).length},H.snakeCase=Z9,H.some=function(l,n,f){var R=i3(l)?U5:K8;return f&&X3(l,n,f)&&(n=b),R(l,K2(n,3))},H.sortedIndex=function(l,n){return d5(l,n)},H.sortedIndexBy=function(l,n,f){return a0(l,n,K2(f,2))},H.sortedIndexOf=function(l,n){var f=l==null?0:l.length;if(f){var R=d5(l,n);if(R<f&&m4(l[R],n))return R}return-1},H.sortedLastIndex=function(l,n){return d5(l,n,!0)},H.sortedLastIndexBy=function(l,n,f){return a0(l,n,K2(f,2),!0)},H.sortedLastIndexOf=function(l,n){if(l!=null&&l.length){var f=d5(l,n,!0)-1;if(m4(l[f],n))return f}return-1},H.startCase=X9,H.startsWith=function(l,n,f){return l=w3(l),f=f==null?0:o1(a3(f),0,l.length),n=e4(n),l.slice(f,f+n.length)==n},H.subtract=p7,H.sum=function(l){return l&&l.length?q5(l,l4):0},H.sumBy=function(l,n){return l&&l.length?q5(l,K2(n,2)):0},H.template=function(l,n,f){var R=H.templateSettings;f&&X3(l,n,f)&&(n=b),l=w3(l),n=k5({},n,R,t6);var U,X,e2=k5({},n.imports,R.imports,t6),f2=H3(e2),m2=W5(e2,f2),A2=0,x2=n.interpolate||z2,B2="__p += '",U2=V5((n.escape||z2).source+"|"+x2.source+"|"+(x2===i2?h2:z2).source+"|"+(n.evaluate||z2).source+"|$","g"),F2="//# sourceURL="+(_3.call(n,"sourceURL")?(n.sourceURL+"").replace(/\s/g," "):"lodash.templateSources["+ ++L4+"]")+`
`;l.replace(U2,function(k2,V2,D2,G2,J2,c3){return D2||(D2=G2),B2+=l.slice(A2,c3).replace(C2,c8),V2&&(U=!0,B2+=`' +
__e(`+V2+`) +
'`),J2&&(X=!0,B2+=`';
`+J2+`;
__p += '`),D2&&(B2+=`' +
((__t = (`+D2+`)) == null ? '' : __t) +
'`),A2=c3+k2.length,k2}),B2+=`';
`;var W2=_3.call(n,"variable")&&n.variable;if(W2){if(t2.test(W2))throw new b3("Invalid `variable` option passed into `_.template`")}else B2=`with (obj) {
`+B2+`
}
`;B2=(X?B2.replace(Z,""):B2).replace(p2,"$1").replace(w2,"$1;"),B2="function("+(W2||"obj")+`) {
`+(W2?"":`obj || (obj = {});
`)+"var __t, __p = ''"+(U?", __e = _.escape":"")+(X?`, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
`:`;
`)+B2+`return __p
}`;var E2=$6(function(){return j3(f2,F2+"return "+B2).apply(b,m2)});if(E2.source=B2,R0(E2))throw E2;return E2},H.times=function(l,n){if((l=a3(l))<1||l>o)return[];var f=m,R=G3(l,m);n=K2(n),l-=m;for(var U=H5(R,n);++f<l;)n(f);return U},H.toFinite=W4,H.toInteger=a3,H.toLength=j6,H.toLower=function(l){return w3(l).toLowerCase()},H.toNumber=d4,H.toSafeInteger=function(l){return l?o1(a3(l),-9007199254740991,o):l===0?l:0},H.toString=w3,H.toUpper=function(l){return w3(l).toUpperCase()},H.trim=function(l,n,f){if((l=w3(l))&&(f||n===b))return rl(l);if(!l||!(n=e4(n)))return l;var R=b4(l),U=b4(n);return l1(R,il(R,U),ol(R,U)+1).join("")},H.trimEnd=function(l,n,f){if((l=w3(l))&&(f||n===b))return l.slice(0,sl(l)+1);if(!l||!(n=e4(n)))return l;var R=b4(l);return l1(R,0,ol(R,b4(n))+1).join("")},H.trimStart=function(l,n,f){if((l=w3(l))&&(f||n===b))return l.replace(D,"");if(!l||!(n=e4(n)))return l;var R=b4(l);return l1(R,il(R,b4(n))).join("")},H.truncate=function(l,n){var f=30,R="...";if(C3(n)){var U="separator"in n?n.separator:U;f="length"in n?a3(n.length):f,R="omission"in n?e4(n.omission):R}var X=(l=w3(l)).length;if(g1(l)){var e2=b4(l);X=e2.length}if(f>=X)return l;var f2=f-m1(R);if(f2<1)return R;var m2=e2?l1(e2,0,f2).join(""):l.slice(0,f2);if(U===b)return m2+R;if(e2&&(f2+=m2.length-f2),O0(U)){if(l.slice(f2).search(U)){var A2,x2=m2;for(U.global||(U=V5(U.source,w3(d2.exec(U))+"g")),U.lastIndex=0;A2=U.exec(x2);)var B2=A2.index;m2=m2.slice(0,B2===b?f2:B2)}}else if(l.indexOf(e4(U),f2)!=f2){var U2=m2.lastIndexOf(U);U2>-1&&(m2=m2.slice(0,U2))}return m2+R},H.unescape=function(l){return(l=w3(l))&&J.test(l)?l.replace(R2,p8):l},H.uniqueId=function(l){var n=++m8;return w3(l)+n},H.upperCase=J9,H.upperFirst=C0,H.each=E6,H.eachRight=I6,H.first=M6,j0(H,(q0={},M4(H,function(l,n){_3.call(H.prototype,n)||(q0[n]=l)}),q0),{chain:!1}),H.VERSION="4.17.21",o4(["bind","bindKey","curry","curryRight","partial","partialRight"],function(l){H[l].placeholder=H}),o4(["drop","take"],function(l,n){d3.prototype[l]=function(f){f=f===b?1:U3(a3(f),0);var R=this.__filtered__&&!n?new d3(this):this.clone();return R.__filtered__?R.__takeCount__=G3(f,R.__takeCount__):R.__views__.push({size:G3(f,m),type:l+(R.__dir__<0?"Right":"")}),R},d3.prototype[l+"Right"]=function(f){return this.reverse()[l](f).reverse()}}),o4(["filter","map","takeWhile"],function(l,n){var f=n+1,R=f==1||f==3;d3.prototype[l]=function(U){var X=this.clone();return X.__iteratees__.push({iteratee:K2(U,3),type:f}),X.__filtered__=X.__filtered__||R,X}}),o4(["head","last"],function(l,n){var f="take"+(n?"Right":"");d3.prototype[l]=function(){return this[f](1).value()[0]}}),o4(["initial","tail"],function(l,n){var f="drop"+(n?"":"Right");d3.prototype[l]=function(){return this.__filtered__?new d3(this):this[f](1)}}),d3.prototype.compact=function(){return this.filter(l4)},d3.prototype.find=function(l){return this.filter(l).head()},d3.prototype.findLast=function(l){return this.reverse().find(l)},d3.prototype.invokeMap=f3(function(l,n){return typeof l=="function"?new d3(this):this.map(function(f){return N1(f,l,n)})}),d3.prototype.reject=function(l){return this.filter(I5(K2(l)))},d3.prototype.slice=function(l,n){l=a3(l);var f=this;return f.__filtered__&&(l>0||n<0)?new d3(f):(l<0?f=f.takeRight(-l):l&&(f=f.drop(l)),n!==b&&(f=(n=a3(n))<0?f.dropRight(-n):f.take(n-l)),f)},d3.prototype.takeRightWhile=function(l){return this.reverse().takeWhile(l).reverse()},d3.prototype.toArray=function(){return this.take(m)},M4(d3.prototype,function(l,n){var f=/^(?:filter|find|map|reject)|While$/.test(n),R=/^(?:head|last)$/.test(n),U=H[R?"take"+(n=="last"?"Right":""):n],X=R||/^find/.test(n);U&&(H.prototype[n]=function(){var e2=this.__wrapped__,f2=R?[1]:arguments,m2=e2 instanceof d3,A2=f2[0],x2=m2||i3(e2),B2=function(V2){var D2=U.apply(H,$4([V2],f2));return R&&U2?D2[0]:D2};x2&&f&&typeof A2=="function"&&A2.length!=1&&(m2=x2=!1);var U2=this.__chain__,F2=!!this.__actions__.length,W2=X&&!U2,E2=m2&&!F2;if(!X&&x2){e2=E2?e2:new d3(this);var k2=l.apply(e2,f2);return k2.__actions__.push({func:x5,args:[B2],thisArg:b}),new s4(k2,U2)}return W2&&E2?l.apply(this,f2):(k2=this.thru(B2),W2?R?k2.value()[0]:k2.value():k2)})}),o4(["pop","push","shift","sort","splice","unshift"],function(l){var n=Z1[l],f=/^(?:push|sort|unshift)$/.test(l)?"tap":"thru",R=/^(?:pop|shift)$/.test(l);H.prototype[l]=function(){var U=arguments;if(R&&!this.__chain__){var X=this.value();return n.apply(i3(X)?X:[],U)}return this[f](function(e2){return n.apply(i3(e2)?e2:[],U)})}}),M4(d3.prototype,function(l,n){var f=H[n];if(f){var R=f.name+"";_3.call(w1,R)||(w1[R]=[]),w1[R].push({name:n,func:f})}}),w1[g5(b,2).name]=[{name:"wrapper",func:b}],d3.prototype.clone=function(){var l=new d3(this.__wrapped__);return l.__actions__=J3(this.__actions__),l.__dir__=this.__dir__,l.__filtered__=this.__filtered__,l.__iteratees__=J3(this.__iteratees__),l.__takeCount__=this.__takeCount__,l.__views__=J3(this.__views__),l},d3.prototype.reverse=function(){if(this.__filtered__){var l=new d3(this);l.__dir__=-1,l.__filtered__=!0}else(l=this.clone()).__dir__*=-1;return l},d3.prototype.value=function(){var l=this.__wrapped__.value(),n=this.__dir__,f=i3(l),R=n<0,U=f?l.length:0,X=function(c3,H2,Z2){for(var F3=-1,r4=Z2.length;++F3<r4;){var A4=Z2[F3],z3=A4.size;switch(A4.type){case"drop":c3+=z3;break;case"dropRight":H2-=z3;break;case"take":H2=G3(H2,c3+z3);break;case"takeRight":c3=U3(c3,H2-z3)}}return{start:c3,end:H2}}(0,U,this.__views__),e2=X.start,f2=X.end,m2=f2-e2,A2=R?f2:e2-1,x2=this.__iteratees__,B2=x2.length,U2=0,F2=G3(m2,this.__takeCount__);if(!f||!R&&U==m2&&F2==m2)return zl(l,this.__actions__);var W2=[];l:for(;m2--&&U2<F2;){for(var E2=-1,k2=l[A2+=n];++E2<B2;){var V2=x2[E2],D2=V2.iteratee,G2=V2.type,J2=D2(k2);if(G2==2)k2=J2;else if(!J2){if(G2==1)continue l;break l}}W2[U2++]=k2}return W2},H.prototype.at=b9,H.prototype.chain=function(){return A6(this)},H.prototype.commit=function(){return new s4(this.value(),this.__chain__)},H.prototype.next=function(){this.__values__===b&&(this.__values__=N6(this.value()));var l=this.__index__>=this.__values__.length;return{done:l,value:l?b:this.__values__[this.__index__++]}},H.prototype.plant=function(l){for(var n,f=this;f instanceof a5;){var R=v6(f);R.__index__=0,R.__values__=b,n?U.__wrapped__=R:n=R;var U=R;f=f.__wrapped__}return U.__wrapped__=l,n},H.prototype.reverse=function(){var l=this.__wrapped__;if(l instanceof d3){var n=l;return this.__actions__.length&&(n=new d3(this)),(n=n.reverse()).__actions__.push({func:x5,args:[I0],thisArg:b}),new s4(n,this.__chain__)}return this.thru(I0)},H.prototype.toJSON=H.prototype.valueOf=H.prototype.value=function(){return zl(this.__wrapped__,this.__actions__)},H.prototype.first=H.prototype.head,k1&&(H.prototype[k1]=function(){return this}),H}();W3._=$1,(C=(function(){return $1}).call(O,A,O,u2))===b||(u2.exports=C)}).call(this)},2318:(u2,O,A)=>{var C=A(5717),b=A(3349),E=A(9509).Buffer,I=new Array(16);function i(){b.call(this,64),this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878}function M(m,x){return m<<x|m>>>32-x}function h(m,x,S,p,y,g,B){return M(m+(x&S|~x&p)+y+g|0,B)+x|0}function a(m,x,S,p,y,g,B){return M(m+(x&p|S&~p)+y+g|0,B)+x|0}function o(m,x,S,p,y,g,B){return M(m+(x^S^p)+y+g|0,B)+x|0}function s(m,x,S,p,y,g,B){return M(m+(S^(x|~p))+y+g|0,B)+x|0}C(i,b),i.prototype._update=function(){for(var m=I,x=0;x<16;++x)m[x]=this._block.readInt32LE(4*x);var S=this._a,p=this._b,y=this._c,g=this._d;S=h(S,p,y,g,m[0],3614090360,7),g=h(g,S,p,y,m[1],3905402710,12),y=h(y,g,S,p,m[2],606105819,17),p=h(p,y,g,S,m[3],3250441966,22),S=h(S,p,y,g,m[4],4118548399,7),g=h(g,S,p,y,m[5],1200080426,12),y=h(y,g,S,p,m[6],2821735955,17),p=h(p,y,g,S,m[7],4249261313,22),S=h(S,p,y,g,m[8],1770035416,7),g=h(g,S,p,y,m[9],2336552879,12),y=h(y,g,S,p,m[10],4294925233,17),p=h(p,y,g,S,m[11],2304563134,22),S=h(S,p,y,g,m[12],1804603682,7),g=h(g,S,p,y,m[13],4254626195,12),y=h(y,g,S,p,m[14],2792965006,17),S=a(S,p=h(p,y,g,S,m[15],1236535329,22),y,g,m[1],4129170786,5),g=a(g,S,p,y,m[6],3225465664,9),y=a(y,g,S,p,m[11],643717713,14),p=a(p,y,g,S,m[0],3921069994,20),S=a(S,p,y,g,m[5],3593408605,5),g=a(g,S,p,y,m[10],38016083,9),y=a(y,g,S,p,m[15],3634488961,14),p=a(p,y,g,S,m[4],3889429448,20),S=a(S,p,y,g,m[9],568446438,5),g=a(g,S,p,y,m[14],3275163606,9),y=a(y,g,S,p,m[3],4107603335,14),p=a(p,y,g,S,m[8],1163531501,20),S=a(S,p,y,g,m[13],2850285829,5),g=a(g,S,p,y,m[2],4243563512,9),y=a(y,g,S,p,m[7],1735328473,14),S=o(S,p=a(p,y,g,S,m[12],2368359562,20),y,g,m[5],4294588738,4),g=o(g,S,p,y,m[8],2272392833,11),y=o(y,g,S,p,m[11],1839030562,16),p=o(p,y,g,S,m[14],4259657740,23),S=o(S,p,y,g,m[1],2763975236,4),g=o(g,S,p,y,m[4],1272893353,11),y=o(y,g,S,p,m[7],4139469664,16),p=o(p,y,g,S,m[10],3200236656,23),S=o(S,p,y,g,m[13],681279174,4),g=o(g,S,p,y,m[0],3936430074,11),y=o(y,g,S,p,m[3],3572445317,16),p=o(p,y,g,S,m[6],76029189,23),S=o(S,p,y,g,m[9],3654602809,4),g=o(g,S,p,y,m[12],3873151461,11),y=o(y,g,S,p,m[15],530742520,16),S=s(S,p=o(p,y,g,S,m[2],3299628645,23),y,g,m[0],4096336452,6),g=s(g,S,p,y,m[7],1126891415,10),y=s(y,g,S,p,m[14],2878612391,15),p=s(p,y,g,S,m[5],4237533241,21),S=s(S,p,y,g,m[12],1700485571,6),g=s(g,S,p,y,m[3],2399980690,10),y=s(y,g,S,p,m[10],4293915773,15),p=s(p,y,g,S,m[1],2240044497,21),S=s(S,p,y,g,m[8],1873313359,6),g=s(g,S,p,y,m[15],4264355552,10),y=s(y,g,S,p,m[6],2734768916,15),p=s(p,y,g,S,m[13],1309151649,21),S=s(S,p,y,g,m[4],4149444226,6),g=s(g,S,p,y,m[11],3174756917,10),y=s(y,g,S,p,m[2],718787259,15),p=s(p,y,g,S,m[9],3951481745,21),this._a=this._a+S|0,this._b=this._b+p|0,this._c=this._c+y|0,this._d=this._d+g|0},i.prototype._digest=function(){this._block[this._blockOffset++]=128,this._blockOffset>56&&(this._block.fill(0,this._blockOffset,64),this._update(),this._blockOffset=0),this._block.fill(0,this._blockOffset,56),this._block.writeUInt32LE(this._length[0],56),this._block.writeUInt32LE(this._length[1],60),this._update();var m=E.allocUnsafe(16);return m.writeInt32LE(this._a,0),m.writeInt32LE(this._b,4),m.writeInt32LE(this._c,8),m.writeInt32LE(this._d,12),m},u2.exports=i},9746:u2=>{function O(A,C){if(!A)throw new Error(C||"Assertion failed")}u2.exports=O,O.equal=function(A,C,b){if(A!=C)throw new Error(b||"Assertion failed: "+A+" != "+C)}},4504:(u2,O)=>{var A=O;function C(E){return E.length===1?"0"+E:E}function b(E){for(var I="",i=0;i<E.length;i++)I+=C(E[i].toString(16));return I}A.toArray=function(E,I){if(Array.isArray(E))return E.slice();if(!E)return[];var i=[];if(typeof E!="string"){for(var M=0;M<E.length;M++)i[M]=0|E[M];return i}if(I==="hex")for((E=E.replace(/[^a-z0-9]+/gi,"")).length%2!=0&&(E="0"+E),M=0;M<E.length;M+=2)i.push(parseInt(E[M]+E[M+1],16));else for(M=0;M<E.length;M++){var h=E.charCodeAt(M),a=h>>8,o=255&h;a?i.push(a,o):i.push(o)}return i},A.zero2=C,A.toHex=b,A.encode=function(E,I){return I==="hex"?b(E):E}},5632:(u2,O,A)=>{O.pbkdf2=A(8638),O.pbkdf2Sync=A(1257)},8638:(u2,O,A)=>{var C,b,E=A(9509).Buffer,I=A(7357),i=A(2368),M=A(1257),h=A(7777),a=A.g.crypto&&A.g.crypto.subtle,o={sha:"SHA-1","sha-1":"SHA-1",sha1:"SHA-1",sha256:"SHA-256","sha-256":"SHA-256",sha384:"SHA-384","sha-384":"SHA-384","sha-512":"SHA-512",sha512:"SHA-512"},s=[];function m(){return b||(b=A.g.process&&A.g.process.nextTick?A.g.process.nextTick:A.g.queueMicrotask?A.g.queueMicrotask:A.g.setImmediate?A.g.setImmediate:A.g.setTimeout)}function x(S,p,y,g,B){return a.importKey("raw",S,{name:"PBKDF2"},!1,["deriveBits"]).then(function(_){return a.deriveBits({name:"PBKDF2",salt:p,iterations:y,hash:{name:B}},_,g<<3)}).then(function(_){return E.from(_)})}u2.exports=function(S,p,y,g,B,_){typeof B=="function"&&(_=B,B=void 0);var L=o[(B=B||"sha1").toLowerCase()];if(L&&typeof A.g.Promise=="function"){if(I(y,g),S=h(S,i,"Password"),p=h(p,i,"Salt"),typeof _!="function")throw new Error("No callback provided to pbkdf2");(function(N,F){N.then(function(z){m()(function(){F(null,z)})},function(z){m()(function(){F(z)})})})(function(N){if(A.g.process&&!A.g.process.browser||!a||!a.importKey||!a.deriveBits)return Promise.resolve(!1);if(s[N]!==void 0)return s[N];var F=x(C=C||E.alloc(8),C,10,128,N).then(function(){return!0}).catch(function(){return!1});return s[N]=F,F}(L).then(function(N){return N?x(S,p,y,g,L):M(S,p,y,g,B)}),_)}else m()(function(){var N;try{N=M(S,p,y,g,B)}catch(F){return _(F)}_(null,N)})}},2368:(u2,O,A)=>{var C;C=A.g.process&&A.g.process.browser?"utf-8":A.g.process&&A.g.process.version?parseInt(process.version.split(".")[0].slice(1),10)>=6?"utf-8":"binary":"utf-8",u2.exports=C},7357:u2=>{var O=Math.pow(2,30)-1;u2.exports=function(A,C){if(typeof A!="number")throw new TypeError("Iterations not a number");if(A<0)throw new TypeError("Bad iterations");if(typeof C!="number")throw new TypeError("Key length not a number");if(C<0||C>O||C!=C)throw new TypeError("Bad key length")}},1257:(u2,O,A)=>{var C=A(8028),b=A(9785),E=A(9072),I=A(9509).Buffer,i=A(7357),M=A(2368),h=A(7777),a=I.alloc(128),o={md5:16,sha1:20,sha224:28,sha256:32,sha384:48,sha512:64,rmd160:20,ripemd160:20};function s(m,x,S){var p=function(N){return N==="rmd160"||N==="ripemd160"?function(F){return new b().update(F).digest()}:N==="md5"?C:function(F){return E(N).update(F).digest()}}(m),y=m==="sha512"||m==="sha384"?128:64;x.length>y?x=p(x):x.length<y&&(x=I.concat([x,a],y));for(var g=I.allocUnsafe(y+o[m]),B=I.allocUnsafe(y+o[m]),_=0;_<y;_++)g[_]=54^x[_],B[_]=92^x[_];var L=I.allocUnsafe(y+S+4);g.copy(L,0,0,y),this.ipad1=L,this.ipad2=g,this.opad=B,this.alg=m,this.blocksize=y,this.hash=p,this.size=o[m]}s.prototype.run=function(m,x){return m.copy(x,this.blocksize),this.hash(x).copy(this.opad,this.blocksize),this.hash(this.opad)},u2.exports=function(m,x,S,p,y){i(S,p);var g=new s(y=y||"sha1",m=h(m,M,"Password"),(x=h(x,M,"Salt")).length),B=I.allocUnsafe(p),_=I.allocUnsafe(x.length+4);x.copy(_,0,0,x.length);for(var L=0,N=o[y],F=Math.ceil(p/N),z=1;z<=F;z++){_.writeUInt32BE(z,x.length);for(var Q=g.run(_,g.ipad1),c2=Q,d=1;d<S;d++){c2=g.run(c2,g.ipad2);for(var T=0;T<N;T++)Q[T]^=c2[T]}Q.copy(B,L),L+=N}return B}},7777:(u2,O,A)=>{var C=A(9509).Buffer;u2.exports=function(b,E,I){if(C.isBuffer(b))return b;if(typeof b=="string")return C.from(b,E);if(ArrayBuffer.isView(b))return C.from(b.buffer);throw new TypeError(I+" must be a string, a Buffer, a typed array or a DataView")}},4281:u2=>{var O={};function A(b,E,I){I||(I=Error);var i=function(M){var h,a;function o(s,m,x){return M.call(this,function(S,p,y){return typeof E=="string"?E:E(S,p,y)}(s,m,x))||this}return a=M,(h=o).prototype=Object.create(a.prototype),h.prototype.constructor=h,h.__proto__=a,o}(I);i.prototype.name=I.name,i.prototype.code=b,O[b]=i}function C(b,E){if(Array.isArray(b)){var I=b.length;return b=b.map(function(i){return String(i)}),I>2?"one of ".concat(E," ").concat(b.slice(0,I-1).join(", "),", or ")+b[I-1]:I===2?"one of ".concat(E," ").concat(b[0]," or ").concat(b[1]):"of ".concat(E," ").concat(b[0])}return"of ".concat(E," ").concat(String(b))}A("ERR_INVALID_OPT_VALUE",function(b,E){return'The value "'+E+'" is invalid for option "'+b+'"'},TypeError),A("ERR_INVALID_ARG_TYPE",function(b,E,I){var i,M,h,a,o;if(typeof E=="string"&&(M="not ",E.substr(0,M.length)===M)?(i="must not be",E=E.replace(/^not /,"")):i="must be",function(m,x,S){return(S===void 0||S>m.length)&&(S=m.length),m.substring(S-x.length,S)===x}(b," argument"))h="The ".concat(b," ").concat(i," ").concat(C(E,"type"));else{var s=(typeof o!="number"&&(o=0),o+1>(a=b).length||a.indexOf(".",o)===-1?"argument":"property");h='The "'.concat(b,'" ').concat(s," ").concat(i," ").concat(C(E,"type"))}return h+". Received type ".concat(typeof I)},TypeError),A("ERR_STREAM_PUSH_AFTER_EOF","stream.push() after EOF"),A("ERR_METHOD_NOT_IMPLEMENTED",function(b){return"The "+b+" method is not implemented"}),A("ERR_STREAM_PREMATURE_CLOSE","Premature close"),A("ERR_STREAM_DESTROYED",function(b){return"Cannot call "+b+" after a stream was destroyed"}),A("ERR_MULTIPLE_CALLBACK","Callback called multiple times"),A("ERR_STREAM_CANNOT_PIPE","Cannot pipe, not readable"),A("ERR_STREAM_WRITE_AFTER_END","write after end"),A("ERR_STREAM_NULL_VALUES","May not write null values to stream",TypeError),A("ERR_UNKNOWN_ENCODING",function(b){return"Unknown encoding: "+b},TypeError),A("ERR_STREAM_UNSHIFT_AFTER_END_EVENT","stream.unshift() after end event"),u2.exports.q=O},6753:(u2,O,A)=>{var C=Object.keys||function(s){var m=[];for(var x in s)m.push(x);return m};u2.exports=h;var b=A(9481),E=A(4229);A(5717)(h,b);for(var I=C(E.prototype),i=0;i<I.length;i++){var M=I[i];h.prototype[M]||(h.prototype[M]=E.prototype[M])}function h(s){if(!(this instanceof h))return new h(s);b.call(this,s),E.call(this,s),this.allowHalfOpen=!0,s&&(s.readable===!1&&(this.readable=!1),s.writable===!1&&(this.writable=!1),s.allowHalfOpen===!1&&(this.allowHalfOpen=!1,this.once("end",a)))}function a(){this._writableState.ended||process.nextTick(o,this)}function o(s){s.end()}Object.defineProperty(h.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),Object.defineProperty(h.prototype,"writableBuffer",{enumerable:!1,get:function(){return this._writableState&&this._writableState.getBuffer()}}),Object.defineProperty(h.prototype,"writableLength",{enumerable:!1,get:function(){return this._writableState.length}}),Object.defineProperty(h.prototype,"destroyed",{enumerable:!1,get:function(){return this._readableState!==void 0&&this._writableState!==void 0&&this._readableState.destroyed&&this._writableState.destroyed},set:function(s){this._readableState!==void 0&&this._writableState!==void 0&&(this._readableState.destroyed=s,this._writableState.destroyed=s)}})},2725:(u2,O,A)=>{u2.exports=b;var C=A(4605);function b(E){if(!(this instanceof b))return new b(E);C.call(this,E)}A(5717)(b,C),b.prototype._transform=function(E,I,i){i(null,E)}},9481:(u2,O,A)=>{var C;u2.exports=z,z.ReadableState=F,A(7187).EventEmitter;var b,E=function($,Z){return $.listeners(Z).length},I=A(2503),i=A(8764).Buffer,M=A.g.Uint8Array||function(){},h=A(4616);b=h&&h.debuglog?h.debuglog("stream"):function(){};var a,o,s,m=A(7327),x=A(1195),S=A(2457).getHighWaterMark,p=A(4281).q,y=p.ERR_INVALID_ARG_TYPE,g=p.ERR_STREAM_PUSH_AFTER_EOF,B=p.ERR_METHOD_NOT_IMPLEMENTED,_=p.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;A(5717)(z,I);var L=x.errorOrDestroy,N=["error","close","destroy","pause","resume"];function F($,Z,p2){C=C||A(6753),$=$||{},typeof p2!="boolean"&&(p2=Z instanceof C),this.objectMode=!!$.objectMode,p2&&(this.objectMode=this.objectMode||!!$.readableObjectMode),this.highWaterMark=S(this,$,"readableHighWaterMark",p2),this.buffer=new m,this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this.paused=!0,this.emitClose=$.emitClose!==!1,this.autoDestroy=!!$.autoDestroy,this.destroyed=!1,this.defaultEncoding=$.defaultEncoding||"utf8",this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,$.encoding&&(a||(a=A(2553).s),this.decoder=new a($.encoding),this.encoding=$.encoding)}function z($){if(C=C||A(6753),!(this instanceof z))return new z($);var Z=this instanceof C;this._readableState=new F($,this,Z),this.readable=!0,$&&(typeof $.read=="function"&&(this._read=$.read),typeof $.destroy=="function"&&(this._destroy=$.destroy)),I.call(this)}function Q($,Z,p2,w2,R2){b("readableAddChunk",Z);var P2,J=$._readableState;if(Z===null)J.reading=!1,function(a2,Y){if(b("onEofChunk"),!Y.ended){if(Y.decoder){var G=Y.decoder.end();G&&G.length&&(Y.buffer.push(G),Y.length+=Y.objectMode?1:G.length)}Y.ended=!0,Y.sync?u(a2):(Y.needReadable=!1,Y.emittedReadable||(Y.emittedReadable=!0,t(a2)))}}($,J);else if(R2||(P2=function(a2,Y){var G,i2;return i2=Y,i.isBuffer(i2)||i2 instanceof M||typeof Y=="string"||Y===void 0||a2.objectMode||(G=new y("chunk",["string","Buffer","Uint8Array"],Y)),G}(J,Z)),P2)L($,P2);else if(J.objectMode||Z&&Z.length>0)if(typeof Z=="string"||J.objectMode||Object.getPrototypeOf(Z)===i.prototype||(Z=function(a2){return i.from(a2)}(Z)),w2)J.endEmitted?L($,new _):c2($,J,Z,!0);else if(J.ended)L($,new g);else{if(J.destroyed)return!1;J.reading=!1,J.decoder&&!p2?(Z=J.decoder.write(Z),J.objectMode||Z.length!==0?c2($,J,Z,!1):e($,J)):c2($,J,Z,!1)}else w2||(J.reading=!1,e($,J));return!J.ended&&(J.length<J.highWaterMark||J.length===0)}function c2($,Z,p2,w2){Z.flowing&&Z.length===0&&!Z.sync?(Z.awaitDrain=0,$.emit("data",p2)):(Z.length+=Z.objectMode?1:p2.length,w2?Z.buffer.unshift(p2):Z.buffer.push(p2),Z.needReadable&&u($)),e($,Z)}Object.defineProperty(z.prototype,"destroyed",{enumerable:!1,get:function(){return this._readableState!==void 0&&this._readableState.destroyed},set:function($){this._readableState&&(this._readableState.destroyed=$)}}),z.prototype.destroy=x.destroy,z.prototype._undestroy=x.undestroy,z.prototype._destroy=function($,Z){Z($)},z.prototype.push=function($,Z){var p2,w2=this._readableState;return w2.objectMode?p2=!0:typeof $=="string"&&((Z=Z||w2.defaultEncoding)!==w2.encoding&&($=i.from($,Z),Z=""),p2=!0),Q(this,$,Z,!1,p2)},z.prototype.unshift=function($){return Q(this,$,null,!0,!1)},z.prototype.isPaused=function(){return this._readableState.flowing===!1},z.prototype.setEncoding=function($){a||(a=A(2553).s);var Z=new a($);this._readableState.decoder=Z,this._readableState.encoding=this._readableState.decoder.encoding;for(var p2=this._readableState.buffer.head,w2="";p2!==null;)w2+=Z.write(p2.data),p2=p2.next;return this._readableState.buffer.clear(),w2!==""&&this._readableState.buffer.push(w2),this._readableState.length=w2.length,this};var d=1073741824;function T($,Z){return $<=0||Z.length===0&&Z.ended?0:Z.objectMode?1:$!=$?Z.flowing&&Z.length?Z.buffer.head.data.length:Z.length:($>Z.highWaterMark&&(Z.highWaterMark=function(p2){return p2>=d?p2=d:(p2--,p2|=p2>>>1,p2|=p2>>>2,p2|=p2>>>4,p2|=p2>>>8,p2|=p2>>>16,p2++),p2}($)),$<=Z.length?$:Z.ended?Z.length:(Z.needReadable=!0,0))}function u($){var Z=$._readableState;b("emitReadable",Z.needReadable,Z.emittedReadable),Z.needReadable=!1,Z.emittedReadable||(b("emitReadable",Z.flowing),Z.emittedReadable=!0,process.nextTick(t,$))}function t($){var Z=$._readableState;b("emitReadable_",Z.destroyed,Z.length,Z.ended),Z.destroyed||!Z.length&&!Z.ended||($.emit("readable"),Z.emittedReadable=!1),Z.needReadable=!Z.flowing&&!Z.ended&&Z.length<=Z.highWaterMark,W($)}function e($,Z){Z.readingMore||(Z.readingMore=!0,process.nextTick(r,$,Z))}function r($,Z){for(;!Z.reading&&!Z.ended&&(Z.length<Z.highWaterMark||Z.flowing&&Z.length===0);){var p2=Z.length;if(b("maybeReadMore read 0"),$.read(0),p2===Z.length)break}Z.readingMore=!1}function c($){var Z=$._readableState;Z.readableListening=$.listenerCount("readable")>0,Z.resumeScheduled&&!Z.paused?Z.flowing=!0:$.listenerCount("data")>0&&$.resume()}function P($){b("readable nexttick read 0"),$.read(0)}function K($,Z){b("resume",Z.reading),Z.reading||$.read(0),Z.resumeScheduled=!1,$.emit("resume"),W($),Z.flowing&&!Z.reading&&$.read(0)}function W($){var Z=$._readableState;for(b("flow",Z.flowing);Z.flowing&&$.read()!==null;);}function o2($,Z){return Z.length===0?null:(Z.objectMode?p2=Z.buffer.shift():!$||$>=Z.length?(p2=Z.decoder?Z.buffer.join(""):Z.buffer.length===1?Z.buffer.first():Z.buffer.concat(Z.length),Z.buffer.clear()):p2=Z.buffer.consume($,Z.decoder),p2);var p2}function r2($){var Z=$._readableState;b("endReadable",Z.endEmitted),Z.endEmitted||(Z.ended=!0,process.nextTick(b2,Z,$))}function b2($,Z){if(b("endReadableNT",$.endEmitted,$.length),!$.endEmitted&&$.length===0&&($.endEmitted=!0,Z.readable=!1,Z.emit("end"),$.autoDestroy)){var p2=Z._writableState;(!p2||p2.autoDestroy&&p2.finished)&&Z.destroy()}}function _2($,Z){for(var p2=0,w2=$.length;p2<w2;p2++)if($[p2]===Z)return p2;return-1}z.prototype.read=function($){b("read",$),$=parseInt($,10);var Z=this._readableState,p2=$;if($!==0&&(Z.emittedReadable=!1),$===0&&Z.needReadable&&((Z.highWaterMark!==0?Z.length>=Z.highWaterMark:Z.length>0)||Z.ended))return b("read: emitReadable",Z.length,Z.ended),Z.length===0&&Z.ended?r2(this):u(this),null;if(($=T($,Z))===0&&Z.ended)return Z.length===0&&r2(this),null;var w2,R2=Z.needReadable;return b("need readable",R2),(Z.length===0||Z.length-$<Z.highWaterMark)&&b("length less than watermark",R2=!0),Z.ended||Z.reading?b("reading or ended",R2=!1):R2&&(b("do read"),Z.reading=!0,Z.sync=!0,Z.length===0&&(Z.needReadable=!0),this._read(Z.highWaterMark),Z.sync=!1,Z.reading||($=T(p2,Z))),(w2=$>0?o2($,Z):null)===null?(Z.needReadable=Z.length<=Z.highWaterMark,$=0):(Z.length-=$,Z.awaitDrain=0),Z.length===0&&(Z.ended||(Z.needReadable=!0),p2!==$&&Z.ended&&r2(this)),w2!==null&&this.emit("data",w2),w2},z.prototype._read=function($){L(this,new B("_read()"))},z.prototype.pipe=function($,Z){var p2=this,w2=this._readableState;switch(w2.pipesCount){case 0:w2.pipes=$;break;case 1:w2.pipes=[w2.pipes,$];break;default:w2.pipes.push($)}w2.pipesCount+=1,b("pipe count=%d opts=%j",w2.pipesCount,Z);var R2=Z&&Z.end===!1||$===process.stdout||$===process.stderr?g2:P2;function P2(){b("onend"),$.end()}w2.endEmitted?process.nextTick(R2):p2.once("end",R2),$.on("unpipe",function w(k,v){b("onunpipe"),k===p2&&v&&v.hasUnpiped===!1&&(v.hasUnpiped=!0,b("cleanup"),$.removeListener("close",i2),$.removeListener("finish",v2),$.removeListener("drain",J),$.removeListener("error",G),$.removeListener("unpipe",w),p2.removeListener("end",P2),p2.removeListener("end",g2),p2.removeListener("data",Y),a2=!0,!w2.awaitDrain||$._writableState&&!$._writableState.needDrain||J())});var J=function(w){return function(){var k=w._readableState;b("pipeOnDrain",k.awaitDrain),k.awaitDrain&&k.awaitDrain--,k.awaitDrain===0&&E(w,"data")&&(k.flowing=!0,W(w))}}(p2);$.on("drain",J);var a2=!1;function Y(w){b("ondata");var k=$.write(w);b("dest.write",k),k===!1&&((w2.pipesCount===1&&w2.pipes===$||w2.pipesCount>1&&_2(w2.pipes,$)!==-1)&&!a2&&(b("false write response, pause",w2.awaitDrain),w2.awaitDrain++),p2.pause())}function G(w){b("onerror",w),g2(),$.removeListener("error",G),E($,"error")===0&&L($,w)}function i2(){$.removeListener("finish",v2),g2()}function v2(){b("onfinish"),$.removeListener("close",i2),g2()}function g2(){b("unpipe"),p2.unpipe($)}return p2.on("data",Y),function(w,k,v){if(typeof w.prependListener=="function")return w.prependListener(k,v);w._events&&w._events[k]?Array.isArray(w._events[k])?w._events[k].unshift(v):w._events[k]=[v,w._events[k]]:w.on(k,v)}($,"error",G),$.once("close",i2),$.once("finish",v2),$.emit("pipe",p2),w2.flowing||(b("pipe resume"),p2.resume()),$},z.prototype.unpipe=function($){var Z=this._readableState,p2={hasUnpiped:!1};if(Z.pipesCount===0)return this;if(Z.pipesCount===1)return $&&$!==Z.pipes||($||($=Z.pipes),Z.pipes=null,Z.pipesCount=0,Z.flowing=!1,$&&$.emit("unpipe",this,p2)),this;if(!$){var w2=Z.pipes,R2=Z.pipesCount;Z.pipes=null,Z.pipesCount=0,Z.flowing=!1;for(var P2=0;P2<R2;P2++)w2[P2].emit("unpipe",this,{hasUnpiped:!1});return this}var J=_2(Z.pipes,$);return J===-1||(Z.pipes.splice(J,1),Z.pipesCount-=1,Z.pipesCount===1&&(Z.pipes=Z.pipes[0]),$.emit("unpipe",this,p2)),this},z.prototype.on=function($,Z){var p2=I.prototype.on.call(this,$,Z),w2=this._readableState;return $==="data"?(w2.readableListening=this.listenerCount("readable")>0,w2.flowing!==!1&&this.resume()):$==="readable"&&(w2.endEmitted||w2.readableListening||(w2.readableListening=w2.needReadable=!0,w2.flowing=!1,w2.emittedReadable=!1,b("on readable",w2.length,w2.reading),w2.length?u(this):w2.reading||process.nextTick(P,this))),p2},z.prototype.addListener=z.prototype.on,z.prototype.removeListener=function($,Z){var p2=I.prototype.removeListener.call(this,$,Z);return $==="readable"&&process.nextTick(c,this),p2},z.prototype.removeAllListeners=function($){var Z=I.prototype.removeAllListeners.apply(this,arguments);return $!=="readable"&&$!==void 0||process.nextTick(c,this),Z},z.prototype.resume=function(){var $=this._readableState;return $.flowing||(b("resume"),$.flowing=!$.readableListening,function(Z,p2){p2.resumeScheduled||(p2.resumeScheduled=!0,process.nextTick(K,Z,p2))}(this,$)),$.paused=!1,this},z.prototype.pause=function(){return b("call pause flowing=%j",this._readableState.flowing),this._readableState.flowing!==!1&&(b("pause"),this._readableState.flowing=!1,this.emit("pause")),this._readableState.paused=!0,this},z.prototype.wrap=function($){var Z=this,p2=this._readableState,w2=!1;for(var R2 in $.on("end",function(){if(b("wrapped end"),p2.decoder&&!p2.ended){var J=p2.decoder.end();J&&J.length&&Z.push(J)}Z.push(null)}),$.on("data",function(J){b("wrapped data"),p2.decoder&&(J=p2.decoder.write(J)),p2.objectMode&&J==null||(p2.objectMode||J&&J.length)&&(Z.push(J)||(w2=!0,$.pause()))}),$)this[R2]===void 0&&typeof $[R2]=="function"&&(this[R2]=function(J){return function(){return $[J].apply($,arguments)}}(R2));for(var P2=0;P2<N.length;P2++)$.on(N[P2],this.emit.bind(this,N[P2]));return this._read=function(J){b("wrapped _read",J),w2&&(w2=!1,$.resume())},this},typeof Symbol=="function"&&(z.prototype[Symbol.asyncIterator]=function(){return o===void 0&&(o=A(5850)),o(this)}),Object.defineProperty(z.prototype,"readableHighWaterMark",{enumerable:!1,get:function(){return this._readableState.highWaterMark}}),Object.defineProperty(z.prototype,"readableBuffer",{enumerable:!1,get:function(){return this._readableState&&this._readableState.buffer}}),Object.defineProperty(z.prototype,"readableFlowing",{enumerable:!1,get:function(){return this._readableState.flowing},set:function($){this._readableState&&(this._readableState.flowing=$)}}),z._fromList=o2,Object.defineProperty(z.prototype,"readableLength",{enumerable:!1,get:function(){return this._readableState.length}}),typeof Symbol=="function"&&(z.from=function($,Z){return s===void 0&&(s=A(5167)),s(z,$,Z)})},4605:(u2,O,A)=>{u2.exports=a;var C=A(4281).q,b=C.ERR_METHOD_NOT_IMPLEMENTED,E=C.ERR_MULTIPLE_CALLBACK,I=C.ERR_TRANSFORM_ALREADY_TRANSFORMING,i=C.ERR_TRANSFORM_WITH_LENGTH_0,M=A(6753);function h(m,x){var S=this._transformState;S.transforming=!1;var p=S.writecb;if(p===null)return this.emit("error",new E);S.writechunk=null,S.writecb=null,x!=null&&this.push(x),p(m);var y=this._readableState;y.reading=!1,(y.needReadable||y.length<y.highWaterMark)&&this._read(y.highWaterMark)}function a(m){if(!(this instanceof a))return new a(m);M.call(this,m),this._transformState={afterTransform:h.bind(this),needTransform:!1,transforming:!1,writecb:null,writechunk:null,writeencoding:null},this._readableState.needReadable=!0,this._readableState.sync=!1,m&&(typeof m.transform=="function"&&(this._transform=m.transform),typeof m.flush=="function"&&(this._flush=m.flush)),this.on("prefinish",o)}function o(){var m=this;typeof this._flush!="function"||this._readableState.destroyed?s(this,null,null):this._flush(function(x,S){s(m,x,S)})}function s(m,x,S){if(x)return m.emit("error",x);if(S!=null&&m.push(S),m._writableState.length)throw new i;if(m._transformState.transforming)throw new I;return m.push(null)}A(5717)(a,M),a.prototype.push=function(m,x){return this._transformState.needTransform=!1,M.prototype.push.call(this,m,x)},a.prototype._transform=function(m,x,S){S(new b("_transform()"))},a.prototype._write=function(m,x,S){var p=this._transformState;if(p.writecb=S,p.writechunk=m,p.writeencoding=x,!p.transforming){var y=this._readableState;(p.needTransform||y.needReadable||y.length<y.highWaterMark)&&this._read(y.highWaterMark)}},a.prototype._read=function(m){var x=this._transformState;x.writechunk===null||x.transforming?x.needTransform=!0:(x.transforming=!0,this._transform(x.writechunk,x.writeencoding,x.afterTransform))},a.prototype._destroy=function(m,x){M.prototype._destroy.call(this,m,function(S){x(S)})}},4229:(u2,O,A)=>{function C(e){var r=this;this.next=null,this.entry=null,this.finish=function(){(function(c,P,K){var W=c.entry;for(c.entry=null;W;){var o2=W.callback;P.pendingcb--,o2(void 0),W=W.next}P.corkedRequestsFree.next=c})(r,e)}}var b;u2.exports=z,z.WritableState=F;var E,I={deprecate:A(4927)},i=A(2503),M=A(8764).Buffer,h=A.g.Uint8Array||function(){},a=A(1195),o=A(2457).getHighWaterMark,s=A(4281).q,m=s.ERR_INVALID_ARG_TYPE,x=s.ERR_METHOD_NOT_IMPLEMENTED,S=s.ERR_MULTIPLE_CALLBACK,p=s.ERR_STREAM_CANNOT_PIPE,y=s.ERR_STREAM_DESTROYED,g=s.ERR_STREAM_NULL_VALUES,B=s.ERR_STREAM_WRITE_AFTER_END,_=s.ERR_UNKNOWN_ENCODING,L=a.errorOrDestroy;function N(){}function F(e,r,c){b=b||A(6753),e=e||{},typeof c!="boolean"&&(c=r instanceof b),this.objectMode=!!e.objectMode,c&&(this.objectMode=this.objectMode||!!e.writableObjectMode),this.highWaterMark=o(this,e,"writableHighWaterMark",c),this.finalCalled=!1,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1,this.destroyed=!1;var P=e.decodeStrings===!1;this.decodeStrings=!P,this.defaultEncoding=e.defaultEncoding||"utf8",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(K){(function(W,o2){var r2=W._writableState,b2=r2.sync,_2=r2.writecb;if(typeof _2!="function")throw new S;if(function(Z){Z.writing=!1,Z.writecb=null,Z.length-=Z.writelen,Z.writelen=0}(r2),o2)(function(Z,p2,w2,R2,P2){--p2.pendingcb,w2?(process.nextTick(P2,R2),process.nextTick(t,Z,p2),Z._writableState.errorEmitted=!0,L(Z,R2)):(P2(R2),Z._writableState.errorEmitted=!0,L(Z,R2),t(Z,p2))})(W,r2,b2,o2,_2);else{var $=T(r2)||W.destroyed;$||r2.corked||r2.bufferProcessing||!r2.bufferedRequest||d(W,r2),b2?process.nextTick(c2,W,r2,$,_2):c2(W,r2,$,_2)}})(r,K)},this.writecb=null,this.writelen=0,this.bufferedRequest=null,this.lastBufferedRequest=null,this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1,this.emitClose=e.emitClose!==!1,this.autoDestroy=!!e.autoDestroy,this.bufferedRequestCount=0,this.corkedRequestsFree=new C(this)}function z(e){var r=this instanceof(b=b||A(6753));if(!r&&!E.call(z,this))return new z(e);this._writableState=new F(e,this,r),this.writable=!0,e&&(typeof e.write=="function"&&(this._write=e.write),typeof e.writev=="function"&&(this._writev=e.writev),typeof e.destroy=="function"&&(this._destroy=e.destroy),typeof e.final=="function"&&(this._final=e.final)),i.call(this)}function Q(e,r,c,P,K,W,o2){r.writelen=P,r.writecb=o2,r.writing=!0,r.sync=!0,r.destroyed?r.onwrite(new y("write")):c?e._writev(K,r.onwrite):e._write(K,W,r.onwrite),r.sync=!1}function c2(e,r,c,P){c||function(K,W){W.length===0&&W.needDrain&&(W.needDrain=!1,K.emit("drain"))}(e,r),r.pendingcb--,P(),t(e,r)}function d(e,r){r.bufferProcessing=!0;var c=r.bufferedRequest;if(e._writev&&c&&c.next){var P=r.bufferedRequestCount,K=new Array(P),W=r.corkedRequestsFree;W.entry=c;for(var o2=0,r2=!0;c;)K[o2]=c,c.isBuf||(r2=!1),c=c.next,o2+=1;K.allBuffers=r2,Q(e,r,!0,r.length,K,"",W.finish),r.pendingcb++,r.lastBufferedRequest=null,W.next?(r.corkedRequestsFree=W.next,W.next=null):r.corkedRequestsFree=new C(r),r.bufferedRequestCount=0}else{for(;c;){var b2=c.chunk,_2=c.encoding,$=c.callback;if(Q(e,r,!1,r.objectMode?1:b2.length,b2,_2,$),c=c.next,r.bufferedRequestCount--,r.writing)break}c===null&&(r.lastBufferedRequest=null)}r.bufferedRequest=c,r.bufferProcessing=!1}function T(e){return e.ending&&e.length===0&&e.bufferedRequest===null&&!e.finished&&!e.writing}function u(e,r){e._final(function(c){r.pendingcb--,c&&L(e,c),r.prefinished=!0,e.emit("prefinish"),t(e,r)})}function t(e,r){var c=T(r);if(c&&(function(K,W){W.prefinished||W.finalCalled||(typeof K._final!="function"||W.destroyed?(W.prefinished=!0,K.emit("prefinish")):(W.pendingcb++,W.finalCalled=!0,process.nextTick(u,K,W)))}(e,r),r.pendingcb===0&&(r.finished=!0,e.emit("finish"),r.autoDestroy))){var P=e._readableState;(!P||P.autoDestroy&&P.endEmitted)&&e.destroy()}return c}A(5717)(z,i),F.prototype.getBuffer=function(){for(var e=this.bufferedRequest,r=[];e;)r.push(e),e=e.next;return r},function(){try{Object.defineProperty(F.prototype,"buffer",{get:I.deprecate(function(){return this.getBuffer()},"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.","DEP0003")})}catch{}}(),typeof Symbol=="function"&&Symbol.hasInstance&&typeof Function.prototype[Symbol.hasInstance]=="function"?(E=Function.prototype[Symbol.hasInstance],Object.defineProperty(z,Symbol.hasInstance,{value:function(e){return!!E.call(this,e)||this===z&&e&&e._writableState instanceof F}})):E=function(e){return e instanceof this},z.prototype.pipe=function(){L(this,new p)},z.prototype.write=function(e,r,c){var P,K=this._writableState,W=!1,o2=!K.objectMode&&(P=e,M.isBuffer(P)||P instanceof h);return o2&&!M.isBuffer(e)&&(e=function(r2){return M.from(r2)}(e)),typeof r=="function"&&(c=r,r=null),o2?r="buffer":r||(r=K.defaultEncoding),typeof c!="function"&&(c=N),K.ending?function(r2,b2){var _2=new B;L(r2,_2),process.nextTick(b2,_2)}(this,c):(o2||function(r2,b2,_2,$){var Z;return _2===null?Z=new g:typeof _2=="string"||b2.objectMode||(Z=new m("chunk",["string","Buffer"],_2)),!Z||(L(r2,Z),process.nextTick($,Z),!1)}(this,K,e,c))&&(K.pendingcb++,W=function(r2,b2,_2,$,Z,p2){if(!_2){var w2=function(a2,Y,G){return a2.objectMode||a2.decodeStrings===!1||typeof Y!="string"||(Y=M.from(Y,G)),Y}(b2,$,Z);$!==w2&&(_2=!0,Z="buffer",$=w2)}var R2=b2.objectMode?1:$.length;b2.length+=R2;var P2=b2.length<b2.highWaterMark;if(P2||(b2.needDrain=!0),b2.writing||b2.corked){var J=b2.lastBufferedRequest;b2.lastBufferedRequest={chunk:$,encoding:Z,isBuf:_2,callback:p2,next:null},J?J.next=b2.lastBufferedRequest:b2.bufferedRequest=b2.lastBufferedRequest,b2.bufferedRequestCount+=1}else Q(r2,b2,!1,R2,$,Z,p2);return P2}(this,K,o2,e,r,c)),W},z.prototype.cork=function(){this._writableState.corked++},z.prototype.uncork=function(){var e=this._writableState;e.corked&&(e.corked--,e.writing||e.corked||e.bufferProcessing||!e.bufferedRequest||d(this,e))},z.prototype.setDefaultEncoding=function(e){if(typeof e=="string"&&(e=e.toLowerCase()),!(["hex","utf8","utf-8","ascii","binary","base64","ucs2","ucs-2","utf16le","utf-16le","raw"].indexOf((e+"").toLowerCase())>-1))throw new _(e);return this._writableState.defaultEncoding=e,this},Object.defineProperty(z.prototype,"writableBuffer",{enumerable:!1,get:function(){return this._writableState&&this._writableState.getBuffer()}}),Object.defineProperty(z.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),z.prototype._write=function(e,r,c){c(new x("_write()"))},z.prototype._writev=null,z.prototype.end=function(e,r,c){var P=this._writableState;return typeof e=="function"?(c=e,e=null,r=null):typeof r=="function"&&(c=r,r=null),e!=null&&this.write(e,r),P.corked&&(P.corked=1,this.uncork()),P.ending||function(K,W,o2){W.ending=!0,t(K,W),o2&&(W.finished?process.nextTick(o2):K.once("finish",o2)),W.ended=!0,K.writable=!1}(this,P,c),this},Object.defineProperty(z.prototype,"writableLength",{enumerable:!1,get:function(){return this._writableState.length}}),Object.defineProperty(z.prototype,"destroyed",{enumerable:!1,get:function(){return this._writableState!==void 0&&this._writableState.destroyed},set:function(e){this._writableState&&(this._writableState.destroyed=e)}}),z.prototype.destroy=a.destroy,z.prototype._undestroy=a.undestroy,z.prototype._destroy=function(e,r){r(e)}},5850:(u2,O,A)=>{var C;function b(g,B,_){return B in g?Object.defineProperty(g,B,{value:_,enumerable:!0,configurable:!0,writable:!0}):g[B]=_,g}var E=A(8610),I=Symbol("lastResolve"),i=Symbol("lastReject"),M=Symbol("error"),h=Symbol("ended"),a=Symbol("lastPromise"),o=Symbol("handlePromise"),s=Symbol("stream");function m(g,B){return{value:g,done:B}}function x(g){var B=g[I];if(B!==null){var _=g[s].read();_!==null&&(g[a]=null,g[I]=null,g[i]=null,B(m(_,!1)))}}function S(g){process.nextTick(x,g)}var p=Object.getPrototypeOf(function(){}),y=Object.setPrototypeOf((b(C={get stream(){return this[s]},next:function(){var g=this,B=this[M];if(B!==null)return Promise.reject(B);if(this[h])return Promise.resolve(m(void 0,!0));if(this[s].destroyed)return new Promise(function(F,z){process.nextTick(function(){g[M]?z(g[M]):F(m(void 0,!0))})});var _,L=this[a];if(L)_=new Promise(function(F,z){return function(Q,c2){F.then(function(){z[h]?Q(m(void 0,!0)):z[o](Q,c2)},c2)}}(L,this));else{var N=this[s].read();if(N!==null)return Promise.resolve(m(N,!1));_=new Promise(this[o])}return this[a]=_,_}},Symbol.asyncIterator,function(){return this}),b(C,"return",function(){var g=this;return new Promise(function(B,_){g[s].destroy(null,function(L){L?_(L):B(m(void 0,!0))})})}),C),p);u2.exports=function(g){var B,_=Object.create(y,(b(B={},s,{value:g,writable:!0}),b(B,I,{value:null,writable:!0}),b(B,i,{value:null,writable:!0}),b(B,M,{value:null,writable:!0}),b(B,h,{value:g._readableState.endEmitted,writable:!0}),b(B,o,{value:function(L,N){var F=_[s].read();F?(_[a]=null,_[I]=null,_[i]=null,L(m(F,!1))):(_[I]=L,_[i]=N)},writable:!0}),B));return _[a]=null,E(g,function(L){if(L&&L.code!=="ERR_STREAM_PREMATURE_CLOSE"){var N=_[i];return N!==null&&(_[a]=null,_[I]=null,_[i]=null,N(L)),void(_[M]=L)}var F=_[I];F!==null&&(_[a]=null,_[I]=null,_[i]=null,F(m(void 0,!0))),_[h]=!0}),g.on("readable",S.bind(null,_)),_}},7327:(u2,O,A)=>{function C(h,a){var o=Object.keys(h);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(h);a&&(s=s.filter(function(m){return Object.getOwnPropertyDescriptor(h,m).enumerable})),o.push.apply(o,s)}return o}function b(h,a,o){return a in h?Object.defineProperty(h,a,{value:o,enumerable:!0,configurable:!0,writable:!0}):h[a]=o,h}function E(h,a){for(var o=0;o<a.length;o++){var s=a[o];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(h,s.key,s)}}var I=A(8764).Buffer,i=A(2361).inspect,M=i&&i.custom||"inspect";u2.exports=function(){function h(){(function(s,m){if(!(s instanceof m))throw new TypeError("Cannot call a class as a function")})(this,h),this.head=null,this.tail=null,this.length=0}var a,o;return a=h,o=[{key:"push",value:function(s){var m={data:s,next:null};this.length>0?this.tail.next=m:this.head=m,this.tail=m,++this.length}},{key:"unshift",value:function(s){var m={data:s,next:this.head};this.length===0&&(this.tail=m),this.head=m,++this.length}},{key:"shift",value:function(){if(this.length!==0){var s=this.head.data;return this.length===1?this.head=this.tail=null:this.head=this.head.next,--this.length,s}}},{key:"clear",value:function(){this.head=this.tail=null,this.length=0}},{key:"join",value:function(s){if(this.length===0)return"";for(var m=this.head,x=""+m.data;m=m.next;)x+=s+m.data;return x}},{key:"concat",value:function(s){if(this.length===0)return I.alloc(0);for(var m,x,S,p=I.allocUnsafe(s>>>0),y=this.head,g=0;y;)m=y.data,x=p,S=g,I.prototype.copy.call(m,x,S),g+=y.data.length,y=y.next;return p}},{key:"consume",value:function(s,m){var x;return s<this.head.data.length?(x=this.head.data.slice(0,s),this.head.data=this.head.data.slice(s)):x=s===this.head.data.length?this.shift():m?this._getString(s):this._getBuffer(s),x}},{key:"first",value:function(){return this.head.data}},{key:"_getString",value:function(s){var m=this.head,x=1,S=m.data;for(s-=S.length;m=m.next;){var p=m.data,y=s>p.length?p.length:s;if(y===p.length?S+=p:S+=p.slice(0,s),(s-=y)==0){y===p.length?(++x,m.next?this.head=m.next:this.head=this.tail=null):(this.head=m,m.data=p.slice(y));break}++x}return this.length-=x,S}},{key:"_getBuffer",value:function(s){var m=I.allocUnsafe(s),x=this.head,S=1;for(x.data.copy(m),s-=x.data.length;x=x.next;){var p=x.data,y=s>p.length?p.length:s;if(p.copy(m,m.length-s,0,y),(s-=y)==0){y===p.length?(++S,x.next?this.head=x.next:this.head=this.tail=null):(this.head=x,x.data=p.slice(y));break}++S}return this.length-=S,m}},{key:M,value:function(s,m){return i(this,function(x){for(var S=1;S<arguments.length;S++){var p=arguments[S]!=null?arguments[S]:{};S%2?C(Object(p),!0).forEach(function(y){b(x,y,p[y])}):Object.getOwnPropertyDescriptors?Object.defineProperties(x,Object.getOwnPropertyDescriptors(p)):C(Object(p)).forEach(function(y){Object.defineProperty(x,y,Object.getOwnPropertyDescriptor(p,y))})}return x}({},m,{depth:0,customInspect:!1}))}}],o&&E(a.prototype,o),h}()},1195:u2=>{function O(b,E){C(b,E),A(b)}function A(b){b._writableState&&!b._writableState.emitClose||b._readableState&&!b._readableState.emitClose||b.emit("close")}function C(b,E){b.emit("error",E)}u2.exports={destroy:function(b,E){var I=this,i=this._readableState&&this._readableState.destroyed,M=this._writableState&&this._writableState.destroyed;return i||M?(E?E(b):b&&(this._writableState?this._writableState.errorEmitted||(this._writableState.errorEmitted=!0,process.nextTick(C,this,b)):process.nextTick(C,this,b)),this):(this._readableState&&(this._readableState.destroyed=!0),this._writableState&&(this._writableState.destroyed=!0),this._destroy(b||null,function(h){!E&&h?I._writableState?I._writableState.errorEmitted?process.nextTick(A,I):(I._writableState.errorEmitted=!0,process.nextTick(O,I,h)):process.nextTick(O,I,h):E?(process.nextTick(A,I),E(h)):process.nextTick(A,I)}),this)},undestroy:function(){this._readableState&&(this._readableState.destroyed=!1,this._readableState.reading=!1,this._readableState.ended=!1,this._readableState.endEmitted=!1),this._writableState&&(this._writableState.destroyed=!1,this._writableState.ended=!1,this._writableState.ending=!1,this._writableState.finalCalled=!1,this._writableState.prefinished=!1,this._writableState.finished=!1,this._writableState.errorEmitted=!1)},errorOrDestroy:function(b,E){var I=b._readableState,i=b._writableState;I&&I.autoDestroy||i&&i.autoDestroy?b.destroy(E):b.emit("error",E)}}},8610:(u2,O,A)=>{var C=A(4281).q.ERR_STREAM_PREMATURE_CLOSE;function b(){}u2.exports=function E(I,i,M){if(typeof i=="function")return E(I,null,i);i||(i={}),M=function(B){var _=!1;return function(){if(!_){_=!0;for(var L=arguments.length,N=new Array(L),F=0;F<L;F++)N[F]=arguments[F];B.apply(this,N)}}}(M||b);var h=i.readable||i.readable!==!1&&I.readable,a=i.writable||i.writable!==!1&&I.writable,o=function(){I.writable||m()},s=I._writableState&&I._writableState.finished,m=function(){a=!1,s=!0,h||M.call(I)},x=I._readableState&&I._readableState.endEmitted,S=function(){h=!1,x=!0,a||M.call(I)},p=function(B){M.call(I,B)},y=function(){var B;return h&&!x?(I._readableState&&I._readableState.ended||(B=new C),M.call(I,B)):a&&!s?(I._writableState&&I._writableState.ended||(B=new C),M.call(I,B)):void 0},g=function(){I.req.on("finish",m)};return function(B){return B.setHeader&&typeof B.abort=="function"}(I)?(I.on("complete",m),I.on("abort",y),I.req?g():I.on("request",g)):a&&!I._writableState&&(I.on("end",o),I.on("close",o)),I.on("end",S),I.on("finish",m),i.error!==!1&&I.on("error",p),I.on("close",y),function(){I.removeListener("complete",m),I.removeListener("abort",y),I.removeListener("request",g),I.req&&I.req.removeListener("finish",m),I.removeListener("end",o),I.removeListener("close",o),I.removeListener("finish",m),I.removeListener("end",S),I.removeListener("error",p),I.removeListener("close",y)}}},5167:u2=>{u2.exports=function(){throw new Error("Readable.from is not available in the browser")}},9946:(u2,O,A)=>{var C,b=A(4281).q,E=b.ERR_MISSING_ARGS,I=b.ERR_STREAM_DESTROYED;function i(s){if(s)throw s}function M(s,m,x,S){S=function(g){var B=!1;return function(){B||(B=!0,g.apply(void 0,arguments))}}(S);var p=!1;s.on("close",function(){p=!0}),C===void 0&&(C=A(8610)),C(s,{readable:m,writable:x},function(g){if(g)return S(g);p=!0,S()});var y=!1;return function(g){if(!p&&!y)return y=!0,function(B){return B.setHeader&&typeof B.abort=="function"}(s)?s.abort():typeof s.destroy=="function"?s.destroy():void S(g||new I("pipe"))}}function h(s){s()}function a(s,m){return s.pipe(m)}function o(s){return s.length?typeof s[s.length-1]!="function"?i:s.pop():i}u2.exports=function(){for(var s=arguments.length,m=new Array(s),x=0;x<s;x++)m[x]=arguments[x];var S,p=o(m);if(Array.isArray(m[0])&&(m=m[0]),m.length<2)throw new E("streams");var y=m.map(function(g,B){var _=B<m.length-1;return M(g,_,B>0,function(L){S||(S=L),L&&y.forEach(h),_||(y.forEach(h),p(S))})});return m.reduce(a)}},2457:(u2,O,A)=>{var C=A(4281).q.ERR_INVALID_OPT_VALUE;u2.exports={getHighWaterMark:function(b,E,I,i){var M=function(h,a,o){return h.highWaterMark!=null?h.highWaterMark:a?h[o]:null}(E,i,I);if(M!=null){if(!isFinite(M)||Math.floor(M)!==M||M<0)throw new C(i?I:"highWaterMark",M);return Math.floor(M)}return b.objectMode?16:16384}}},2503:(u2,O,A)=>{u2.exports=A(7187).EventEmitter},8473:(u2,O,A)=>{(O=u2.exports=A(9481)).Stream=O,O.Readable=O,O.Writable=A(4229),O.Duplex=A(6753),O.Transform=A(4605),O.PassThrough=A(2725),O.finished=A(8610),O.pipeline=A(9946)},9785:(u2,O,A)=>{var C=A(8764).Buffer,b=A(5717),E=A(3349),I=new Array(16),i=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],M=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],h=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],a=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11],o=[0,1518500249,1859775393,2400959708,2840853838],s=[1352829926,1548603684,1836072691,2053994217,0];function m(){E.call(this,64),this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878,this._e=3285377520}function x(_,L){return _<<L|_>>>32-L}function S(_,L,N,F,z,Q,c2,d){return x(_+(L^N^F)+Q+c2|0,d)+z|0}function p(_,L,N,F,z,Q,c2,d){return x(_+(L&N|~L&F)+Q+c2|0,d)+z|0}function y(_,L,N,F,z,Q,c2,d){return x(_+((L|~N)^F)+Q+c2|0,d)+z|0}function g(_,L,N,F,z,Q,c2,d){return x(_+(L&F|N&~F)+Q+c2|0,d)+z|0}function B(_,L,N,F,z,Q,c2,d){return x(_+(L^(N|~F))+Q+c2|0,d)+z|0}b(m,E),m.prototype._update=function(){for(var _=I,L=0;L<16;++L)_[L]=this._block.readInt32LE(4*L);for(var N=0|this._a,F=0|this._b,z=0|this._c,Q=0|this._d,c2=0|this._e,d=0|this._a,T=0|this._b,u=0|this._c,t=0|this._d,e=0|this._e,r=0;r<80;r+=1){var c,P;r<16?(c=S(N,F,z,Q,c2,_[i[r]],o[0],h[r]),P=B(d,T,u,t,e,_[M[r]],s[0],a[r])):r<32?(c=p(N,F,z,Q,c2,_[i[r]],o[1],h[r]),P=g(d,T,u,t,e,_[M[r]],s[1],a[r])):r<48?(c=y(N,F,z,Q,c2,_[i[r]],o[2],h[r]),P=y(d,T,u,t,e,_[M[r]],s[2],a[r])):r<64?(c=g(N,F,z,Q,c2,_[i[r]],o[3],h[r]),P=p(d,T,u,t,e,_[M[r]],s[3],a[r])):(c=B(N,F,z,Q,c2,_[i[r]],o[4],h[r]),P=S(d,T,u,t,e,_[M[r]],s[4],a[r])),N=c2,c2=Q,Q=x(z,10),z=F,F=c,d=e,e=t,t=x(u,10),u=T,T=P}var K=this._b+z+t|0;this._b=this._c+Q+e|0,this._c=this._d+c2+d|0,this._d=this._e+N+T|0,this._e=this._a+F+u|0,this._a=K},m.prototype._digest=function(){this._block[this._blockOffset++]=128,this._blockOffset>56&&(this._block.fill(0,this._blockOffset,64),this._update(),this._blockOffset=0),this._block.fill(0,this._blockOffset,56),this._block.writeUInt32LE(this._length[0],56),this._block.writeUInt32LE(this._length[1],60),this._update();var _=C.alloc?C.alloc(20):new C(20);return _.writeInt32LE(this._a,0),_.writeInt32LE(this._b,4),_.writeInt32LE(this._c,8),_.writeInt32LE(this._d,12),_.writeInt32LE(this._e,16),_},u2.exports=m},9509:(u2,O,A)=>{var C=A(8764),b=C.Buffer;function E(i,M){for(var h in i)M[h]=i[h]}function I(i,M,h){return b(i,M,h)}b.from&&b.alloc&&b.allocUnsafe&&b.allocUnsafeSlow?u2.exports=C:(E(C,O),O.Buffer=I),I.prototype=Object.create(b.prototype),E(b,I),I.from=function(i,M,h){if(typeof i=="number")throw new TypeError("Argument must not be a number");return b(i,M,h)},I.alloc=function(i,M,h){if(typeof i!="number")throw new TypeError("Argument must be a number");var a=b(i);return M!==void 0?typeof h=="string"?a.fill(M,h):a.fill(M):a.fill(0),a},I.allocUnsafe=function(i){if(typeof i!="number")throw new TypeError("Argument must be a number");return b(i)},I.allocUnsafeSlow=function(i){if(typeof i!="number")throw new TypeError("Argument must be a number");return C.SlowBuffer(i)}},4189:(u2,O,A)=>{var C=A(9509).Buffer;function b(E,I){this._block=C.alloc(E),this._finalSize=I,this._blockSize=E,this._len=0}b.prototype.update=function(E,I){typeof E=="string"&&(I=I||"utf8",E=C.from(E,I));for(var i=this._block,M=this._blockSize,h=E.length,a=this._len,o=0;o<h;){for(var s=a%M,m=Math.min(h-o,M-s),x=0;x<m;x++)i[s+x]=E[o+x];o+=m,(a+=m)%M==0&&this._update(i)}return this._len+=h,this},b.prototype.digest=function(E){var I=this._len%this._blockSize;this._block[I]=128,this._block.fill(0,I+1),I>=this._finalSize&&(this._update(this._block),this._block.fill(0));var i=8*this._len;if(i<=4294967295)this._block.writeUInt32BE(i,this._blockSize-4);else{var M=(4294967295&i)>>>0,h=(i-M)/4294967296;this._block.writeUInt32BE(h,this._blockSize-8),this._block.writeUInt32BE(M,this._blockSize-4)}this._update(this._block);var a=this._hash();return E?a.toString(E):a},b.prototype._update=function(){throw new Error("_update must be implemented by subclass")},u2.exports=b},9072:(u2,O,A)=>{var C=u2.exports=function(b){b=b.toLowerCase();var E=C[b];if(!E)throw new Error(b+" is not supported (we accept pull requests)");return new E};C.sha=A(4448),C.sha1=A(8336),C.sha224=A(8432),C.sha256=A(7499),C.sha384=A(1686),C.sha512=A(7816)},4448:(u2,O,A)=>{var C=A(5717),b=A(4189),E=A(9509).Buffer,I=[1518500249,1859775393,-1894007588,-899497514],i=new Array(80);function M(){this.init(),this._w=i,b.call(this,64,56)}function h(o){return o<<30|o>>>2}function a(o,s,m,x){return o===0?s&m|~s&x:o===2?s&m|s&x|m&x:s^m^x}C(M,b),M.prototype.init=function(){return this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878,this._e=3285377520,this},M.prototype._update=function(o){for(var s,m=this._w,x=0|this._a,S=0|this._b,p=0|this._c,y=0|this._d,g=0|this._e,B=0;B<16;++B)m[B]=o.readInt32BE(4*B);for(;B<80;++B)m[B]=m[B-3]^m[B-8]^m[B-14]^m[B-16];for(var _=0;_<80;++_){var L=~~(_/20),N=0|((s=x)<<5|s>>>27)+a(L,S,p,y)+g+m[_]+I[L];g=y,y=p,p=h(S),S=x,x=N}this._a=x+this._a|0,this._b=S+this._b|0,this._c=p+this._c|0,this._d=y+this._d|0,this._e=g+this._e|0},M.prototype._hash=function(){var o=E.allocUnsafe(20);return o.writeInt32BE(0|this._a,0),o.writeInt32BE(0|this._b,4),o.writeInt32BE(0|this._c,8),o.writeInt32BE(0|this._d,12),o.writeInt32BE(0|this._e,16),o},u2.exports=M},8336:(u2,O,A)=>{var C=A(5717),b=A(4189),E=A(9509).Buffer,I=[1518500249,1859775393,-1894007588,-899497514],i=new Array(80);function M(){this.init(),this._w=i,b.call(this,64,56)}function h(s){return s<<5|s>>>27}function a(s){return s<<30|s>>>2}function o(s,m,x,S){return s===0?m&x|~m&S:s===2?m&x|m&S|x&S:m^x^S}C(M,b),M.prototype.init=function(){return this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878,this._e=3285377520,this},M.prototype._update=function(s){for(var m,x=this._w,S=0|this._a,p=0|this._b,y=0|this._c,g=0|this._d,B=0|this._e,_=0;_<16;++_)x[_]=s.readInt32BE(4*_);for(;_<80;++_)x[_]=(m=x[_-3]^x[_-8]^x[_-14]^x[_-16])<<1|m>>>31;for(var L=0;L<80;++L){var N=~~(L/20),F=h(S)+o(N,p,y,g)+B+x[L]+I[N]|0;B=g,g=y,y=a(p),p=S,S=F}this._a=S+this._a|0,this._b=p+this._b|0,this._c=y+this._c|0,this._d=g+this._d|0,this._e=B+this._e|0},M.prototype._hash=function(){var s=E.allocUnsafe(20);return s.writeInt32BE(0|this._a,0),s.writeInt32BE(0|this._b,4),s.writeInt32BE(0|this._c,8),s.writeInt32BE(0|this._d,12),s.writeInt32BE(0|this._e,16),s},u2.exports=M},8432:(u2,O,A)=>{var C=A(5717),b=A(7499),E=A(4189),I=A(9509).Buffer,i=new Array(64);function M(){this.init(),this._w=i,E.call(this,64,56)}C(M,b),M.prototype.init=function(){return this._a=3238371032,this._b=914150663,this._c=812702999,this._d=4144912697,this._e=4290775857,this._f=1750603025,this._g=1694076839,this._h=3204075428,this},M.prototype._hash=function(){var h=I.allocUnsafe(28);return h.writeInt32BE(this._a,0),h.writeInt32BE(this._b,4),h.writeInt32BE(this._c,8),h.writeInt32BE(this._d,12),h.writeInt32BE(this._e,16),h.writeInt32BE(this._f,20),h.writeInt32BE(this._g,24),h},u2.exports=M},7499:(u2,O,A)=>{var C=A(5717),b=A(4189),E=A(9509).Buffer,I=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],i=new Array(64);function M(){this.init(),this._w=i,b.call(this,64,56)}function h(x,S,p){return p^x&(S^p)}function a(x,S,p){return x&S|p&(x|S)}function o(x){return(x>>>2|x<<30)^(x>>>13|x<<19)^(x>>>22|x<<10)}function s(x){return(x>>>6|x<<26)^(x>>>11|x<<21)^(x>>>25|x<<7)}function m(x){return(x>>>7|x<<25)^(x>>>18|x<<14)^x>>>3}C(M,b),M.prototype.init=function(){return this._a=1779033703,this._b=3144134277,this._c=1013904242,this._d=2773480762,this._e=1359893119,this._f=2600822924,this._g=528734635,this._h=1541459225,this},M.prototype._update=function(x){for(var S,p=this._w,y=0|this._a,g=0|this._b,B=0|this._c,_=0|this._d,L=0|this._e,N=0|this._f,F=0|this._g,z=0|this._h,Q=0;Q<16;++Q)p[Q]=x.readInt32BE(4*Q);for(;Q<64;++Q)p[Q]=0|(((S=p[Q-2])>>>17|S<<15)^(S>>>19|S<<13)^S>>>10)+p[Q-7]+m(p[Q-15])+p[Q-16];for(var c2=0;c2<64;++c2){var d=z+s(L)+h(L,N,F)+I[c2]+p[c2]|0,T=o(y)+a(y,g,B)|0;z=F,F=N,N=L,L=_+d|0,_=B,B=g,g=y,y=d+T|0}this._a=y+this._a|0,this._b=g+this._b|0,this._c=B+this._c|0,this._d=_+this._d|0,this._e=L+this._e|0,this._f=N+this._f|0,this._g=F+this._g|0,this._h=z+this._h|0},M.prototype._hash=function(){var x=E.allocUnsafe(32);return x.writeInt32BE(this._a,0),x.writeInt32BE(this._b,4),x.writeInt32BE(this._c,8),x.writeInt32BE(this._d,12),x.writeInt32BE(this._e,16),x.writeInt32BE(this._f,20),x.writeInt32BE(this._g,24),x.writeInt32BE(this._h,28),x},u2.exports=M},1686:(u2,O,A)=>{var C=A(5717),b=A(7816),E=A(4189),I=A(9509).Buffer,i=new Array(160);function M(){this.init(),this._w=i,E.call(this,128,112)}C(M,b),M.prototype.init=function(){return this._ah=3418070365,this._bh=1654270250,this._ch=2438529370,this._dh=355462360,this._eh=1731405415,this._fh=2394180231,this._gh=3675008525,this._hh=1203062813,this._al=3238371032,this._bl=914150663,this._cl=812702999,this._dl=4144912697,this._el=4290775857,this._fl=1750603025,this._gl=1694076839,this._hl=3204075428,this},M.prototype._hash=function(){var h=I.allocUnsafe(48);function a(o,s,m){h.writeInt32BE(o,m),h.writeInt32BE(s,m+4)}return a(this._ah,this._al,0),a(this._bh,this._bl,8),a(this._ch,this._cl,16),a(this._dh,this._dl,24),a(this._eh,this._el,32),a(this._fh,this._fl,40),h},u2.exports=M},7816:(u2,O,A)=>{var C=A(5717),b=A(4189),E=A(9509).Buffer,I=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591],i=new Array(160);function M(){this.init(),this._w=i,b.call(this,128,112)}function h(g,B,_){return _^g&(B^_)}function a(g,B,_){return g&B|_&(g|B)}function o(g,B){return(g>>>28|B<<4)^(B>>>2|g<<30)^(B>>>7|g<<25)}function s(g,B){return(g>>>14|B<<18)^(g>>>18|B<<14)^(B>>>9|g<<23)}function m(g,B){return(g>>>1|B<<31)^(g>>>8|B<<24)^g>>>7}function x(g,B){return(g>>>1|B<<31)^(g>>>8|B<<24)^(g>>>7|B<<25)}function S(g,B){return(g>>>19|B<<13)^(B>>>29|g<<3)^g>>>6}function p(g,B){return(g>>>19|B<<13)^(B>>>29|g<<3)^(g>>>6|B<<26)}function y(g,B){return g>>>0<B>>>0?1:0}C(M,b),M.prototype.init=function(){return this._ah=1779033703,this._bh=3144134277,this._ch=1013904242,this._dh=2773480762,this._eh=1359893119,this._fh=2600822924,this._gh=528734635,this._hh=1541459225,this._al=4089235720,this._bl=2227873595,this._cl=4271175723,this._dl=1595750129,this._el=2917565137,this._fl=725511199,this._gl=4215389547,this._hl=327033209,this},M.prototype._update=function(g){for(var B=this._w,_=0|this._ah,L=0|this._bh,N=0|this._ch,F=0|this._dh,z=0|this._eh,Q=0|this._fh,c2=0|this._gh,d=0|this._hh,T=0|this._al,u=0|this._bl,t=0|this._cl,e=0|this._dl,r=0|this._el,c=0|this._fl,P=0|this._gl,K=0|this._hl,W=0;W<32;W+=2)B[W]=g.readInt32BE(4*W),B[W+1]=g.readInt32BE(4*W+4);for(;W<160;W+=2){var o2=B[W-30],r2=B[W-30+1],b2=m(o2,r2),_2=x(r2,o2),$=S(o2=B[W-4],r2=B[W-4+1]),Z=p(r2,o2),p2=B[W-14],w2=B[W-14+1],R2=B[W-32],P2=B[W-32+1],J=_2+w2|0,a2=b2+p2+y(J,_2)|0;a2=(a2=a2+$+y(J=J+Z|0,Z)|0)+R2+y(J=J+P2|0,P2)|0,B[W]=a2,B[W+1]=J}for(var Y=0;Y<160;Y+=2){a2=B[Y],J=B[Y+1];var G=a(_,L,N),i2=a(T,u,t),v2=o(_,T),g2=o(T,_),w=s(z,r),k=s(r,z),v=I[Y],D=I[Y+1],j=h(z,Q,c2),q=h(r,c,P),V=K+k|0,l2=d+w+y(V,K)|0;l2=(l2=(l2=l2+j+y(V=V+q|0,q)|0)+v+y(V=V+D|0,D)|0)+a2+y(V=V+J|0,J)|0;var n2=g2+i2|0,t2=v2+G+y(n2,g2)|0;d=c2,K=P,c2=Q,P=c,Q=z,c=r,z=F+l2+y(r=e+V|0,e)|0,F=N,e=t,N=L,t=u,L=_,u=T,_=l2+t2+y(T=V+n2|0,V)|0}this._al=this._al+T|0,this._bl=this._bl+u|0,this._cl=this._cl+t|0,this._dl=this._dl+e|0,this._el=this._el+r|0,this._fl=this._fl+c|0,this._gl=this._gl+P|0,this._hl=this._hl+K|0,this._ah=this._ah+_+y(this._al,T)|0,this._bh=this._bh+L+y(this._bl,u)|0,this._ch=this._ch+N+y(this._cl,t)|0,this._dh=this._dh+F+y(this._dl,e)|0,this._eh=this._eh+z+y(this._el,r)|0,this._fh=this._fh+Q+y(this._fl,c)|0,this._gh=this._gh+c2+y(this._gl,P)|0,this._hh=this._hh+d+y(this._hl,K)|0},M.prototype._hash=function(){var g=E.allocUnsafe(64);function B(_,L,N){g.writeInt32BE(_,N),g.writeInt32BE(L,N+4)}return B(this._ah,this._al,0),B(this._bh,this._bl,8),B(this._ch,this._cl,16),B(this._dh,this._dl,24),B(this._eh,this._el,32),B(this._fh,this._fl,40),B(this._gh,this._gl,48),B(this._hh,this._hl,56),g},u2.exports=M},2830:(u2,O,A)=>{u2.exports=b;var C=A(7187).EventEmitter;function b(){C.call(this)}A(5717)(b,C),b.Readable=A(9481),b.Writable=A(4229),b.Duplex=A(6753),b.Transform=A(4605),b.PassThrough=A(2725),b.finished=A(8610),b.pipeline=A(9946),b.Stream=b,b.prototype.pipe=function(E,I){var i=this;function M(S){E.writable&&E.write(S)===!1&&i.pause&&i.pause()}function h(){i.readable&&i.resume&&i.resume()}i.on("data",M),E.on("drain",h),E._isStdio||I&&I.end===!1||(i.on("end",o),i.on("close",s));var a=!1;function o(){a||(a=!0,E.end())}function s(){a||(a=!0,typeof E.destroy=="function"&&E.destroy())}function m(S){if(x(),C.listenerCount(this,"error")===0)throw S}function x(){i.removeListener("data",M),E.removeListener("drain",h),i.removeListener("end",o),i.removeListener("close",s),i.removeListener("error",m),E.removeListener("error",m),i.removeListener("end",x),i.removeListener("close",x),E.removeListener("close",x)}return i.on("error",m),E.on("error",m),i.on("end",x),i.on("close",x),E.on("close",x),E.emit("pipe",i),E}},2553:(u2,O,A)=>{var C=A(9509).Buffer,b=C.isEncoding||function(x){switch((x=""+x)&&x.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return!0;default:return!1}};function E(x){var S;switch(this.encoding=function(p){var y=function(g){if(!g)return"utf8";for(var B;;)switch(g){case"utf8":case"utf-8":return"utf8";case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return"utf16le";case"latin1":case"binary":return"latin1";case"base64":case"ascii":case"hex":return g;default:if(B)return;g=(""+g).toLowerCase(),B=!0}}(p);if(typeof y!="string"&&(C.isEncoding===b||!b(p)))throw new Error("Unknown encoding: "+p);return y||p}(x),this.encoding){case"utf16le":this.text=M,this.end=h,S=4;break;case"utf8":this.fillLast=i,S=4;break;case"base64":this.text=a,this.end=o,S=3;break;default:return this.write=s,void(this.end=m)}this.lastNeed=0,this.lastTotal=0,this.lastChar=C.allocUnsafe(S)}function I(x){return x<=127?0:x>>5==6?2:x>>4==14?3:x>>3==30?4:x>>6==2?-1:-2}function i(x){var S=this.lastTotal-this.lastNeed,p=function(y,g,B){if((192&g[0])!=128)return y.lastNeed=0,"�";if(y.lastNeed>1&&g.length>1){if((192&g[1])!=128)return y.lastNeed=1,"�";if(y.lastNeed>2&&g.length>2&&(192&g[2])!=128)return y.lastNeed=2,"�"}}(this,x);return p!==void 0?p:this.lastNeed<=x.length?(x.copy(this.lastChar,S,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal)):(x.copy(this.lastChar,S,0,x.length),void(this.lastNeed-=x.length))}function M(x,S){if((x.length-S)%2==0){var p=x.toString("utf16le",S);if(p){var y=p.charCodeAt(p.length-1);if(y>=55296&&y<=56319)return this.lastNeed=2,this.lastTotal=4,this.lastChar[0]=x[x.length-2],this.lastChar[1]=x[x.length-1],p.slice(0,-1)}return p}return this.lastNeed=1,this.lastTotal=2,this.lastChar[0]=x[x.length-1],x.toString("utf16le",S,x.length-1)}function h(x){var S=x&&x.length?this.write(x):"";if(this.lastNeed){var p=this.lastTotal-this.lastNeed;return S+this.lastChar.toString("utf16le",0,p)}return S}function a(x,S){var p=(x.length-S)%3;return p===0?x.toString("base64",S):(this.lastNeed=3-p,this.lastTotal=3,p===1?this.lastChar[0]=x[x.length-1]:(this.lastChar[0]=x[x.length-2],this.lastChar[1]=x[x.length-1]),x.toString("base64",S,x.length-p))}function o(x){var S=x&&x.length?this.write(x):"";return this.lastNeed?S+this.lastChar.toString("base64",0,3-this.lastNeed):S}function s(x){return x.toString(this.encoding)}function m(x){return x&&x.length?this.write(x):""}O.s=E,E.prototype.write=function(x){if(x.length===0)return"";var S,p;if(this.lastNeed){if((S=this.fillLast(x))===void 0)return"";p=this.lastNeed,this.lastNeed=0}else p=0;return p<x.length?S?S+this.text(x,p):this.text(x,p):S||""},E.prototype.end=function(x){var S=x&&x.length?this.write(x):"";return this.lastNeed?S+"�":S},E.prototype.text=function(x,S){var p=function(g,B,_){var L=B.length-1;if(L<_)return 0;var N=I(B[L]);return N>=0?(N>0&&(g.lastNeed=N-1),N):--L<_||N===-2?0:(N=I(B[L]))>=0?(N>0&&(g.lastNeed=N-2),N):--L<_||N===-2?0:(N=I(B[L]))>=0?(N>0&&(N===2?N=0:g.lastNeed=N-3),N):0}(this,x,S);if(!this.lastNeed)return x.toString("utf8",S);this.lastTotal=p;var y=x.length-(p-this.lastNeed);return x.copy(this.lastChar,0,y),x.toString("utf8",S,y)},E.prototype.fillLast=function(x){if(this.lastNeed<=x.length)return x.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);x.copy(this.lastChar,this.lastTotal-this.lastNeed,0,x.length),this.lastNeed-=x.length}},4927:(u2,O,A)=>{function C(b){try{if(!A.g.localStorage)return!1}catch{return!1}var E=A.g.localStorage[b];return E!=null&&String(E).toLowerCase()==="true"}u2.exports=function(b,E){if(C("noDeprecation"))return b;var I=!1;return function(){if(!I){if(C("throwDeprecation"))throw new Error(E);C("traceDeprecation")?console.trace(E):console.warn(E),I=!0}return b.apply(this,arguments)}}},6601:()=>{},9214:()=>{},5568:()=>{},2361:()=>{},4616:()=>{},8597:u2=>{u2.exports={i8:"6.5.4"}}},d1={};function x3(u2){var O=d1[u2];if(O!==void 0)return O.exports;var A=d1[u2]={id:u2,loaded:!1,exports:{}};return Y2[u2].call(A.exports,A,A.exports,x3),A.loaded=!0,A.exports}x3.n=u2=>{var O=u2&&u2.__esModule?()=>u2.default:()=>u2;return x3.d(O,{a:O}),O},x3.d=(u2,O)=>{for(var A in O)x3.o(O,A)&&!x3.o(u2,A)&&Object.defineProperty(u2,A,{enumerable:!0,get:O[A]})},x3.g=function(){if(typeof globalThis=="object")return globalThis;try{return this||new Function("return this")()}catch{if(typeof window=="object")return window}}(),x3.o=(u2,O)=>Object.prototype.hasOwnProperty.call(u2,O),x3.nmd=u2=>(u2.paths=[],u2.children||(u2.children=[]),u2);var e1={};return(()=>{x3.d(e1,{default:()=>i});var u2=x3(546),O=x3(2716),A=x3(7730),C=x3(3604),b=x3(9528),E=x3(1191),I=x3(8764).Buffer;const i=function(M,h,a,o){var s=(0,O.getPublicKeyFromCoseKey)(h),m=O.CoseSign1.fromCbor(M);if(a){var x=A.Decoder.decode(I.from(M,"hex")),S=x.value[2],p=x==null?void 0:x.value[1],y=!(!p||!p.get("hashed"))&&p.get("hashed");if((S==null||S.toString()===""&&a!=="")&&(m=function(F,z){var Q,c2=A.Decoder.decode(I.from(F,"hex"));if(!(c2.value instanceof Array))throw Error("Invalid CBOR");if(c2.value.length!==4)throw Error("Invalid COSE_SIGN1");var d=c2.value[0];try{if(!((Q=A.Decoder.decode(d).value)instanceof Map))throw Error()}catch{throw Error("Invalid protected")}var T=c2.value[1];if(!(T instanceof Map))throw Error("Invalid unprotected");var u=c2.value[3];return new O.CoseSign1({protectedMap:Q,unProtectedMap:T,payload:z,signature:u})}(M,y?I.from((0,E.blake2bHex)(a,void 0,28)):I.from(a))),y&&!/^[0-9a-fA-F]+$/.test(a)&&(a=(0,E.blake2bHex)(a,void 0,28)),y&&S&&S.toString("hex")!==a||!y&&S&&S.toString("utf8")!==a)return!1}if(o){var g=o,B=1,_=b.utils.getAddressFromBech32(o),L={hash:new u2.Bip32PublicKey(s).toPublicKey().hash().toString("hex"),type:0};if(o.startsWith("addr")){if(o.startsWith("addr_test1")&&(B=0),_.stakeCredential){if(o!==new C.BaseAddress(B,L,_.stakeCredential).getBech32()){var N=new C.RewardAddress(B,_.stakeCredential).getBech32();if(new C.RewardAddress(B,L).getBech32()!==N)return!1}}else if(new C.EnterpriseAddress(B,L).getBech32()!==g)return!1}else if(!o.startsWith("stake")||(o.startsWith("stake_test1")&&(B=0),new C.RewardAddress(B,L).getBech32()!==g))return!1}return m.verifySignature({publicKeyBuffer:s})}})(),e1.default})())})(u8);var y7=u8.exports;const w7=b7(y7);function _7(V3){try{return w7.apply(null,V3)}catch{return!1}}exports.TextDecoder=v7.TextDecoder;exports.main=_7;
