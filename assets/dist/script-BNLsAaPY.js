import{b as m,l as C,c as P,d as b,e as v,f as E,i as W,j as T,p as A}from"./actions-DcGaa8HS.js";import{d as u,s as l,t as h,E as o,e as y,f as g,i as x,a as s,c as i,h as w,j as p,r,N as S,u as L,k as f,C as k,l as H}from"./util-1s-pcq2u.js";const N=async e=>{let t;try{t=await u()}catch(n){return{success:!1,data:n}}const a=await t.getNetwork();try{let n=null;if(t.type!=="Typhon"){const c=await m(a);if(!c.success)return c;n=c.data}return{success:!0,data:{network:a,transaction:await t.multiSend(e,n)}}}catch(n){return{success:!1,data:n}}},{hexToBech32:M}=f;window.addEventListener("alpine:init",()=>{Alpine.data("cardanoPress",()=>({isAvailable:window.cardano!==void 0&&window.cardanoPress!==void 0,isConnected:!1,isProcessing:!1,showModal:!1,openDropdown:!1,connectedExtension:"",selectedHandle:"",supportedWallets:l,has(e){return this[h(e,"has")]},isDisabled(e=null){return!!(!this.isAvailable||this.isProcessing||e!==null&&!this.has(e))},walletAvailable(e){return this.isAvailable&&this.has(e)},getWalletHandle(e){return this.selectedHandle||e},refreshWallets(){l.forEach(e=>{this[h(e,"has")]=o.hasWallet(e)})},async init(){if(this.refreshWallets(),this.$watch("showModal",()=>{this.refreshWallets()}),y.logged?(this.connectedExtension=g(),this.selectedHandle=this.$root.dataset.handle,this.isConnected=!!this.connectedExtension,window.cardanoPress.extension=this.connectedExtension,this.isConnected&&!x()&&(s({type:"success",text:i.connected}),w(!0))):(x()&&w(!1),g()&&p("")),this.isAvailable&&this.connectedExtension==="Nami"){const e=await u();e.cardano.experimental.on("networkChange",t=>this.handleLogout(t,0)),e.cardano.experimental.on("accountChange",t=>this.handleLogout(-1,t))}},clipboardValue(e){r("clipboardValue"),window.navigator.clipboard.writeText(e).then(()=>{s({id:"clipboardValue",type:"info",text:i.clipboardCopy})})},async walletConnect(e){this.isConnected?await this.handleReconnect(e):await this.handleConnect(e)},async handleConnect(e){this.isProcessing=!0;try{const t=await o.getWallet(e);s({id:"loginConnect",type:"info",text:i.connecting}),await this.handleLogin(t)}catch(t){s({type:"error",text:t})}this.isProcessing=!1},async handleLogin(e){const t=await C(e);if(t.success){if(r("loginConnect"),s({type:"success",text:t.data.message}),p(e.type),t.data.reload)return setTimeout(()=>{window.location.reload()},500);w(!0),this.showModal=!1,this.isConnected=!0,y.logged=!0,this.connectedExtension=e.type,window.cardanoPress.extension=this.connectedExtension}else s({type:"error",text:t.data})},async handleLogout(e,t){if(this.isConnected)try{const a=await u(),n=0<=e?S[e]:await a.getNetwork(),c=t!==0?M(t[0]):await a.getChangeAddress(),d=await P(n,c);if(d.success){if(s({type:"success",text:d.data.message}),d.data.reload)return w(!1),p(""),setTimeout(()=>{window.location.reload()},500)}else s({type:"error",text:d.data.message})}catch(a){s({type:"error",text:a})}},async handleReconnect(e){this.isProcessing=!0;try{const t=await o.getWallet(e);s({id:"reconnect",type:"info",text:i.reconnecting});const a=await b(t);if(r("reconnect"),a.success)return s({type:"success",text:i.reconnected}),p(t.type),setTimeout(()=>{window.location.reload()},500);s({type:"error",text:a.data})}catch(t){s({type:"error",text:t})}this.isProcessing=!1},async handleSync(){s({id:"sync",type:"info",text:i.walletSyncing}),this.isProcessing=!0;const e=await v();r("sync"),e.success?(s({type:"success",text:e.data.message}),e.data.updated&&s({type:"info",text:i.newAssetsPulled})):s({type:"error",text:e.data}),this.isProcessing=!1},async handleSave(){s({id:"save",type:"info",text:i.handleSaving}),this.isProcessing=!0;const e=await E(this.selectedHandle);r("save"),s({type:e.success?"success":"error",text:e.data}),this.isProcessing=!1}}))}),window.cardanoPress={...y,api:{...W,...L,...f},browser:{Extensions:o,supports:l,isSupported:e=>o.isSupported(e),...l.reduce((e,t)=>({...e,[h(t,"has")]:async()=>await o.hasWallet(t),[h(t,"get")]:async()=>await o.getWallet(t)}),{})},csl:k,extension:"",wallet:{delegationTx:T,paymentTx:A,multisendTx:N,...H}};
