import{l as m,a as C,h as P,b,c as v,d as E,e as W,p as A,m as T}from"./actions-it1j4PIX.js";import{s as d,t as r,E as i,c as w,g as p,i as g,a as s,b as a,d as l,e as h,f as y,r as o,N as L,u as S,h as u,C as H,w as M}from"./util-BHYpzux6.js";const{hexToBech32:N}=u;window.addEventListener("alpine:init",()=>{Alpine.data("cardanoPress",()=>({isAvailable:window.cardano!==void 0&&window.cardanoPress!==void 0,isConnected:!1,isProcessing:!1,showModal:!1,openDropdown:!1,connectedExtension:"",selectedHandle:"",supportedWallets:d,has(e){return this[r(e,"has")]},isDisabled(e=null){return!!(!this.isAvailable||this.isProcessing||e!==null&&!this.has(e))},walletAvailable(e){return this.isAvailable&&this.has(e)},getWalletHandle(e){return this.selectedHandle||e},refreshWallets(){d.forEach(e=>{this[r(e,"has")]=i.hasWallet(e)})},async init(){if(this.refreshWallets(),this.$watch("showModal",()=>{this.refreshWallets()}),w.logged?(this.connectedExtension=p(),this.selectedHandle=this.$root.dataset.handle,this.isConnected=!!this.connectedExtension,window.cardanoPress.extension=this.connectedExtension,this.isConnected&&!g()&&(s({type:"success",text:a.connected}),l(!0))):(g()&&l(!1),p()&&h("")),this.isAvailable&&this.connectedExtension==="Nami"){const e=await y();e.cardano.experimental.on("networkChange",t=>this.handleLogout(t,0)),e.cardano.experimental.on("accountChange",t=>this.handleLogout(-1,t))}},clipboardValue(e){o("clipboardValue"),window.navigator.clipboard.writeText(e).then(()=>{s({id:"clipboardValue",type:"info",text:a.clipboardCopy})})},async walletConnect(e){this.isConnected?await this.handleReconnect(e):await this.handleConnect(e)},async handleConnect(e){this.isProcessing=!0;try{const t=await i.getWallet(e);s({id:"loginConnect",type:"info",text:a.connecting}),await this.handleLogin(t)}catch(t){s({type:"error",text:t})}this.isProcessing=!1},async handleLogin(e){const t=await m(e);if(t.success){if(o("loginConnect"),s({type:"success",text:t.data.message}),h(e.type),t.data.reload)return setTimeout(()=>{window.location.reload()},500);l(!0),this.showModal=!1,this.isConnected=!0,w.logged=!0,this.connectedExtension=e.type,window.cardanoPress.extension=this.connectedExtension}else s({type:"error",text:t.data})},async handleLogout(e,t){if(this.isConnected)try{const n=await y(),x=0<=e?L[e]:await n.getNetwork(),f=t!==0?N(t[0]):await n.getChangeAddress(),c=await C(x,f);if(c.success){if(s({type:"success",text:c.data.message}),c.data.reload)return l(!1),h(""),setTimeout(()=>{window.location.reload()},500)}else s({type:"error",text:c.data.message})}catch(n){s({type:"error",text:n})}},async handleReconnect(e){this.isProcessing=!0;try{const t=await i.getWallet(e);s({id:"reconnect",type:"info",text:a.reconnecting});const n=await P(t);if(o("reconnect"),n.success)return s({type:"success",text:a.reconnected}),h(t.type),setTimeout(()=>{window.location.reload()},500);s({type:"error",text:n.data})}catch(t){s({type:"error",text:t})}this.isProcessing=!1},async handleSync(){s({id:"sync",type:"info",text:a.walletSyncing}),this.isProcessing=!0;const e=await b();o("sync"),e.success?(s({type:"success",text:e.data.message}),e.data.updated&&s({type:"info",text:a.newAssetsPulled})):s({type:"error",text:e.data}),this.isProcessing=!1},async handleSave(){s({id:"save",type:"info",text:a.handleSaving}),this.isProcessing=!0;const e=await v(this.selectedHandle);o("save"),s({type:e.success?"success":"error",text:e.data}),this.isProcessing=!1}}))}),window.cardanoPress={...w,api:{...E,...S,...u},browser:{Extensions:i,supports:d,isSupported:e=>i.isSupported(e),...d.reduce((e,t)=>({...e,[r(t,"has")]:async()=>await i.hasWallet(t),[r(t,"get")]:async()=>await i.getWallet(t)}),{})},csl:H,extension:"",wallet:{delegationTx:W,paymentTx:A,multisendTx:T,...M}};
